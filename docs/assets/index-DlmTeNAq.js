(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();function c(){const t=document.createElement("header");return t.innerHTML="<h1>from Nepal</h1>",t}function d(t){const n=document.createElement("article"),s=t.tags.map(r=>`<span class="tag"><kbd>${r}</kbd></span>`).join(" ");return n.innerHTML=`
    <h2>${t.title}</h2>
    <!--<h3>${t.slug}</h3>-->
    <div class="tags">${s}</div>
    <p>Created: <kbd>${t.createdAt}</kbd> | Modified: <kbd>${t.modifiedAt}</kbd></p>
    <p class="notice">${t.lede}</p>
    ${t.paragraphs.map(r=>`<p>${r}</p>`).join("")}
  `,n}async function p(){try{const n=await(await fetch("/posts.json")).json(),s=document.getElementById("app");if(!s)throw new Error("App container not found");n.posts.forEach(r=>{const e=d(r);s.appendChild(e)})}catch(t){console.error("Error fetching posts:",t)}}async function l(){const t=document.getElementById("app");if(!t)throw new Error("App container not found");const n=c();t.appendChild(n)}async function f(){const t=document.getElementById("app");if(!t)throw new Error("App container not found");const n=document.createElement("footer");n.innerHTML='Posts are also available as a <code>json</code> file at <a href="/posts.json">/posts.json</a>',t.appendChild(n)}function u(){const t=new Date,n=t.getFullYear(),s=String(t.getMonth()+1).padStart(2,"0"),r=String(t.getDate()).padStart(2,"0"),e=String(t.getHours()).padStart(2,"0"),o=String(t.getMinutes()).padStart(2,"0"),a=String(t.getSeconds()).padStart(2,"0");return`${n}-${s}-${r}-${e}-${o}-${a}`}async function m(){const t=u(),n=navigator.userAgent,s={timestamp:t,userAgent:n},r=`https://nice.runasp.net/Analytics/SaveAnalytics?key=visit${t}&data=${encodeURIComponent(JSON.stringify(s))}`;try{const e=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(!e.ok)throw new Error("Network response was not ok");console.log("Visit data saved:",await e.text());const o=`https://nice.runasp.net/Analytics/GetAnalyticsData?key=visit${t}`,a=await fetch(o),i=await a.json();a.ok?console.log("Verification successful, retrieved data:",i):console.error("Verification failed, response was not ok")}catch(e){console.error("Error saving or verifying visit data:",e)}}async function g(){await l(),await p(),await f(),await m()}g();

WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.470 align:start position:0%
 
[Music]

00:00:06.470 --> 00:00:06.480 align:start position:0%
 
 

00:00:06.480 --> 00:00:09.750 align:start position:0%
 
hello<00:00:07.480><c> so</c><00:00:08.200><c> we're</c><00:00:08.360><c> gonna</c><00:00:08.599><c> talk</c><00:00:08.800><c> about</c><00:00:09.040><c> the</c><00:00:09.559><c> net</c>

00:00:09.750 --> 00:00:09.760 align:start position:0%
hello so we're gonna talk about the net
 

00:00:09.760 --> 00:00:11.789 align:start position:0%
hello so we're gonna talk about the net
9<00:00:10.160><c> jit</c><00:00:10.480><c> and</c><00:00:10.639><c> some</c><00:00:10.759><c> of</c><00:00:10.880><c> the</c><00:00:11.000><c> new</c><00:00:11.280><c> updates</c><00:00:11.679><c> that</c>

00:00:11.789 --> 00:00:11.799 align:start position:0%
9 jit and some of the new updates that
 

00:00:11.799 --> 00:00:13.950 align:start position:0%
9 jit and some of the new updates that
are<00:00:11.920><c> in</c><00:00:12.040><c> there</c><00:00:12.200><c> let</c><00:00:12.280><c> me</c><00:00:12.400><c> bring</c><00:00:12.559><c> in</c><00:00:12.719><c> your</c><00:00:12.920><c> slides</c>

00:00:13.950 --> 00:00:13.960 align:start position:0%
are in there let me bring in your slides
 

00:00:13.960 --> 00:00:17.990 align:start position:0%
are in there let me bring in your slides
sure<00:00:14.960><c> there</c><00:00:15.120><c> we</c><00:00:15.600><c> go</c><00:00:16.600><c> now</c><00:00:17.400><c> we</c><00:00:17.600><c> we've</c><00:00:17.720><c> heard</c><00:00:17.920><c> a</c>

00:00:17.990 --> 00:00:18.000 align:start position:0%
sure there we go now we we've heard a
 

00:00:18.000 --> 00:00:19.590 align:start position:0%
sure there we go now we we've heard a
lot<00:00:18.199><c> about</c><00:00:18.520><c> performance</c><00:00:19.080><c> and</c><00:00:19.279><c> some</c><00:00:19.400><c> of</c><00:00:19.480><c> the</c>

00:00:19.590 --> 00:00:19.600 align:start position:0%
lot about performance and some of the
 

00:00:19.600 --> 00:00:21.029 align:start position:0%
lot about performance and some of the
updates<00:00:19.920><c> and</c><00:00:20.000><c> we</c><00:00:20.119><c> heard</c><00:00:20.279><c> from</c><00:00:20.400><c> our</c><00:00:20.560><c> friend</c>

00:00:21.029 --> 00:00:21.039 align:start position:0%
updates and we heard from our friend
 

00:00:21.039 --> 00:00:23.230 align:start position:0%
updates and we heard from our friend
Stephen<00:00:21.519><c> Tobe</c><00:00:21.880><c> about</c><00:00:22.119><c> some</c><00:00:22.240><c> of</c><00:00:22.359><c> the</c><00:00:22.519><c> updates</c>

00:00:23.230 --> 00:00:23.240 align:start position:0%
Stephen Tobe about some of the updates
 

00:00:23.240 --> 00:00:24.830 align:start position:0%
Stephen Tobe about some of the updates
that<00:00:23.400><c> have</c><00:00:23.599><c> happened</c><00:00:24.320><c> feels</c><00:00:24.560><c> like</c><00:00:24.720><c> you're</c>

00:00:24.830 --> 00:00:24.840 align:start position:0%
that have happened feels like you're
 

00:00:24.840 --> 00:00:27.269 align:start position:0%
that have happened feels like you're
going<00:00:24.920><c> to</c><00:00:25.080><c> go</c><00:00:25.240><c> deep</c><00:00:25.480><c> on</c><00:00:25.680><c> some</c><00:00:25.840><c> of</c><00:00:26.000><c> those</c><00:00:26.279><c> topics</c>

00:00:27.269 --> 00:00:27.279 align:start position:0%
going to go deep on some of those topics
 

00:00:27.279 --> 00:00:29.630 align:start position:0%
going to go deep on some of those topics
uh<00:00:27.400><c> we're</c><00:00:27.599><c> GNA</c><00:00:27.960><c> try</c><00:00:28.560><c> you</c><00:00:28.720><c> know</c><00:00:29.039><c> we</c><00:00:29.279><c> can't</c><00:00:29.480><c> get</c>

00:00:29.630 --> 00:00:29.640 align:start position:0%
uh we're GNA try you know we can't get
 

00:00:29.640 --> 00:00:32.030 align:start position:0%
uh we're GNA try you know we can't get
super<00:00:30.199><c> deep</c><00:00:30.480><c> in</c><00:00:30.800><c> in</c><00:00:31.039><c> half</c><00:00:31.160><c> an</c><00:00:31.320><c> hour</c><00:00:31.599><c> but</c><00:00:31.759><c> we'll</c>

00:00:32.030 --> 00:00:32.040 align:start position:0%
super deep in in half an hour but we'll
 

00:00:32.040 --> 00:00:33.590 align:start position:0%
super deep in in half an hour but we'll
we'll<00:00:32.200><c> do</c><00:00:32.360><c> our</c><00:00:32.520><c> best</c><00:00:32.680><c> to</c><00:00:32.840><c> sort</c><00:00:32.960><c> of</c><00:00:33.120><c> give</c><00:00:33.239><c> you</c><00:00:33.360><c> a</c>

00:00:33.590 --> 00:00:33.600 align:start position:0%
we'll do our best to sort of give you a
 

00:00:33.600 --> 00:00:36.510 align:start position:0%
we'll do our best to sort of give you a
flavor<00:00:34.280><c> of</c><00:00:34.879><c> what's</c><00:00:35.160><c> going</c><00:00:35.399><c> on</c><00:00:36.000><c> sort</c><00:00:36.160><c> of</c><00:00:36.280><c> under</c>

00:00:36.510 --> 00:00:36.520 align:start position:0%
flavor of what's going on sort of under
 

00:00:36.520 --> 00:00:39.790 align:start position:0%
flavor of what's going on sort of under
the<00:00:36.680><c> hood</c><00:00:36.920><c> so</c><00:00:37.040><c> to</c><00:00:37.200><c> speak</c><00:00:37.520><c> in</c><00:00:37.800><c> in</c><00:00:38.040><c> the</c><00:00:38.440><c> net</c><00:00:38.640><c> n</c><00:00:39.559><c> all</c>

00:00:39.790 --> 00:00:39.800 align:start position:0%
the hood so to speak in in the net n all
 

00:00:39.800 --> 00:00:41.990 align:start position:0%
the hood so to speak in in the net n all
right<00:00:40.800><c> well</c><00:00:40.960><c> thank</c><00:00:41.079><c> you</c><00:00:41.160><c> so</c><00:00:41.280><c> much</c><00:00:41.399><c> Andy</c><00:00:41.840><c> the</c>

00:00:41.990 --> 00:00:42.000 align:start position:0%
right well thank you so much Andy the
 

00:00:42.000 --> 00:00:46.310 align:start position:0%
right well thank you so much Andy the
stage<00:00:42.239><c> is</c><00:00:42.399><c> yours</c><00:00:43.360><c> okay</c><00:00:44.280><c> um</c><00:00:44.960><c> so</c><00:00:45.960><c> let</c><00:00:46.079><c> me</c><00:00:46.199><c> just</c>

00:00:46.310 --> 00:00:46.320 align:start position:0%
stage is yours okay um so let me just
 

00:00:46.320 --> 00:00:48.069 align:start position:0%
stage is yours okay um so let me just
sort<00:00:46.480><c> of</c><00:00:46.640><c> jump</c><00:00:46.920><c> into</c><00:00:47.239><c> things</c><00:00:47.600><c> because</c><00:00:47.840><c> again</c>

00:00:48.069 --> 00:00:48.079 align:start position:0%
sort of jump into things because again
 

00:00:48.079 --> 00:00:50.229 align:start position:0%
sort of jump into things because again
we<00:00:48.239><c> don't</c><00:00:48.480><c> have</c><00:00:48.640><c> a</c><00:00:48.800><c> super</c><00:00:49.399><c> super</c><00:00:49.680><c> long</c><00:00:50.000><c> time</c>

00:00:50.229 --> 00:00:50.239 align:start position:0%
we don't have a super super long time
 

00:00:50.239 --> 00:00:52.950 align:start position:0%
we don't have a super super long time
frame<00:00:51.079><c> um</c><00:00:51.480><c> every</c><00:00:51.719><c> release</c><00:00:52.199><c> we</c><00:00:52.359><c> try</c><00:00:52.520><c> to</c><00:00:52.640><c> make</c>

00:00:52.950 --> 00:00:52.960 align:start position:0%
frame um every release we try to make
 

00:00:52.960 --> 00:00:54.990 align:start position:0%
frame um every release we try to make
some<00:00:53.359><c> pretty</c><00:00:53.960><c> fundamental</c><00:00:54.399><c> and</c><00:00:54.600><c> important</c>

00:00:54.990 --> 00:00:55.000 align:start position:0%
some pretty fundamental and important
 

00:00:55.000 --> 00:00:58.029 align:start position:0%
some pretty fundamental and important
improvements<00:00:55.680><c> in</c><00:00:55.960><c> the</c><00:00:56.640><c> in</c><00:00:56.800><c> the</c><00:00:56.960><c> ability</c><00:00:57.440><c> ofet</c>

00:00:58.029 --> 00:00:58.039 align:start position:0%
improvements in the in the ability ofet
 

00:00:58.039 --> 00:01:00.110 align:start position:0%
improvements in the in the ability ofet
to<00:00:58.280><c> make</c><00:00:58.440><c> your</c><00:00:58.640><c> programs</c><00:00:59.039><c> run</c><00:00:59.280><c> more</c><00:00:59.559><c> efficient</c>

00:01:00.110 --> 00:01:00.120 align:start position:0%
to make your programs run more efficient
 

00:01:00.120 --> 00:01:01.950 align:start position:0%
to make your programs run more efficient
and<00:01:00.199><c> you've</c><00:01:00.359><c> heard</c><00:01:00.519><c> a</c><00:01:00.640><c> lot</c><00:01:00.840><c> about</c><00:01:01.640><c> things</c>

00:01:01.950 --> 00:01:01.960 align:start position:0%
and you've heard a lot about things
 

00:01:01.960 --> 00:01:04.109 align:start position:0%
and you've heard a lot about things
happening<00:01:02.359><c> at</c><00:01:02.519><c> sort</c><00:01:02.680><c> of</c><00:01:02.800><c> the</c><00:01:02.960><c> library</c><00:01:03.399><c> level</c>

00:01:04.109 --> 00:01:04.119 align:start position:0%
happening at sort of the library level
 

00:01:04.119 --> 00:01:05.950 align:start position:0%
happening at sort of the library level
but<00:01:04.280><c> in</c><00:01:04.439><c> coordination</c><00:01:05.080><c> with</c><00:01:05.280><c> that</c><00:01:05.560><c> kind</c><00:01:05.680><c> of</c>

00:01:05.950 --> 00:01:05.960 align:start position:0%
but in coordination with that kind of
 

00:01:05.960 --> 00:01:07.630 align:start position:0%
but in coordination with that kind of
you<00:01:06.080><c> know</c><00:01:06.640><c> down</c><00:01:06.799><c> in</c><00:01:06.920><c> the</c><00:01:07.080><c> depths</c><00:01:07.320><c> of</c><00:01:07.479><c> the</c>

00:01:07.630 --> 00:01:07.640 align:start position:0%
you know down in the depths of the
 

00:01:07.640 --> 00:01:09.510 align:start position:0%
you know down in the depths of the
system<00:01:08.360><c> we</c><00:01:08.520><c> also</c><00:01:08.759><c> do</c><00:01:08.960><c> a</c><00:01:09.080><c> whole</c><00:01:09.240><c> bunch</c><00:01:09.400><c> of</c>

00:01:09.510 --> 00:01:09.520 align:start position:0%
system we also do a whole bunch of
 

00:01:09.520 --> 00:01:11.190 align:start position:0%
system we also do a whole bunch of
changes<00:01:09.880><c> just</c><00:01:10.080><c> to</c><00:01:10.240><c> try</c><00:01:10.400><c> to</c><00:01:10.520><c> get</c><00:01:10.640><c> the</c><00:01:10.799><c> basic</c>

00:01:11.190 --> 00:01:11.200 align:start position:0%
changes just to try to get the basic
 

00:01:11.200 --> 00:01:13.149 align:start position:0%
changes just to try to get the basic
efficiency<00:01:11.640><c> of</c><00:01:11.840><c> programs</c><00:01:12.280><c> running</c><00:01:12.640><c> better</c>

00:01:13.149 --> 00:01:13.159 align:start position:0%
efficiency of programs running better
 

00:01:13.159 --> 00:01:14.950 align:start position:0%
efficiency of programs running better
I'm<00:01:13.240><c> going</c><00:01:13.360><c> to</c><00:01:13.479><c> go</c><00:01:13.640><c> through</c><00:01:14.560><c> a</c><00:01:14.680><c> couple</c>

00:01:14.950 --> 00:01:14.960 align:start position:0%
I'm going to go through a couple
 

00:01:14.960 --> 00:01:16.270 align:start position:0%
I'm going to go through a couple
different<00:01:15.200><c> areas</c><00:01:15.520><c> here</c><00:01:15.720><c> I'm</c><00:01:15.799><c> going</c><00:01:15.880><c> to</c><00:01:16.040><c> talk</c>

00:01:16.270 --> 00:01:16.280 align:start position:0%
different areas here I'm going to talk
 

00:01:16.280 --> 00:01:18.510 align:start position:0%
different areas here I'm going to talk
about<00:01:16.560><c> some</c><00:01:16.759><c> work</c><00:01:17.040><c> that</c><00:01:17.200><c> we</c><00:01:17.400><c> did</c><00:01:17.920><c> or</c><00:01:18.159><c> just</c><00:01:18.400><c> give</c>

00:01:18.510 --> 00:01:18.520 align:start position:0%
about some work that we did or just give
 

00:01:18.520 --> 00:01:20.069 align:start position:0%
about some work that we did or just give
you<00:01:18.640><c> some</c><00:01:18.840><c> background</c><00:01:19.200><c> on</c><00:01:19.439><c> exactly</c><00:01:19.799><c> what</c><00:01:19.960><c> the</c>

00:01:20.069 --> 00:01:20.079 align:start position:0%
you some background on exactly what the
 

00:01:20.079 --> 00:01:22.190 align:start position:0%
you some background on exactly what the
jit<00:01:20.360><c> is</c><00:01:20.560><c> in</c><00:01:20.720><c> case</c><00:01:20.920><c> it's</c><00:01:21.159><c> not</c><00:01:21.720><c> clear</c><00:01:22.000><c> or</c><00:01:22.079><c> you</c>

00:01:22.190 --> 00:01:22.200 align:start position:0%
jit is in case it's not clear or you
 

00:01:22.200 --> 00:01:25.030 align:start position:0%
jit is in case it's not clear or you
need<00:01:22.320><c> a</c><00:01:22.880><c> refresher</c><00:01:23.880><c> um</c><00:01:24.360><c> some</c><00:01:24.600><c> things</c><00:01:24.799><c> that</c><00:01:24.920><c> we</c>

00:01:25.030 --> 00:01:25.040 align:start position:0%
need a refresher um some things that we
 

00:01:25.040 --> 00:01:26.749 align:start position:0%
need a refresher um some things that we
did<00:01:25.240><c> about</c><00:01:25.439><c> improving</c><00:01:25.960><c> handling</c><00:01:26.360><c> of</c><00:01:26.560><c> just</c>

00:01:26.749 --> 00:01:26.759 align:start position:0%
did about improving handling of just
 

00:01:26.759 --> 00:01:29.590 align:start position:0%
did about improving handling of just
basic<00:01:27.159><c> objects</c><00:01:28.159><c> um</c><00:01:28.640><c> and</c><00:01:28.799><c> some</c><00:01:29.000><c> exciting</c><00:01:29.400><c> work</c>

00:01:29.590 --> 00:01:29.600 align:start position:0%
basic objects um and some exciting work
 

00:01:29.600 --> 00:01:31.350 align:start position:0%
basic objects um and some exciting work
that<00:01:29.720><c> we're</c><00:01:30.320><c> having</c><00:01:30.600><c> done</c><00:01:30.840><c> net</c><00:01:30.960><c> n</c><00:01:31.159><c> and</c><00:01:31.240><c> that</c>

00:01:31.350 --> 00:01:31.360 align:start position:0%
that we're having done net n and that
 

00:01:31.360 --> 00:01:32.950 align:start position:0%
that we're having done net n and that
we're<00:01:31.479><c> plan</c><00:01:31.720><c> on</c><00:01:31.840><c> building</c><00:01:32.119><c> on</c><00:01:32.280><c> in</c><00:01:32.439><c> future</c>

00:01:32.950 --> 00:01:32.960 align:start position:0%
we're plan on building on in future
 

00:01:32.960 --> 00:01:34.950 align:start position:0%
we're plan on building on in future
releases<00:01:33.960><c> uh</c><00:01:34.079><c> some</c><00:01:34.320><c> support</c><00:01:34.640><c> that</c><00:01:34.759><c> we've</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
releases uh some support that we've
 

00:01:34.960 --> 00:01:38.069 align:start position:0%
releases uh some support that we've
added<00:01:35.320><c> now</c><00:01:35.640><c> for</c><00:01:36.439><c> arm</c><00:01:36.759><c> 64</c><00:01:37.360><c> in</c><00:01:37.520><c> particular</c>

00:01:38.069 --> 00:01:38.079 align:start position:0%
added now for arm 64 in particular
 

00:01:38.079 --> 00:01:41.310 align:start position:0%
added now for arm 64 in particular
scaler<00:01:38.759><c> Vector</c><00:01:39.360><c> extensions</c><00:01:40.240><c> scalable</c><00:01:40.720><c> Vector</c>

00:01:41.310 --> 00:01:41.320 align:start position:0%
scaler Vector extensions scalable Vector
 

00:01:41.320 --> 00:01:43.590 align:start position:0%
scaler Vector extensions scalable Vector
extensions<00:01:42.320><c> um</c><00:01:42.680><c> which</c><00:01:42.799><c> are</c><00:01:42.960><c> now</c><00:01:43.119><c> available</c><00:01:43.479><c> in</c>

00:01:43.590 --> 00:01:43.600 align:start position:0%
extensions um which are now available in
 

00:01:43.600 --> 00:01:46.310 align:start position:0%
extensions um which are now available in
the<00:01:43.720><c> new</c><00:01:43.960><c> cobalt</c><00:01:44.600><c> 100</c><00:01:44.960><c> that</c><00:01:45.240><c> Azure</c><00:01:45.600><c> is</c>

00:01:46.310 --> 00:01:46.320 align:start position:0%
the new cobalt 100 that Azure is
 

00:01:46.320 --> 00:01:49.069 align:start position:0%
the new cobalt 100 that Azure is
hosting<00:01:47.320><c> uh</c><00:01:47.840><c> Loops</c><00:01:48.159><c> are</c><00:01:48.399><c> important</c><00:01:48.759><c> part</c><00:01:48.920><c> of</c>

00:01:49.069 --> 00:01:49.079 align:start position:0%
hosting uh Loops are important part of
 

00:01:49.079 --> 00:01:51.109 align:start position:0%
hosting uh Loops are important part of
every<00:01:49.399><c> program</c><00:01:50.119><c> and</c><00:01:50.320><c> we've</c><00:01:50.520><c> made</c><00:01:50.719><c> some</c><00:01:50.920><c> big</c>

00:01:51.109 --> 00:01:51.119 align:start position:0%
every program and we've made some big
 

00:01:51.119 --> 00:01:52.590 align:start position:0%
every program and we've made some big
improvements<00:01:51.560><c> in</c><00:01:51.719><c> the</c><00:01:51.840><c> ability</c><00:01:52.159><c> of</c><00:01:52.240><c> the</c><00:01:52.360><c> jit</c>

00:01:52.590 --> 00:01:52.600 align:start position:0%
improvements in the ability of the jit
 

00:01:52.600 --> 00:01:54.510 align:start position:0%
improvements in the ability of the jit
to<00:01:52.719><c> optimize</c><00:01:53.119><c> Loops</c><00:01:53.439><c> we'll</c><00:01:53.640><c> talk</c><00:01:53.920><c> about</c><00:01:54.240><c> those</c>

00:01:54.510 --> 00:01:54.520 align:start position:0%
to optimize Loops we'll talk about those
 

00:01:54.520 --> 00:01:56.749 align:start position:0%
to optimize Loops we'll talk about those
briefly<00:01:55.479><c> some</c><00:01:55.680><c> general</c><00:01:56.039><c> things</c><00:01:56.280><c> that</c><00:01:56.439><c> sort</c><00:01:56.600><c> of</c>

00:01:56.749 --> 00:01:56.759 align:start position:0%
briefly some general things that sort of
 

00:01:56.759 --> 00:01:59.029 align:start position:0%
briefly some general things that sort of
apply<00:01:57.039><c> broadly</c><00:01:57.479><c> across</c><00:01:57.759><c> the</c><00:01:57.880><c> board</c><00:01:58.360><c> and</c><00:01:58.520><c> then</c>

00:01:59.029 --> 00:01:59.039 align:start position:0%
apply broadly across the board and then
 

00:01:59.039 --> 00:02:01.590 align:start position:0%
apply broadly across the board and then
just<00:01:59.159><c> sort</c><00:01:59.320><c> of</c><00:01:59.439><c> wrap</c><00:01:59.640><c> things</c><00:02:00.119><c> up</c><00:02:00.759><c> um</c><00:02:01.320><c> and</c><00:02:01.479><c> give</c>

00:02:01.590 --> 00:02:01.600 align:start position:0%
just sort of wrap things up um and give
 

00:02:01.600 --> 00:02:03.389 align:start position:0%
just sort of wrap things up um and give
you<00:02:01.799><c> ways</c><00:02:02.320><c> remind</c><00:02:02.600><c> you</c><00:02:02.719><c> of</c><00:02:02.840><c> ways</c><00:02:03.039><c> to</c><00:02:03.159><c> get</c><00:02:03.280><c> a</c>

00:02:03.389 --> 00:02:03.399 align:start position:0%
you ways remind you of ways to get a
 

00:02:03.399 --> 00:02:04.990 align:start position:0%
you ways remind you of ways to get a
hold<00:02:03.560><c> of</c><00:02:03.680><c> us</c><00:02:03.880><c> if</c><00:02:03.960><c> you</c><00:02:04.079><c> see</c><00:02:04.360><c> issues</c><00:02:04.719><c> where</c><00:02:04.880><c> you</c>

00:02:04.990 --> 00:02:05.000 align:start position:0%
hold of us if you see issues where you
 

00:02:05.000 --> 00:02:06.670 align:start position:0%
hold of us if you see issues where you
think<00:02:05.200><c> we</c><00:02:05.320><c> could</c><00:02:05.479><c> be</c><00:02:05.600><c> doing</c><00:02:05.840><c> a</c><00:02:06.000><c> better</c><00:02:06.280><c> job</c><00:02:06.520><c> or</c>

00:02:06.670 --> 00:02:06.680 align:start position:0%
think we could be doing a better job or
 

00:02:06.680 --> 00:02:08.270 align:start position:0%
think we could be doing a better job or
you<00:02:06.799><c> want</c><00:02:06.920><c> to</c><00:02:07.240><c> congratulate</c><00:02:07.759><c> us</c><00:02:07.920><c> for</c><00:02:08.119><c> already</c>

00:02:08.270 --> 00:02:08.280 align:start position:0%
you want to congratulate us for already
 

00:02:08.280 --> 00:02:09.710 align:start position:0%
you want to congratulate us for already
doing<00:02:08.520><c> a</c><00:02:08.640><c> good</c>

00:02:09.710 --> 00:02:09.720 align:start position:0%
doing a good
 

00:02:09.720 --> 00:02:12.949 align:start position:0%
doing a good
job<00:02:10.720><c> so</c><00:02:11.280><c> the</c><00:02:11.680><c> that</c><00:02:11.840><c> jit</c><00:02:12.200><c> we</c><00:02:12.319><c> also</c><00:02:12.720><c> sometimes</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
job so the that jit we also sometimes
 

00:02:12.959 --> 00:02:15.910 align:start position:0%
job so the that jit we also sometimes
call<00:02:13.120><c> it</c><00:02:13.280><c> the</c><00:02:13.800><c> Cen</c><00:02:14.800><c> um</c><00:02:15.080><c> is</c><00:02:15.200><c> a</c><00:02:15.360><c> thing</c><00:02:15.519><c> that</c>

00:02:15.910 --> 00:02:15.920 align:start position:0%
call it the Cen um is a thing that
 

00:02:15.920 --> 00:02:20.190 align:start position:0%
call it the Cen um is a thing that
translates<00:02:17.120><c> your</c><00:02:18.239><c> um</c><00:02:19.239><c> programs</c><00:02:19.840><c> from</c>

00:02:20.190 --> 00:02:20.200 align:start position:0%
translates your um programs from
 

00:02:20.200 --> 00:02:22.150 align:start position:0%
translates your um programs from
assembly<00:02:20.640><c> or</c><00:02:20.800><c> from</c><00:02:21.040><c> Intermediate</c><00:02:21.560><c> Language</c>

00:02:22.150 --> 00:02:22.160 align:start position:0%
assembly or from Intermediate Language
 

00:02:22.160 --> 00:02:23.630 align:start position:0%
assembly or from Intermediate Language
the<00:02:22.319><c> thing</c><00:02:22.480><c> that</c><00:02:22.680><c> gets</c><00:02:22.920><c> produced</c><00:02:23.400><c> when</c><00:02:23.519><c> you</c>

00:02:23.630 --> 00:02:23.640 align:start position:0%
the thing that gets produced when you
 

00:02:23.640 --> 00:02:26.869 align:start position:0%
the thing that gets produced when you
run<00:02:24.519><c> a</c><00:02:24.920><c> net</c><00:02:25.080><c> build</c><00:02:25.760><c> into</c><00:02:26.040><c> the</c><00:02:26.239><c> actual</c><00:02:26.480><c> machine</c>

00:02:26.869 --> 00:02:26.879 align:start position:0%
run a net build into the actual machine
 

00:02:26.879 --> 00:02:28.670 align:start position:0%
run a net build into the actual machine
code<00:02:27.200><c> that</c><00:02:27.400><c> the</c><00:02:27.599><c> the</c><00:02:27.680><c> chip</c><00:02:27.920><c> knows</c><00:02:28.160><c> how</c><00:02:28.280><c> to</c>

00:02:28.670 --> 00:02:28.680 align:start position:0%
code that the the chip knows how to
 

00:02:28.680 --> 00:02:31.790 align:start position:0%
code that the the chip knows how to
execute<00:02:29.680><c> um</c><00:02:30.120><c> our</c><00:02:30.319><c> code</c><00:02:30.519><c> generator</c><00:02:31.280><c> includes</c>

00:02:31.790 --> 00:02:31.800 align:start position:0%
execute um our code generator includes
 

00:02:31.800 --> 00:02:35.190 align:start position:0%
execute um our code generator includes
the<00:02:31.959><c> ability</c><00:02:32.239><c> to</c><00:02:32.400><c> generate</c><00:02:32.760><c> code</c><00:02:33.040><c> for</c><00:02:33.480><c> x64</c><00:02:34.360><c> x86</c>

00:02:35.190 --> 00:02:35.200 align:start position:0%
the ability to generate code for x64 x86
 

00:02:35.200 --> 00:02:37.070 align:start position:0%
the ability to generate code for x64 x86
arm

00:02:37.070 --> 00:02:37.080 align:start position:0%
arm
 

00:02:37.080 --> 00:02:39.190 align:start position:0%
arm
arm64<00:02:38.080><c> and</c><00:02:38.160><c> then</c><00:02:38.360><c> also</c><00:02:38.599><c> the</c><00:02:38.720><c> community</c><00:02:39.080><c> has</c>

00:02:39.190 --> 00:02:39.200 align:start position:0%
arm64 and then also the community has
 

00:02:39.200 --> 00:02:42.070 align:start position:0%
arm64 and then also the community has
added<00:02:39.519><c> support</c><00:02:39.840><c> for</c><00:02:40.040><c> risk</c><00:02:40.360><c> V</c><00:02:40.640><c> and</c><00:02:40.800><c> for</c><00:02:41.080><c> Larch</c>

00:02:42.070 --> 00:02:42.080 align:start position:0%
added support for risk V and for Larch
 

00:02:42.080 --> 00:02:43.550 align:start position:0%
added support for risk V and for Larch
so<00:02:42.280><c> that</c><00:02:42.400><c> means</c><00:02:42.640><c> you</c><00:02:42.760><c> can</c><00:02:42.879><c> take</c><00:02:43.040><c> your</c><00:02:43.400><c> net</c>

00:02:43.550 --> 00:02:43.560 align:start position:0%
so that means you can take your net
 

00:02:43.560 --> 00:02:45.030 align:start position:0%
so that means you can take your net
program<00:02:43.840><c> and</c><00:02:43.959><c> run</c><00:02:44.120><c> it</c><00:02:44.239><c> on</c><00:02:44.400><c> many</c><00:02:44.720><c> different</c>

00:02:45.030 --> 00:02:45.040 align:start position:0%
program and run it on many different
 

00:02:45.040 --> 00:02:47.390 align:start position:0%
program and run it on many different
pieces<00:02:45.319><c> of</c><00:02:45.480><c> Hardware</c><00:02:46.360><c> um</c><00:02:46.879><c> and</c><00:02:47.000><c> each</c><00:02:47.120><c> of</c><00:02:47.280><c> those</c>

00:02:47.390 --> 00:02:47.400 align:start position:0%
pieces of Hardware um and each of those
 

00:02:47.400 --> 00:02:49.070 align:start position:0%
pieces of Hardware um and each of those
pieces<00:02:47.680><c> of</c><00:02:47.800><c> Hardware</c><00:02:48.200><c> often</c><00:02:48.440><c> has</c><00:02:48.680><c> many</c>

00:02:49.070 --> 00:02:49.080 align:start position:0%
pieces of Hardware often has many
 

00:02:49.080 --> 00:02:51.149 align:start position:0%
pieces of Hardware often has many
different<00:02:49.920><c> variants</c><00:02:50.400><c> inside</c><00:02:50.760><c> of</c><00:02:50.879><c> it</c><00:02:51.000><c> of</c>

00:02:51.149 --> 00:02:51.159 align:start position:0%
different variants inside of it of
 

00:02:51.159 --> 00:02:52.470 align:start position:0%
different variants inside of it of
things<00:02:51.360><c> that</c><00:02:51.519><c> it</c><00:02:51.640><c> can</c><00:02:51.760><c> do</c><00:02:51.959><c> you</c><00:02:52.080><c> might</c><00:02:52.239><c> be</c>

00:02:52.470 --> 00:02:52.480 align:start position:0%
things that it can do you might be
 

00:02:52.480 --> 00:02:55.229 align:start position:0%
things that it can do you might be
familiar<00:02:52.920><c> with</c><00:02:53.319><c> a</c><00:02:53.480><c> term</c><00:02:53.720><c> like</c><00:02:53.959><c> ABX</c><00:02:54.480><c> 512</c><00:02:55.120><c> which</c>

00:02:55.229 --> 00:02:55.239 align:start position:0%
familiar with a term like ABX 512 which
 

00:02:55.239 --> 00:02:57.070 align:start position:0%
familiar with a term like ABX 512 which
are<00:02:55.400><c> the</c><00:02:55.560><c> advanced</c><00:02:56.040><c> Vector</c><00:02:56.400><c> extensions</c><00:02:56.920><c> that</c>

00:02:57.070 --> 00:02:57.080 align:start position:0%
are the advanced Vector extensions that
 

00:02:57.080 --> 00:02:59.110 align:start position:0%
are the advanced Vector extensions that
Intel<00:02:57.519><c> processors</c><00:02:58.080><c> and</c><00:02:58.239><c> AMD</c><00:02:58.680><c> processors</c>

00:02:59.110 --> 00:02:59.120 align:start position:0%
Intel processors and AMD processors
 

00:02:59.120 --> 00:03:00.630 align:start position:0%
Intel processors and AMD processors
offer<00:02:59.440><c> these</c><00:02:59.599><c> days</c>

00:03:00.630 --> 00:03:00.640 align:start position:0%
offer these days
 

00:03:00.640 --> 00:03:03.030 align:start position:0%
offer these days
um<00:03:00.800><c> arm</c><00:03:01.120><c> has</c><00:03:01.360><c> similar</c><00:03:01.680><c> sort</c><00:03:01.840><c> of</c><00:03:02.000><c> gradations</c><00:03:02.599><c> 8X</c>

00:03:03.030 --> 00:03:03.040 align:start position:0%
um arm has similar sort of gradations 8X
 

00:03:03.040 --> 00:03:06.830 align:start position:0%
um arm has similar sort of gradations 8X
and<00:03:03.239><c> 9x</c><00:03:04.239><c> features</c><00:03:05.200><c> um</c><00:03:05.799><c> and</c><00:03:05.920><c> then</c><00:03:06.159><c> also</c><00:03:06.519><c> many</c>

00:03:06.830 --> 00:03:06.840 align:start position:0%
and 9x features um and then also many
 

00:03:06.840 --> 00:03:08.270 align:start position:0%
and 9x features um and then also many
different<00:03:07.159><c> operating</c><00:03:07.560><c> systems</c><00:03:08.080><c> these</c>

00:03:08.270 --> 00:03:08.280 align:start position:0%
different operating systems these
 

00:03:08.280 --> 00:03:10.309 align:start position:0%
different operating systems these
operating<00:03:08.720><c> systems</c><00:03:09.080><c> all</c><00:03:09.280><c> have</c><00:03:09.560><c> different</c>

00:03:10.309 --> 00:03:10.319 align:start position:0%
operating systems all have different
 

00:03:10.319 --> 00:03:12.750 align:start position:0%
operating systems all have different
conventions<00:03:10.920><c> for</c><00:03:11.159><c> the</c><00:03:11.319><c> way</c><00:03:11.599><c> that</c><00:03:11.840><c> the</c><00:03:12.280><c> the</c>

00:03:12.750 --> 00:03:12.760 align:start position:0%
conventions for the way that the the
 

00:03:12.760 --> 00:03:14.949 align:start position:0%
conventions for the way that the the
machine<00:03:13.120><c> code</c><00:03:13.360><c> needs</c><00:03:13.560><c> to</c><00:03:13.840><c> operate</c><00:03:14.599><c> in</c><00:03:14.720><c> order</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
machine code needs to operate in order
 

00:03:14.959 --> 00:03:16.710 align:start position:0%
machine code needs to operate in order
to<00:03:15.080><c> be</c><00:03:15.280><c> compatible</c><00:03:15.799><c> with</c><00:03:15.959><c> the</c><00:03:16.080><c> system</c><00:03:16.400><c> so</c><00:03:16.560><c> we</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
to be compatible with the system so we
 

00:03:16.720 --> 00:03:19.589 align:start position:0%
to be compatible with the system so we
handle<00:03:17.040><c> Windows</c><00:03:17.959><c> cisv</c><00:03:18.720><c> those</c><00:03:18.959><c> most</c><00:03:19.200><c> flavors</c>

00:03:19.589 --> 00:03:19.599 align:start position:0%
handle Windows cisv those most flavors
 

00:03:19.599 --> 00:03:22.750 align:start position:0%
handle Windows cisv those most flavors
of<00:03:19.720><c> Unix</c><00:03:20.560><c> Mac</c><00:03:20.799><c> OS</c><00:03:21.280><c> and</c><00:03:21.400><c> so</c><00:03:21.560><c> on</c><00:03:21.720><c> and</c><00:03:21.840><c> so</c><00:03:22.040><c> forth</c><00:03:22.599><c> so</c>

00:03:22.750 --> 00:03:22.760 align:start position:0%
of Unix Mac OS and so on and so forth so
 

00:03:22.760 --> 00:03:24.509 align:start position:0%
of Unix Mac OS and so on and so forth so
there's<00:03:22.920><c> a</c><00:03:23.040><c> lot</c><00:03:23.159><c> of</c><00:03:23.319><c> different</c><00:03:23.799><c> variations</c>

00:03:24.509 --> 00:03:24.519 align:start position:0%
there's a lot of different variations
 

00:03:24.519 --> 00:03:26.910 align:start position:0%
there's a lot of different variations
here<00:03:24.720><c> but</c><00:03:24.840><c> there's</c><00:03:25.000><c> sort</c><00:03:25.159><c> of</c><00:03:25.400><c> one</c><00:03:26.400><c> engine</c>

00:03:26.910 --> 00:03:26.920 align:start position:0%
here but there's sort of one engine
 

00:03:26.920 --> 00:03:29.550 align:start position:0%
here but there's sort of one engine
behind<00:03:27.360><c> all</c><00:03:27.560><c> of</c><00:03:27.840><c> this</c><00:03:28.519><c> um</c><00:03:28.680><c> and</c><00:03:28.879><c> that's</c><00:03:29.040><c> the</c><00:03:29.439><c> net</c>

00:03:29.550 --> 00:03:29.560 align:start position:0%
behind all of this um and that's the net
 

00:03:29.560 --> 00:03:30.550 align:start position:0%
behind all of this um and that's the net
J

00:03:30.550 --> 00:03:30.560 align:start position:0%
J
 

00:03:30.560 --> 00:03:33.149 align:start position:0%
J
um<00:03:31.120><c> we</c><00:03:31.280><c> usually</c><00:03:31.720><c> compile</c><00:03:32.239><c> methods</c><00:03:32.680><c> one</c><00:03:32.840><c> at</c><00:03:32.959><c> a</c>

00:03:33.149 --> 00:03:33.159 align:start position:0%
um we usually compile methods one at a
 

00:03:33.159 --> 00:03:35.470 align:start position:0%
um we usually compile methods one at a
time<00:03:33.560><c> and</c><00:03:33.680><c> the</c><00:03:33.879><c> method</c><00:03:34.680><c> is</c><00:03:34.879><c> compiled</c><00:03:35.319><c> to</c>

00:03:35.470 --> 00:03:35.480 align:start position:0%
time and the method is compiled to
 

00:03:35.480 --> 00:03:37.429 align:start position:0%
time and the method is compiled to
machine<00:03:35.879><c> code</c><00:03:36.239><c> just</c><00:03:36.519><c> the</c><00:03:36.720><c> very</c><00:03:36.920><c> first</c><00:03:37.200><c> time</c>

00:03:37.429 --> 00:03:37.439 align:start position:0%
machine code just the very first time
 

00:03:37.439 --> 00:03:39.149 align:start position:0%
machine code just the very first time
that<00:03:37.519><c> you</c><00:03:37.760><c> run</c><00:03:37.920><c> it</c><00:03:38.120><c> inst</c><00:03:38.400><c> the</c><00:03:38.560><c> name</c><00:03:38.799><c> just</c><00:03:38.920><c> in</c>

00:03:39.149 --> 00:03:39.159 align:start position:0%
that you run it inst the name just in
 

00:03:39.159 --> 00:03:42.070 align:start position:0%
that you run it inst the name just in
time<00:03:39.720><c> compilation</c><00:03:40.720><c> turns</c><00:03:41.000><c> out</c><00:03:41.599><c> that</c><00:03:41.799><c> same</c>

00:03:42.070 --> 00:03:42.080 align:start position:0%
time compilation turns out that same
 

00:03:42.080 --> 00:03:43.990 align:start position:0%
time compilation turns out that same
piece<00:03:42.239><c> of</c><00:03:42.480><c> technology</c><00:03:43.080><c> also</c><00:03:43.400><c> handles</c><00:03:43.760><c> code</c>

00:03:43.990 --> 00:03:44.000 align:start position:0%
piece of technology also handles code
 

00:03:44.000 --> 00:03:45.869 align:start position:0%
piece of technology also handles code
generation<00:03:44.439><c> if</c><00:03:44.560><c> you're</c><00:03:45.040><c> building</c><00:03:45.360><c> your</c><00:03:45.519><c> code</c>

00:03:45.869 --> 00:03:45.879 align:start position:0%
generation if you're building your code
 

00:03:45.879 --> 00:03:47.750 align:start position:0%
generation if you're building your code
ahead<00:03:46.080><c> of</c><00:03:46.280><c> time</c><00:03:46.519><c> like</c><00:03:46.680><c> in</c><00:03:46.799><c> Native</c><00:03:47.120><c> aot</c><00:03:47.560><c> or</c>

00:03:47.750 --> 00:03:47.760 align:start position:0%
ahead of time like in Native aot or
 

00:03:47.760 --> 00:03:50.390 align:start position:0%
ahead of time like in Native aot or
ready<00:03:47.959><c> to</c><00:03:48.159><c> run</c><00:03:49.040><c> so</c><00:03:49.560><c> you</c><00:03:49.680><c> know</c><00:03:49.879><c> terminology</c>

00:03:50.390 --> 00:03:50.400 align:start position:0%
ready to run so you know terminology
 

00:03:50.400 --> 00:03:52.110 align:start position:0%
ready to run so you know terminology
gets<00:03:50.519><c> a</c><00:03:50.640><c> bit</c><00:03:50.799><c> fuzzy</c><00:03:51.200><c> here</c><00:03:51.439><c> but</c><00:03:51.640><c> basically</c><00:03:52.000><c> we</c>

00:03:52.110 --> 00:03:52.120 align:start position:0%
gets a bit fuzzy here but basically we
 

00:03:52.120 --> 00:03:53.830 align:start position:0%
gets a bit fuzzy here but basically we
are<00:03:52.319><c> generating</c><00:03:52.760><c> the</c><00:03:52.920><c> code</c><00:03:53.480><c> that</c><00:03:53.640><c> your</c>

00:03:53.830 --> 00:03:53.840 align:start position:0%
are generating the code that your
 

00:03:53.840 --> 00:03:55.670 align:start position:0%
are generating the code that your
application<00:03:54.360><c> needs</c><00:03:54.640><c> to</c><00:03:54.879><c> actually</c><00:03:55.120><c> run</c><00:03:55.400><c> on</c><00:03:55.560><c> the</c>

00:03:55.670 --> 00:03:55.680 align:start position:0%
application needs to actually run on the
 

00:03:55.680 --> 00:03:57.190 align:start position:0%
application needs to actually run on the
hardware<00:03:56.079><c> that</c><00:03:56.159><c> you</c><00:03:56.280><c> want</c><00:03:56.360><c> to</c><00:03:56.480><c> run</c><00:03:56.599><c> it</c><00:03:56.720><c> on</c><00:03:57.120><c> and</c>

00:03:57.190 --> 00:03:57.200 align:start position:0%
hardware that you want to run it on and
 

00:03:57.200 --> 00:03:58.830 align:start position:0%
hardware that you want to run it on and
so<00:03:57.360><c> in</c><00:03:57.480><c> this</c><00:03:57.640><c> talk</c><00:03:57.920><c> let's</c><00:03:58.079><c> do</c><00:03:58.280><c> a</c><00:03:58.480><c> let's</c><00:03:58.680><c> go</c>

00:03:58.830 --> 00:03:58.840 align:start position:0%
so in this talk let's do a let's go
 

00:03:58.840 --> 00:04:00.190 align:start position:0%
so in this talk let's do a let's go
through<00:03:58.959><c> a</c><00:03:59.120><c> sample</c><00:03:59.400><c> of</c><00:03:59.519><c> things</c><00:03:59.920><c> that</c><00:04:00.000><c> we've</c>

00:04:00.190 --> 00:04:00.200 align:start position:0%
through a sample of things that we've
 

00:04:00.200 --> 00:04:03.069 align:start position:0%
through a sample of things that we've
done<00:04:00.760><c> in9</c><00:04:01.560><c> to</c><00:04:01.720><c> make</c><00:04:01.920><c> that</c><00:04:02.159><c> process</c><00:04:02.519><c> work</c>

00:04:03.069 --> 00:04:03.079 align:start position:0%
done in9 to make that process work
 

00:04:03.079 --> 00:04:05.670 align:start position:0%
done in9 to make that process work
better<00:04:04.079><c> um</c><00:04:04.680><c> before</c><00:04:04.879><c> I</c><00:04:05.000><c> get</c><00:04:05.159><c> started</c><00:04:05.480><c> I</c><00:04:05.599><c> just</c>

00:04:05.670 --> 00:04:05.680 align:start position:0%
better um before I get started I just
 

00:04:05.680 --> 00:04:07.270 align:start position:0%
better um before I get started I just
want<00:04:05.799><c> to</c><00:04:06.000><c> remind</c><00:04:06.360><c> people</c><00:04:06.680><c> in</c><00:04:06.799><c> case</c><00:04:06.959><c> you're</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
want to remind people in case you're
 

00:04:07.280 --> 00:04:08.869 align:start position:0%
want to remind people in case you're
curious<00:04:07.640><c> to</c><00:04:07.840><c> look</c><00:04:08.000><c> under</c><00:04:08.200><c> the</c><00:04:08.319><c> hood</c><00:04:08.519><c> sometime</c>

00:04:08.869 --> 00:04:08.879 align:start position:0%
curious to look under the hood sometime
 

00:04:08.879 --> 00:04:10.869 align:start position:0%
curious to look under the hood sometime
and<00:04:09.040><c> see</c><00:04:09.239><c> what's</c><00:04:09.480><c> going</c><00:04:09.680><c> on</c><00:04:10.519><c> we've</c><00:04:10.720><c> been</c>

00:04:10.869 --> 00:04:10.879 align:start position:0%
and see what's going on we've been
 

00:04:10.879 --> 00:04:12.670 align:start position:0%
and see what's going on we've been
trying<00:04:11.079><c> to</c><00:04:11.239><c> make</c><00:04:11.400><c> it</c><00:04:11.560><c> easier</c><00:04:11.879><c> and</c><00:04:12.079><c> easier</c><00:04:12.439><c> to</c>

00:04:12.670 --> 00:04:12.680 align:start position:0%
trying to make it easier and easier to
 

00:04:12.680 --> 00:04:14.789 align:start position:0%
trying to make it easier and easier to
actually<00:04:13.040><c> look</c><00:04:13.439><c> at</c><00:04:13.720><c> what</c><00:04:13.920><c> the</c><00:04:14.079><c> jit</c><00:04:14.360><c> does</c><00:04:14.640><c> when</c>

00:04:14.789 --> 00:04:14.799 align:start position:0%
actually look at what the jit does when
 

00:04:14.799 --> 00:04:17.030 align:start position:0%
actually look at what the jit does when
it<00:04:14.920><c> takes</c><00:04:15.159><c> your</c><00:04:15.439><c> program</c><00:04:16.320><c> there's</c><00:04:16.479><c> a</c><00:04:16.639><c> variety</c>

00:04:17.030 --> 00:04:17.040 align:start position:0%
it takes your program there's a variety
 

00:04:17.040 --> 00:04:18.430 align:start position:0%
it takes your program there's a variety
of<00:04:17.199><c> ways</c><00:04:17.400><c> you</c><00:04:17.519><c> can</c><00:04:17.639><c> do</c><00:04:17.799><c> it</c><00:04:17.919><c> there's</c><00:04:18.079><c> a</c><00:04:18.199><c> very</c>

00:04:18.430 --> 00:04:18.440 align:start position:0%
of ways you can do it there's a very
 

00:04:18.440 --> 00:04:21.509 align:start position:0%
of ways you can do it there's a very
nice<00:04:18.799><c> VSS</c><00:04:19.239><c> add-in</c><00:04:19.680><c> plugin</c><00:04:20.079><c> called</c><00:04:20.359><c> dis</c><00:04:20.639><c> asmo</c>

00:04:21.509 --> 00:04:21.519 align:start position:0%
nice VSS add-in plugin called dis asmo
 

00:04:21.519 --> 00:04:23.030 align:start position:0%
nice VSS add-in plugin called dis asmo
where<00:04:21.680><c> you</c><00:04:21.759><c> can</c><00:04:21.959><c> basically</c><00:04:22.320><c> hover</c><00:04:22.560><c> your</c><00:04:22.720><c> mouse</c>

00:04:23.030 --> 00:04:23.040 align:start position:0%
where you can basically hover your mouse
 

00:04:23.040 --> 00:04:24.749 align:start position:0%
where you can basically hover your mouse
cursor<00:04:23.479><c> over</c><00:04:23.800><c> a</c><00:04:23.919><c> piece</c><00:04:24.080><c> of</c><00:04:24.199><c> code</c><00:04:24.440><c> that</c><00:04:24.560><c> you've</c>

00:04:24.749 --> 00:04:24.759 align:start position:0%
cursor over a piece of code that you've
 

00:04:24.759 --> 00:04:26.909 align:start position:0%
cursor over a piece of code that you've
written<00:04:25.639><c> and</c><00:04:25.960><c> look</c><00:04:26.120><c> at</c><00:04:26.280><c> what</c><00:04:26.400><c> the</c><00:04:26.560><c> jit</c><00:04:26.759><c> would</c>

00:04:26.909 --> 00:04:26.919 align:start position:0%
written and look at what the jit would
 

00:04:26.919 --> 00:04:29.350 align:start position:0%
written and look at what the jit would
produce<00:04:27.199><c> for</c><00:04:27.440><c> that</c><00:04:27.639><c> code</c><00:04:28.400><c> um</c><00:04:28.919><c> you</c><00:04:29.039><c> can</c><00:04:29.160><c> also</c>

00:04:29.350 --> 00:04:29.360 align:start position:0%
produce for that code um you can also
 

00:04:29.360 --> 00:04:31.550 align:start position:0%
produce for that code um you can also
get<00:04:29.479><c> that</c><00:04:29.840><c> information</c><00:04:30.280><c> from</c><00:04:30.520><c> command</c><00:04:30.880><c> line</c>

00:04:31.550 --> 00:04:31.560 align:start position:0%
get that information from command line
 

00:04:31.560 --> 00:04:33.310 align:start position:0%
get that information from command line
processing<00:04:32.160><c> or</c><00:04:32.680><c> there</c><00:04:32.800><c> are</c><00:04:32.919><c> some</c><00:04:33.120><c> web</c>

00:04:33.310 --> 00:04:33.320 align:start position:0%
processing or there are some web
 

00:04:33.320 --> 00:04:34.830 align:start position:0%
processing or there are some web
interfaces<00:04:33.840><c> where</c><00:04:33.960><c> you</c><00:04:34.039><c> can</c><00:04:34.199><c> basically</c><00:04:34.600><c> copy</c>

00:04:34.830 --> 00:04:34.840 align:start position:0%
interfaces where you can basically copy
 

00:04:34.840 --> 00:04:36.270 align:start position:0%
interfaces where you can basically copy
and<00:04:35.039><c> paste</c><00:04:35.240><c> your</c><00:04:35.400><c> code</c><00:04:35.680><c> into</c><00:04:35.960><c> you</c><00:04:36.080><c> know</c>

00:04:36.270 --> 00:04:36.280 align:start position:0%
and paste your code into you know
 

00:04:36.280 --> 00:04:38.350 align:start position:0%
and paste your code into you know
website<00:04:36.759><c> and</c><00:04:37.160><c> and</c><00:04:37.320><c> look</c><00:04:37.440><c> at</c><00:04:37.560><c> the</c><00:04:37.720><c> same</c><00:04:37.960><c> thing</c>

00:04:38.350 --> 00:04:38.360 align:start position:0%
website and and look at the same thing
 

00:04:38.360 --> 00:04:39.670 align:start position:0%
website and and look at the same thing
these<00:04:38.479><c> are</c><00:04:38.600><c> all</c><00:04:38.759><c> pretty</c><00:04:39.000><c> cool</c><00:04:39.199><c> if</c><00:04:39.280><c> you're</c><00:04:39.400><c> ever</c>

00:04:39.670 --> 00:04:39.680 align:start position:0%
these are all pretty cool if you're ever
 

00:04:39.680 --> 00:04:41.550 align:start position:0%
these are all pretty cool if you're ever
curious<00:04:40.000><c> to</c><00:04:40.120><c> sort</c><00:04:40.280><c> of</c><00:04:40.440><c> know</c><00:04:40.639><c> more</c><00:04:40.960><c> or</c><00:04:41.199><c> Tinker</c>

00:04:41.550 --> 00:04:41.560 align:start position:0%
curious to sort of know more or Tinker
 

00:04:41.560 --> 00:04:43.469 align:start position:0%
curious to sort of know more or Tinker
around<00:04:41.759><c> with</c><00:04:41.919><c> your</c><00:04:42.039><c> code</c><00:04:42.320><c> and</c><00:04:42.440><c> see</c><00:04:43.120><c> how</c><00:04:43.320><c> the</c>

00:04:43.469 --> 00:04:43.479 align:start position:0%
around with your code and see how the
 

00:04:43.479 --> 00:04:44.870 align:start position:0%
around with your code and see how the
expression<00:04:43.840><c> of</c><00:04:44.000><c> that</c><00:04:44.120><c> code</c><00:04:44.320><c> in</c><00:04:44.520><c> Assembly</c>

00:04:44.870 --> 00:04:44.880 align:start position:0%
expression of that code in Assembly
 

00:04:44.880 --> 00:04:46.270 align:start position:0%
expression of that code in Assembly
Language<00:04:45.160><c> changes</c><00:04:45.600><c> these</c><00:04:45.759><c> are</c><00:04:45.960><c> awesome</c>

00:04:46.270 --> 00:04:46.280 align:start position:0%
Language changes these are awesome
 

00:04:46.280 --> 00:04:49.710 align:start position:0%
Language changes these are awesome
things<00:04:46.840><c> to</c><00:04:47.039><c> know</c><00:04:47.680><c> about</c><00:04:48.680><c> um</c><00:04:49.320><c> all</c><00:04:49.440><c> right</c><00:04:49.560><c> so</c>

00:04:49.710 --> 00:04:49.720 align:start position:0%
things to know about um all right so
 

00:04:49.720 --> 00:04:51.670 align:start position:0%
things to know about um all right so
let's<00:04:49.919><c> talk</c><00:04:50.120><c> about</c><00:04:50.600><c> objects</c><00:04:51.080><c> in</c><00:04:51.240><c> particular</c>

00:04:51.670 --> 00:04:51.680 align:start position:0%
let's talk about objects in particular
 

00:04:51.680 --> 00:04:54.029 align:start position:0%
let's talk about objects in particular
about<00:04:51.880><c> something</c><00:04:52.199><c> called</c><00:04:52.479><c> Escape</c>

00:04:54.029 --> 00:04:54.039 align:start position:0%
about something called Escape
 

00:04:54.039 --> 00:04:56.629 align:start position:0%
about something called Escape
analysis<00:04:55.039><c> so</c><00:04:55.560><c> you</c><00:04:55.759><c> probably</c><00:04:56.039><c> know</c><00:04:56.360><c> in</c><00:04:56.520><c> the</c>

00:04:56.629 --> 00:04:56.639 align:start position:0%
analysis so you probably know in the
 

00:04:56.639 --> 00:04:58.950 align:start position:0%
analysis so you probably know in the
world<00:04:56.919><c> of.net</c><00:04:57.560><c> there's</c><00:04:57.840><c> roughly</c><00:04:58.360><c> two</c><00:04:58.680><c> kinds</c>

00:04:58.950 --> 00:04:58.960 align:start position:0%
world of.net there's roughly two kinds
 

00:04:58.960 --> 00:05:00.430 align:start position:0%
world of.net there's roughly two kinds
of<00:04:59.199><c> data</c><00:04:59.440><c> type</c>

00:05:00.430 --> 00:05:00.440 align:start position:0%
of data type
 

00:05:00.440 --> 00:05:02.350 align:start position:0%
of data type
there<00:05:00.560><c> are</c><00:05:00.880><c> ref</c><00:05:01.199><c> types</c><00:05:01.520><c> and</c><00:05:01.639><c> there</c><00:05:01.759><c> are</c><00:05:02.039><c> value</c>

00:05:02.350 --> 00:05:02.360 align:start position:0%
there are ref types and there are value
 

00:05:02.360 --> 00:05:04.029 align:start position:0%
there are ref types and there are value
types<00:05:02.759><c> or</c><00:05:03.080><c> sometimes</c><00:05:03.280><c> we</c><00:05:03.400><c> would</c><00:05:03.560><c> call</c><00:05:03.759><c> those</c>

00:05:04.029 --> 00:05:04.039 align:start position:0%
types or sometimes we would call those
 

00:05:04.039 --> 00:05:08.189 align:start position:0%
types or sometimes we would call those
objects<00:05:04.520><c> and</c><00:05:04.840><c> structs</c><00:05:05.840><c> um</c><00:05:06.520><c> and</c><00:05:06.680><c> ref</c><00:05:07.039><c> types</c><00:05:08.039><c> um</c>

00:05:08.189 --> 00:05:08.199 align:start position:0%
objects and structs um and ref types um
 

00:05:08.199 --> 00:05:10.070 align:start position:0%
objects and structs um and ref types um
or<00:05:08.400><c> classes</c><00:05:08.800><c> instructs</c><00:05:09.240><c> and</c><00:05:09.360><c> ref</c><00:05:09.600><c> types</c><00:05:09.880><c> are</c>

00:05:10.070 --> 00:05:10.080 align:start position:0%
or classes instructs and ref types are
 

00:05:10.080 --> 00:05:11.590 align:start position:0%
or classes instructs and ref types are
things<00:05:10.280><c> that</c><00:05:10.400><c> are</c><00:05:10.560><c> allocated</c><00:05:11.080><c> always</c><00:05:11.320><c> on</c><00:05:11.479><c> the</c>

00:05:11.590 --> 00:05:11.600 align:start position:0%
things that are allocated always on the
 

00:05:11.600 --> 00:05:14.950 align:start position:0%
things that are allocated always on the
GC<00:05:12.000><c> Heap</c><00:05:12.960><c> uh</c><00:05:13.160><c> historically</c><00:05:14.160><c> their</c><00:05:14.440><c> lifetime</c>

00:05:14.950 --> 00:05:14.960 align:start position:0%
GC Heap uh historically their lifetime
 

00:05:14.960 --> 00:05:16.909 align:start position:0%
GC Heap uh historically their lifetime
is<00:05:15.120><c> determined</c><00:05:15.600><c> by</c><00:05:15.800><c> the</c><00:05:15.880><c> GC</c><00:05:16.320><c> and</c><00:05:16.440><c> that's</c><00:05:16.800><c> one</c>

00:05:16.909 --> 00:05:16.919 align:start position:0%
is determined by the GC and that's one
 

00:05:16.919 --> 00:05:18.629 align:start position:0%
is determined by the GC and that's one
of<00:05:17.039><c> the</c><00:05:17.120><c> big</c><00:05:17.320><c> values</c><00:05:17.639><c> that</c><00:05:17.759><c> the</c><00:05:17.880><c> GC</c><00:05:18.240><c> brings</c>

00:05:18.629 --> 00:05:18.639 align:start position:0%
of the big values that the GC brings
 

00:05:18.639 --> 00:05:20.230 align:start position:0%
of the big values that the GC brings
like<00:05:18.759><c> you</c><00:05:18.880><c> can</c><00:05:19.080><c> create</c><00:05:19.319><c> an</c><00:05:19.520><c> object</c><00:05:20.000><c> you</c><00:05:20.080><c> don't</c>

00:05:20.230 --> 00:05:20.240 align:start position:0%
like you can create an object you don't
 

00:05:20.240 --> 00:05:22.270 align:start position:0%
like you can create an object you don't
have<00:05:20.319><c> to</c><00:05:20.400><c> do</c><00:05:20.520><c> anything</c><00:05:20.880><c> explicit</c><00:05:21.720><c> to</c><00:05:22.000><c> deal</c>

00:05:22.270 --> 00:05:22.280 align:start position:0%
have to do anything explicit to deal
 

00:05:22.280 --> 00:05:23.469 align:start position:0%
have to do anything explicit to deal
with<00:05:22.400><c> the</c><00:05:22.520><c> fact</c><00:05:22.680><c> that</c><00:05:22.800><c> the</c><00:05:23.120><c> object</c><00:05:23.360><c> is</c>

00:05:23.469 --> 00:05:23.479 align:start position:0%
with the fact that the object is
 

00:05:23.479 --> 00:05:24.550 align:start position:0%
with the fact that the object is
eventually<00:05:23.919><c> going</c><00:05:24.039><c> to</c><00:05:24.199><c> become</c><00:05:24.400><c> an</c>

00:05:24.550 --> 00:05:24.560 align:start position:0%
eventually going to become an
 

00:05:24.560 --> 00:05:26.270 align:start position:0%
eventually going to become an
interesting<00:05:25.160><c> and</c><00:05:25.240><c> that</c><00:05:25.400><c> that</c><00:05:25.560><c> storage</c><00:05:26.039><c> can</c><00:05:26.120><c> be</c>

00:05:26.270 --> 00:05:26.280 align:start position:0%
interesting and that that storage can be
 

00:05:26.280 --> 00:05:27.909 align:start position:0%
interesting and that that storage can be
reclaimed<00:05:26.720><c> and</c><00:05:26.880><c> reused</c><00:05:27.240><c> for</c><00:05:27.440><c> something</c><00:05:27.680><c> else</c>

00:05:27.909 --> 00:05:27.919 align:start position:0%
reclaimed and reused for something else
 

00:05:27.919 --> 00:05:30.710 align:start position:0%
reclaimed and reused for something else
that<00:05:28.039><c> GC</c><00:05:28.440><c> figures</c><00:05:28.759><c> it</c><00:05:28.880><c> all</c><00:05:29.039><c> out</c><00:05:29.240><c> before</c><00:05:29.440><c> you</c>

00:05:30.710 --> 00:05:30.720 align:start position:0%
that GC figures it all out before you
 

00:05:30.720 --> 00:05:32.990 align:start position:0%
that GC figures it all out before you
um<00:05:31.280><c> and</c><00:05:31.400><c> then</c><00:05:31.520><c> there</c><00:05:31.600><c> are</c><00:05:31.800><c> structs</c><00:05:32.240><c> or</c><00:05:32.440><c> value</c>

00:05:32.990 --> 00:05:33.000 align:start position:0%
um and then there are structs or value
 

00:05:33.000 --> 00:05:35.430 align:start position:0%
um and then there are structs or value
types<00:05:34.000><c> these</c><00:05:34.120><c> are</c><00:05:34.319><c> usually</c><00:05:34.680><c> allocated</c><00:05:35.120><c> on</c><00:05:35.240><c> the</c>

00:05:35.430 --> 00:05:35.440 align:start position:0%
types these are usually allocated on the
 

00:05:35.440 --> 00:05:37.189 align:start position:0%
types these are usually allocated on the
stack<00:05:35.880><c> but</c><00:05:36.000><c> you</c><00:05:36.080><c> can</c><00:05:36.319><c> box</c><00:05:36.639><c> them</c><00:05:36.800><c> and</c><00:05:36.919><c> put</c><00:05:37.080><c> them</c>

00:05:37.189 --> 00:05:37.199 align:start position:0%
stack but you can box them and put them
 

00:05:37.199 --> 00:05:39.350 align:start position:0%
stack but you can box them and put them
on<00:05:37.400><c> heap</c><00:05:37.680><c> if</c><00:05:37.800><c> you</c><00:05:37.919><c> really</c><00:05:38.120><c> want</c><00:05:38.360><c> them</c><00:05:38.560><c> there</c><00:05:38.759><c> or</c>

00:05:39.350 --> 00:05:39.360 align:start position:0%
on heap if you really want them there or
 

00:05:39.360 --> 00:05:40.510 align:start position:0%
on heap if you really want them there or
sometimes<00:05:39.600><c> inadvertently</c><00:05:40.199><c> they'll</c><00:05:40.360><c> get</c>

00:05:40.510 --> 00:05:40.520 align:start position:0%
sometimes inadvertently they'll get
 

00:05:40.520 --> 00:05:42.990 align:start position:0%
sometimes inadvertently they'll get
boxed<00:05:40.880><c> when</c><00:05:40.960><c> you</c><00:05:41.039><c> weren't</c><00:05:41.360><c> expecting</c><00:05:41.759><c> it</c><00:05:42.680><c> um</c>

00:05:42.990 --> 00:05:43.000 align:start position:0%
boxed when you weren't expecting it um
 

00:05:43.000 --> 00:05:45.070 align:start position:0%
boxed when you weren't expecting it um
if<00:05:43.120><c> they're</c><00:05:43.319><c> allocated</c><00:05:43.720><c> on</c><00:05:43.840><c> the</c><00:05:44.039><c> stack</c><00:05:44.759><c> then</c><00:05:44.960><c> a</c>

00:05:45.070 --> 00:05:45.080 align:start position:0%
if they're allocated on the stack then a
 

00:05:45.080 --> 00:05:47.590 align:start position:0%
if they're allocated on the stack then a
bunch<00:05:45.280><c> of</c><00:05:45.400><c> good</c><00:05:45.600><c> things</c><00:05:45.960><c> happen</c><00:05:46.800><c> the</c><00:05:46.960><c> fields</c>

00:05:47.590 --> 00:05:47.600 align:start position:0%
bunch of good things happen the fields
 

00:05:47.600 --> 00:05:49.670 align:start position:0%
bunch of good things happen the fields
of<00:05:47.800><c> that</c><00:05:48.000><c> value</c><00:05:48.360><c> type</c><00:05:48.680><c> can</c><00:05:48.840><c> be</c><00:05:49.039><c> promoted</c><00:05:49.479><c> to</c>

00:05:49.670 --> 00:05:49.680 align:start position:0%
of that value type can be promoted to
 

00:05:49.680 --> 00:05:51.270 align:start position:0%
of that value type can be promoted to
the<00:05:49.840><c> jit</c><00:05:50.160><c> and</c><00:05:50.360><c> act</c><00:05:50.560><c> as</c><00:05:50.680><c> if</c><00:05:50.840><c> they</c><00:05:50.960><c> were</c>

00:05:51.270 --> 00:05:51.280 align:start position:0%
the jit and act as if they were
 

00:05:51.280 --> 00:05:53.390 align:start position:0%
the jit and act as if they were
effectively<00:05:51.720><c> local</c><00:05:52.039><c> variables</c><00:05:52.720><c> in</c><00:05:52.880><c> your</c>

00:05:53.390 --> 00:05:53.400 align:start position:0%
effectively local variables in your
 

00:05:53.400 --> 00:05:56.110 align:start position:0%
effectively local variables in your
method<00:05:54.400><c> and</c><00:05:54.880><c> those</c><00:05:55.120><c> promoted</c><00:05:55.560><c> Fields</c><00:05:55.960><c> can</c>

00:05:56.110 --> 00:05:56.120 align:start position:0%
method and those promoted Fields can
 

00:05:56.120 --> 00:05:57.469 align:start position:0%
method and those promoted Fields can
live<00:05:56.280><c> in</c><00:05:56.440><c> registers</c><00:05:57.080><c> they</c><00:05:57.160><c> can</c><00:05:57.280><c> be</c>

00:05:57.469 --> 00:05:57.479 align:start position:0%
live in registers they can be
 

00:05:57.479 --> 00:05:59.830 align:start position:0%
live in registers they can be
aggressively<00:05:58.039><c> analyzed</c><00:05:58.560><c> and</c><00:05:58.800><c> optimized</c><00:05:59.720><c> and</c>

00:05:59.830 --> 00:05:59.840 align:start position:0%
aggressively analyzed and optimized and
 

00:05:59.840 --> 00:06:01.189 align:start position:0%
aggressively analyzed and optimized and
so<00:05:59.960><c> a</c><00:06:00.039><c> lot</c><00:06:00.160><c> of</c><00:06:00.280><c> good</c><00:06:00.440><c> things</c><00:06:00.720><c> happen</c><00:06:00.960><c> when</c>

00:06:01.189 --> 00:06:01.199 align:start position:0%
so a lot of good things happen when
 

00:06:01.199 --> 00:06:04.550 align:start position:0%
so a lot of good things happen when
promotion<00:06:01.720><c> kicks</c><00:06:02.000><c> in</c><00:06:02.240><c> for</c><00:06:02.560><c> a</c><00:06:02.840><c> struct</c><00:06:03.639><c> um</c><00:06:04.400><c> and</c>

00:06:04.550 --> 00:06:04.560 align:start position:0%
promotion kicks in for a struct um and
 

00:06:04.560 --> 00:06:06.390 align:start position:0%
promotion kicks in for a struct um and
the<00:06:04.720><c> lifetime</c><00:06:05.120><c> of</c><00:06:05.240><c> the</c><00:06:05.400><c> struct</c><00:06:05.800><c> is</c><00:06:05.960><c> determined</c>

00:06:06.390 --> 00:06:06.400 align:start position:0%
the lifetime of the struct is determined
 

00:06:06.400 --> 00:06:07.990 align:start position:0%
the lifetime of the struct is determined
by<00:06:06.560><c> the</c><00:06:06.680><c> lifetime</c><00:06:07.039><c> of</c><00:06:07.120><c> the</c><00:06:07.240><c> stack</c><00:06:07.599><c> frame</c><00:06:07.880><c> where</c>

00:06:07.990 --> 00:06:08.000 align:start position:0%
by the lifetime of the stack frame where
 

00:06:08.000 --> 00:06:10.230 align:start position:0%
by the lifetime of the stack frame where
the<00:06:08.080><c> struct</c><00:06:08.440><c> is</c><00:06:08.599><c> allocated</c><00:06:09.520><c> so</c><00:06:09.720><c> when</c><00:06:09.919><c> that</c>

00:06:10.230 --> 00:06:10.240 align:start position:0%
the struct is allocated so when that
 

00:06:10.240 --> 00:06:11.909 align:start position:0%
the struct is allocated so when that
particular<00:06:10.680><c> stack</c><00:06:10.960><c> frame</c><00:06:11.360><c> returns</c><00:06:11.759><c> that</c>

00:06:11.909 --> 00:06:11.919 align:start position:0%
particular stack frame returns that
 

00:06:11.919 --> 00:06:13.870 align:start position:0%
particular stack frame returns that
storage<00:06:12.240><c> is</c><00:06:12.360><c> freed</c><00:06:12.639><c> up</c><00:06:12.800><c> and</c><00:06:12.919><c> it</c><00:06:13.000><c> can</c><00:06:13.120><c> be</c><00:06:13.319><c> reused</c>

00:06:13.870 --> 00:06:13.880 align:start position:0%
storage is freed up and it can be reused
 

00:06:13.880 --> 00:06:16.670 align:start position:0%
storage is freed up and it can be reused
so<00:06:14.039><c> you</c><00:06:14.199><c> get</c><00:06:14.759><c> somewhat</c><00:06:15.160><c> cheaper</c><00:06:15.759><c> allocation</c>

00:06:16.670 --> 00:06:16.680 align:start position:0%
so you get somewhat cheaper allocation
 

00:06:16.680 --> 00:06:18.790 align:start position:0%
so you get somewhat cheaper allocation
one<00:06:16.840><c> might</c><00:06:17.039><c> say</c><00:06:17.280><c> it's</c><00:06:17.440><c> not</c><00:06:17.759><c> not</c><00:06:17.960><c> slam</c><00:06:18.319><c> dunk</c><00:06:18.639><c> but</c>

00:06:18.790 --> 00:06:18.800 align:start position:0%
one might say it's not not slam dunk but
 

00:06:18.800 --> 00:06:21.670 align:start position:0%
one might say it's not not slam dunk but
likely<00:06:19.080><c> cheaper</c><00:06:20.039><c> um</c><00:06:20.560><c> if</c><00:06:20.680><c> you</c><00:06:20.800><c> end</c><00:06:21.000><c> up</c><00:06:21.240><c> copying</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
likely cheaper um if you end up copying
 

00:06:21.680 --> 00:06:24.029 align:start position:0%
likely cheaper um if you end up copying
your<00:06:21.840><c> struck</c><00:06:22.280><c> to</c><00:06:22.400><c> the</c><00:06:22.520><c> heat</c><00:06:22.800><c> via</c><00:06:23.039><c> boxing</c><00:06:23.919><c> then</c>

00:06:24.029 --> 00:06:24.039 align:start position:0%
your struck to the heat via boxing then
 

00:06:24.039 --> 00:06:26.629 align:start position:0%
your struck to the heat via boxing then
the<00:06:24.199><c> lifetime</c><00:06:24.680><c> just</c><00:06:24.880><c> as</c><00:06:25.120><c> with</c><00:06:25.360><c> a</c><00:06:25.960><c> class</c><00:06:26.479><c> is</c>

00:06:26.629 --> 00:06:26.639 align:start position:0%
the lifetime just as with a class is
 

00:06:26.639 --> 00:06:28.870 align:start position:0%
the lifetime just as with a class is
going<00:06:26.720><c> to</c><00:06:26.840><c> be</c><00:06:26.919><c> determined</c><00:06:27.360><c> by</c><00:06:27.479><c> the</c><00:06:27.639><c> GC</c><00:06:28.639><c> um</c><00:06:28.800><c> and</c>

00:06:28.870 --> 00:06:28.880 align:start position:0%
going to be determined by the GC um and
 

00:06:28.880 --> 00:06:30.070 align:start position:0%
going to be determined by the GC um and
when<00:06:29.000><c> you</c><00:06:29.080><c> want</c><00:06:29.160><c> to</c><00:06:29.280><c> operate</c><00:06:29.680><c> on</c><00:06:29.800><c> the</c><00:06:29.880><c> thing</c>

00:06:30.070 --> 00:06:30.080 align:start position:0%
when you want to operate on the thing
 

00:06:30.080 --> 00:06:31.950 align:start position:0%
when you want to operate on the thing
typically<00:06:30.440><c> you</c><00:06:30.560><c> have</c><00:06:30.680><c> to</c><00:06:30.880><c> unbox</c><00:06:31.319><c> it</c><00:06:31.639><c> copy</c><00:06:31.840><c> it</c>

00:06:31.950 --> 00:06:31.960 align:start position:0%
typically you have to unbox it copy it
 

00:06:31.960 --> 00:06:34.550 align:start position:0%
typically you have to unbox it copy it
to<00:06:32.080><c> a</c><00:06:32.240><c> local</c><00:06:32.520><c> stack</c><00:06:32.880><c> allocated</c><00:06:33.479><c> case</c><00:06:34.120><c> use</c><00:06:34.400><c> that</c>

00:06:34.550 --> 00:06:34.560 align:start position:0%
to a local stack allocated case use that
 

00:06:34.560 --> 00:06:36.830 align:start position:0%
to a local stack allocated case use that
in<00:06:34.680><c> your</c><00:06:35.319><c> computation</c><00:06:36.319><c> so</c><00:06:36.479><c> what</c><00:06:36.560><c> we've</c><00:06:36.720><c> done</c>

00:06:36.830 --> 00:06:36.840 align:start position:0%
in your computation so what we've done
 

00:06:36.840 --> 00:06:39.350 align:start position:0%
in your computation so what we've done
in<00:06:37.000><c> doet</c><00:06:37.360><c> 9</c><00:06:38.080><c> is</c><00:06:38.240><c> we've</c><00:06:38.440><c> enabled</c><00:06:38.800><c> a</c><00:06:38.919><c> new</c>

00:06:39.350 --> 00:06:39.360 align:start position:0%
in doet 9 is we've enabled a new
 

00:06:39.360 --> 00:06:40.990 align:start position:0%
in doet 9 is we've enabled a new
technology<00:06:39.840><c> in</c><00:06:40.000><c> the</c><00:06:40.120><c> jit</c><00:06:40.400><c> called</c><00:06:40.680><c> object</c>

00:06:40.990 --> 00:06:41.000 align:start position:0%
technology in the jit called object
 

00:06:41.000 --> 00:06:43.990 align:start position:0%
technology in the jit called object
stack<00:06:41.400><c> allocation</c><00:06:42.400><c> where</c><00:06:42.599><c> if</c><00:06:42.759><c> we</c><00:06:42.880><c> can</c><00:06:43.199><c> prove</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
stack allocation where if we can prove
 

00:06:44.000 --> 00:06:45.589 align:start position:0%
stack allocation where if we can prove
that<00:06:44.199><c> even</c><00:06:44.400><c> though</c><00:06:44.560><c> you</c><00:06:44.720><c> created</c><00:06:45.039><c> an</c><00:06:45.240><c> object</c>

00:06:45.589 --> 00:06:45.599 align:start position:0%
that even though you created an object
 

00:06:45.599 --> 00:06:47.710 align:start position:0%
that even though you created an object
and<00:06:45.720><c> you</c><00:06:45.800><c> said</c><00:06:45.960><c> to</c><00:06:46.080><c> put</c><00:06:46.199><c> it</c><00:06:46.319><c> on</c><00:06:46.400><c> the</c><00:06:46.560><c> Heap</c><00:06:47.479><c> if</c>

00:06:47.710 --> 00:06:47.720 align:start position:0%
and you said to put it on the Heap if
 

00:06:47.720 --> 00:06:50.029 align:start position:0%
and you said to put it on the Heap if
the<00:06:48.039><c> lifetime</c><00:06:48.520><c> of</c><00:06:48.680><c> that</c><00:06:48.880><c> object</c><00:06:49.240><c> is</c><00:06:49.479><c> bounded</c>

00:06:50.029 --> 00:06:50.039 align:start position:0%
the lifetime of that object is bounded
 

00:06:50.039 --> 00:06:51.710 align:start position:0%
the lifetime of that object is bounded
constrained<00:06:50.599><c> by</c><00:06:50.800><c> that</c><00:06:50.960><c> stack</c><00:06:51.280><c> frame</c><00:06:51.560><c> that</c>

00:06:51.710 --> 00:06:51.720 align:start position:0%
constrained by that stack frame that
 

00:06:51.720 --> 00:06:54.550 align:start position:0%
constrained by that stack frame that
allocated<00:06:52.199><c> it</c><00:06:52.759><c> then</c><00:06:52.960><c> we'll</c><00:06:53.199><c> treat</c><00:06:53.880><c> that</c>

00:06:54.550 --> 00:06:54.560 align:start position:0%
allocated it then we'll treat that
 

00:06:54.560 --> 00:06:56.950 align:start position:0%
allocated it then we'll treat that
object<00:06:55.120><c> like</c><00:06:55.240><c> a</c><00:06:55.400><c> value</c><00:06:55.720><c> type</c><00:06:55.960><c> like</c><00:06:56.080><c> a</c><00:06:56.160><c> struct</c>

00:06:56.950 --> 00:06:56.960 align:start position:0%
object like a value type like a struct
 

00:06:56.960 --> 00:06:58.510 align:start position:0%
object like a value type like a struct
and<00:06:57.039><c> so</c><00:06:57.199><c> we'll</c><00:06:57.479><c> allocate</c><00:06:57.919><c> the</c><00:06:58.039><c> storage</c><00:06:58.360><c> for</c>

00:06:58.510 --> 00:06:58.520 align:start position:0%
and so we'll allocate the storage for
 

00:06:58.520 --> 00:07:00.270 align:start position:0%
and so we'll allocate the storage for
the<00:06:58.680><c> object</c><00:06:58.919><c> on</c><00:06:59.080><c> the</c><00:06:59.240><c> stack</c>

00:07:00.270 --> 00:07:00.280 align:start position:0%
the object on the stack
 

00:07:00.280 --> 00:07:02.189 align:start position:0%
the object on the stack
and<00:07:00.520><c> then</c><00:07:00.840><c> we</c><00:07:00.960><c> will</c><00:07:01.440><c> all</c><00:07:01.599><c> those</c><00:07:01.840><c> good</c><00:07:02.000><c> things</c>

00:07:02.189 --> 00:07:02.199 align:start position:0%
and then we will all those good things
 

00:07:02.199 --> 00:07:03.749 align:start position:0%
and then we will all those good things
that<00:07:02.400><c> happen</c><00:07:02.639><c> when</c><00:07:02.759><c> you</c><00:07:02.879><c> have</c><00:07:03.000><c> a</c><00:07:03.120><c> struct</c><00:07:03.560><c> kick</c>

00:07:03.749 --> 00:07:03.759 align:start position:0%
that happen when you have a struct kick
 

00:07:03.759 --> 00:07:05.350 align:start position:0%
that happen when you have a struct kick
in<00:07:04.000><c> we</c><00:07:04.080><c> can</c><00:07:04.280><c> promote</c><00:07:04.599><c> the</c><00:07:04.680><c> fields</c><00:07:05.120><c> we</c><00:07:05.199><c> can</c>

00:07:05.350 --> 00:07:05.360 align:start position:0%
in we can promote the fields we can
 

00:07:05.360 --> 00:07:07.550 align:start position:0%
in we can promote the fields we can
aggressively<00:07:05.879><c> optimize</c><00:07:06.360><c> the</c><00:07:06.479><c> fields</c><00:07:07.360><c> this</c>

00:07:07.550 --> 00:07:07.560 align:start position:0%
aggressively optimize the fields this
 

00:07:07.560 --> 00:07:09.390 align:start position:0%
aggressively optimize the fields this
will<00:07:07.759><c> work</c><00:07:08.000><c> even</c><00:07:08.160><c> if</c><00:07:08.280><c> you</c><00:07:08.400><c> have</c><00:07:08.520><c> a</c><00:07:08.680><c> box</c><00:07:09.039><c> value</c>

00:07:09.390 --> 00:07:09.400 align:start position:0%
will work even if you have a box value
 

00:07:09.400 --> 00:07:11.749 align:start position:0%
will work even if you have a box value
type<00:07:10.160><c> and</c><00:07:10.280><c> the</c><00:07:10.400><c> key</c><00:07:10.560><c> enabler</c><00:07:11.000><c> is</c><00:07:11.160><c> this</c><00:07:11.400><c> proof</c>

00:07:11.749 --> 00:07:11.759 align:start position:0%
type and the key enabler is this proof
 

00:07:11.759 --> 00:07:13.150 align:start position:0%
type and the key enabler is this proof
that<00:07:11.919><c> the</c><00:07:12.039><c> lifetime</c><00:07:12.400><c> is</c><00:07:12.560><c> constrained</c><00:07:13.039><c> and</c>

00:07:13.150 --> 00:07:13.160 align:start position:0%
that the lifetime is constrained and
 

00:07:13.160 --> 00:07:15.550 align:start position:0%
that the lifetime is constrained and
that's<00:07:13.360><c> the</c><00:07:13.479><c> thing</c><00:07:13.639><c> we</c><00:07:13.800><c> call</c><00:07:14.080><c> Escape</c><00:07:14.560><c> analysis</c>

00:07:15.550 --> 00:07:15.560 align:start position:0%
that's the thing we call Escape analysis
 

00:07:15.560 --> 00:07:17.189 align:start position:0%
that's the thing we call Escape analysis
if<00:07:15.680><c> you're</c><00:07:15.840><c> familiar</c><00:07:16.199><c> with</c><00:07:16.360><c> Java</c><00:07:16.639><c> orgo</c><00:07:17.120><c> they</c>

00:07:17.189 --> 00:07:17.199 align:start position:0%
if you're familiar with Java orgo they
 

00:07:17.199 --> 00:07:19.790 align:start position:0%
if you're familiar with Java orgo they
have<00:07:17.400><c> had</c><00:07:17.599><c> this</c><00:07:17.840><c> capability</c><00:07:18.319><c> for</c><00:07:18.479><c> a</c><00:07:18.599><c> long</c><00:07:18.840><c> time</c>

00:07:19.790 --> 00:07:19.800 align:start position:0%
have had this capability for a long time
 

00:07:19.800 --> 00:07:21.110 align:start position:0%
have had this capability for a long time
in<00:07:19.919><c> the</c><00:07:20.000><c> case</c><00:07:20.160><c> of</c><00:07:20.319><c> java</c><00:07:20.599><c> they</c><00:07:20.720><c> don't</c><00:07:20.960><c> have</c>

00:07:21.110 --> 00:07:21.120 align:start position:0%
in the case of java they don't have
 

00:07:21.120 --> 00:07:23.629 align:start position:0%
in the case of java they don't have
struct<00:07:21.599><c> so</c><00:07:21.759><c> having</c><00:07:22.039><c> Escape</c><00:07:22.400><c> analysis</c><00:07:23.400><c> and</c>

00:07:23.629 --> 00:07:23.639 align:start position:0%
struct so having Escape analysis and
 

00:07:23.639 --> 00:07:25.390 align:start position:0%
struct so having Escape analysis and
stack<00:07:23.879><c> allocation</c><00:07:24.280><c> turned</c><00:07:24.520><c> out</c><00:07:24.639><c> to</c><00:07:24.759><c> be</c><00:07:24.960><c> key</c><00:07:25.240><c> to</c>

00:07:25.390 --> 00:07:25.400 align:start position:0%
stack allocation turned out to be key to
 

00:07:25.400 --> 00:07:27.710 align:start position:0%
stack allocation turned out to be key to
doing<00:07:25.720><c> a</c><00:07:25.800><c> lot</c><00:07:25.919><c> of</c><00:07:26.080><c> things</c><00:07:26.720><c> the</c><00:07:26.879><c> upshot</c><00:07:27.319><c> is</c><00:07:27.560><c> when</c>

00:07:27.710 --> 00:07:27.720 align:start position:0%
doing a lot of things the upshot is when
 

00:07:27.720 --> 00:07:28.990 align:start position:0%
doing a lot of things the upshot is when
this<00:07:27.879><c> kicks</c><00:07:28.120><c> in</c><00:07:28.280><c> you</c><00:07:28.400><c> have</c><00:07:28.520><c> less</c><00:07:28.759><c> Heap</c>

00:07:28.990 --> 00:07:29.000 align:start position:0%
this kicks in you have less Heap
 

00:07:29.000 --> 00:07:30.029 align:start position:0%
this kicks in you have less Heap
allocation

00:07:30.029 --> 00:07:30.039 align:start position:0%
allocation
 

00:07:30.039 --> 00:07:31.749 align:start position:0%
allocation
and<00:07:30.240><c> better</c><00:07:30.520><c> code</c><00:07:30.720><c> optimization</c><00:07:31.319><c> at</c><00:07:31.440><c> the</c><00:07:31.520><c> same</c>

00:07:31.749 --> 00:07:31.759 align:start position:0%
and better code optimization at the same
 

00:07:31.759 --> 00:07:33.909 align:start position:0%
and better code optimization at the same
time<00:07:31.919><c> so</c><00:07:32.039><c> it's</c><00:07:32.280><c> really</c><00:07:32.479><c> nice</c>

00:07:33.909 --> 00:07:33.919 align:start position:0%
time so it's really nice
 

00:07:33.919 --> 00:07:35.990 align:start position:0%
time so it's really nice
combination<00:07:34.919><c> there's</c><00:07:35.080><c> a</c><00:07:35.240><c> simple</c><00:07:35.560><c> example</c>

00:07:35.990 --> 00:07:36.000 align:start position:0%
combination there's a simple example
 

00:07:36.000 --> 00:07:38.830 align:start position:0%
combination there's a simple example
hopefully<00:07:36.479><c> simple</c><00:07:37.199><c> we</c><00:07:37.360><c> have</c><00:07:37.599><c> a</c><00:07:37.800><c> a</c><00:07:37.960><c> struct</c><00:07:38.400><c> here</c>

00:07:38.830 --> 00:07:38.840 align:start position:0%
hopefully simple we have a a struct here
 

00:07:38.840 --> 00:07:40.189 align:start position:0%
hopefully simple we have a a struct here
or<00:07:39.080><c> actually</c><00:07:39.280><c> we</c><00:07:39.360><c> have</c><00:07:39.440><c> a</c><00:07:39.560><c> class</c><00:07:39.840><c> here</c><00:07:40.039><c> called</c>

00:07:40.189 --> 00:07:40.199 align:start position:0%
or actually we have a class here called
 

00:07:40.199 --> 00:07:42.550 align:start position:0%
or actually we have a class here called
a<00:07:40.319><c> rectangle</c><00:07:40.840><c> it</c><00:07:41.000><c> implements</c><00:07:41.400><c> a</c><00:07:41.520><c> shape</c>

00:07:42.550 --> 00:07:42.560 align:start position:0%
a rectangle it implements a shape
 

00:07:42.560 --> 00:07:44.430 align:start position:0%
a rectangle it implements a shape
interface<00:07:43.560><c> and</c><00:07:43.680><c> we're</c><00:07:43.840><c> just</c><00:07:43.919><c> going</c><00:07:44.039><c> to</c><00:07:44.159><c> create</c>

00:07:44.430 --> 00:07:44.440 align:start position:0%
interface and we're just going to create
 

00:07:44.440 --> 00:07:45.749 align:start position:0%
interface and we're just going to create
one<00:07:44.520><c> of</c><00:07:44.680><c> these</c><00:07:44.960><c> guys</c><00:07:45.280><c> and</c><00:07:45.400><c> we're</c><00:07:45.560><c> going</c><00:07:45.639><c> to</c>

00:07:45.749 --> 00:07:45.759 align:start position:0%
one of these guys and we're going to
 

00:07:45.759 --> 00:07:47.869 align:start position:0%
one of these guys and we're going to
call<00:07:46.080><c> a</c><00:07:46.240><c> method</c><00:07:46.520><c> on</c><00:07:46.680><c> it</c><00:07:47.080><c> um</c><00:07:47.199><c> so</c><00:07:47.440><c> pretty</c>

00:07:47.869 --> 00:07:47.879 align:start position:0%
call a method on it um so pretty
 

00:07:47.879 --> 00:07:50.270 align:start position:0%
call a method on it um so pretty
straightforward<00:07:48.879><c> but</c><00:07:49.240><c> when</c><00:07:49.440><c> we</c><00:07:49.639><c> create</c><00:07:50.000><c> it</c>

00:07:50.270 --> 00:07:50.280 align:start position:0%
straightforward but when we create it
 

00:07:50.280 --> 00:07:51.950 align:start position:0%
straightforward but when we create it
we're<00:07:50.440><c> going</c><00:07:50.639><c> to</c><00:07:50.879><c> refer</c><00:07:51.199><c> to</c><00:07:51.360><c> it</c><00:07:51.560><c> through</c><00:07:51.759><c> its</c>

00:07:51.950 --> 00:07:51.960 align:start position:0%
we're going to refer to it through its
 

00:07:51.960 --> 00:07:53.629 align:start position:0%
we're going to refer to it through its
interface<00:07:52.400><c> type</c><00:07:52.759><c> rather</c><00:07:53.000><c> than</c><00:07:53.199><c> through</c><00:07:53.400><c> its</c>

00:07:53.629 --> 00:07:53.639 align:start position:0%
interface type rather than through its
 

00:07:53.639 --> 00:07:56.350 align:start position:0%
interface type rather than through its
Class<00:07:54.000><c> Type</c><00:07:54.520><c> and</c><00:07:54.639><c> when</c><00:07:54.800><c> we</c><00:07:54.919><c> do</c><00:07:55.240><c> that</c><00:07:55.960><c> then</c><00:07:56.240><c> the</c>

00:07:56.350 --> 00:07:56.360 align:start position:0%
Class Type and when we do that then the
 

00:07:56.360 --> 00:07:58.350 align:start position:0%
Class Type and when we do that then the
runtime<00:07:56.840><c> has</c><00:07:56.960><c> to</c><00:07:57.199><c> assume</c><00:07:57.800><c> generally</c><00:07:58.240><c> that</c>

00:07:58.350 --> 00:07:58.360 align:start position:0%
runtime has to assume generally that
 

00:07:58.360 --> 00:08:00.629 align:start position:0%
runtime has to assume generally that
this<00:07:58.560><c> interface</c><00:07:59.080><c> could</c><00:07:59.720><c> be</c><00:07:59.879><c> implemented</c><00:08:00.440><c> by</c><00:08:00.560><c> a</c>

00:08:00.629 --> 00:08:00.639 align:start position:0%
this interface could be implemented by a
 

00:08:00.639 --> 00:08:04.110 align:start position:0%
this interface could be implemented by a
bunch<00:08:00.840><c> of</c><00:08:01.000><c> other</c><00:08:01.599><c> classes</c><00:08:02.599><c> um</c><00:08:03.240><c> and</c>

00:08:04.110 --> 00:08:04.120 align:start position:0%
bunch of other classes um and
 

00:08:04.120 --> 00:08:07.790 align:start position:0%
bunch of other classes um and
so<00:08:05.120><c> when</c><00:08:05.280><c> we</c><00:08:05.440><c> generate</c><00:08:05.840><c> code</c><00:08:06.120><c> for</c><00:08:06.360><c> it</c><00:08:07.199><c> um</c><00:08:07.680><c> you</c>

00:08:07.790 --> 00:08:07.800 align:start position:0%
so when we generate code for it um you
 

00:08:07.800 --> 00:08:09.749 align:start position:0%
so when we generate code for it um you
know<00:08:08.039><c> we</c><00:08:08.159><c> have</c><00:08:08.560><c> a</c><00:08:08.680><c> bunch</c><00:08:08.840><c> of</c><00:08:09.080><c> possibilities</c>

00:08:09.749 --> 00:08:09.759 align:start position:0%
know we have a bunch of possibilities
 

00:08:09.759 --> 00:08:11.830 align:start position:0%
know we have a bunch of possibilities
now<00:08:09.919><c> in</c><00:08:10.000><c> 8.0</c><00:08:10.599><c> we</c><00:08:10.680><c> were</c><00:08:10.840><c> smart</c><00:08:11.199><c> enough</c><00:08:11.400><c> to</c><00:08:11.560><c> see</c>

00:08:11.830 --> 00:08:11.840 align:start position:0%
now in 8.0 we were smart enough to see
 

00:08:11.840 --> 00:08:13.589 align:start position:0%
now in 8.0 we were smart enough to see
that<00:08:12.039><c> this</c><00:08:12.240><c> thing</c><00:08:12.440><c> was</c><00:08:12.720><c> really</c><00:08:12.960><c> a</c><00:08:13.120><c> rectangle</c>

00:08:13.589 --> 00:08:13.599 align:start position:0%
that this thing was really a rectangle
 

00:08:13.599 --> 00:08:15.510 align:start position:0%
that this thing was really a rectangle
under<00:08:13.840><c> the</c><00:08:13.960><c> covers</c><00:08:14.639><c> so</c><00:08:14.800><c> we</c><00:08:14.960><c> basically</c><00:08:15.280><c> Dev</c>

00:08:15.510 --> 00:08:15.520 align:start position:0%
under the covers so we basically Dev
 

00:08:15.520 --> 00:08:17.670 align:start position:0%
under the covers so we basically Dev
viralize<00:08:15.960><c> that</c><00:08:16.120><c> interface</c><00:08:16.560><c> call</c><00:08:17.440><c> but</c><00:08:17.560><c> in</c>

00:08:17.670 --> 00:08:17.680 align:start position:0%
viralize that interface call but in
 

00:08:17.680 --> 00:08:19.430 align:start position:0%
viralize that interface call but in
order<00:08:17.879><c> to</c><00:08:18.039><c> do</c><00:08:18.240><c> make</c><00:08:18.400><c> interface</c><00:08:18.840><c> dispatch</c><00:08:19.240><c> work</c>

00:08:19.430 --> 00:08:19.440 align:start position:0%
order to do make interface dispatch work
 

00:08:19.440 --> 00:08:21.110 align:start position:0%
order to do make interface dispatch work
we<00:08:19.599><c> had</c><00:08:19.680><c> to</c><00:08:19.840><c> allocate</c><00:08:20.240><c> an</c><00:08:20.440><c> object</c><00:08:20.879><c> and</c><00:08:21.000><c> so</c>

00:08:21.110 --> 00:08:21.120 align:start position:0%
we had to allocate an object and so
 

00:08:21.120 --> 00:08:23.589 align:start position:0%
we had to allocate an object and so
we're<00:08:21.280><c> still</c><00:08:21.560><c> allocating</c><00:08:22.039><c> an</c><00:08:22.159><c> object</c><00:08:22.440><c> in</c><00:08:22.599><c> 8.0</c>

00:08:23.589 --> 00:08:23.599 align:start position:0%
we're still allocating an object in 8.0
 

00:08:23.599 --> 00:08:25.029 align:start position:0%
we're still allocating an object in 8.0
and<00:08:23.720><c> then</c><00:08:23.800><c> we're</c><00:08:24.000><c> initializing</c><00:08:24.520><c> its</c><00:08:24.680><c> field</c><00:08:24.960><c> so</c>

00:08:25.029 --> 00:08:25.039 align:start position:0%
and then we're initializing its field so
 

00:08:25.039 --> 00:08:26.189 align:start position:0%
and then we're initializing its field so
if<00:08:25.120><c> you</c><00:08:25.199><c> sort</c><00:08:25.319><c> of</c><00:08:25.400><c> look</c><00:08:25.520><c> at</c><00:08:25.639><c> that</c><00:08:25.759><c> little</c><00:08:26.000><c> box</c>

00:08:26.189 --> 00:08:26.199 align:start position:0%
if you sort of look at that little box
 

00:08:26.199 --> 00:08:28.390 align:start position:0%
if you sort of look at that little box
of<00:08:26.360><c> Coden</c><00:08:26.759><c> that</c><00:08:26.840><c> says</c><00:08:27.039><c> 8.0</c><00:08:28.039><c> you'll</c><00:08:28.240><c> see</c>

00:08:28.390 --> 00:08:28.400 align:start position:0%
of Coden that says 8.0 you'll see
 

00:08:28.400 --> 00:08:30.749 align:start position:0%
of Coden that says 8.0 you'll see
there's<00:08:28.560><c> a</c><00:08:28.840><c> call</c><00:08:29.120><c> in</c><00:08:29.599><c> there</c><00:08:30.000><c> to</c><00:08:30.199><c> a</c><00:08:30.360><c> method</c>

00:08:30.749 --> 00:08:30.759 align:start position:0%
there's a call in there to a method
 

00:08:30.759 --> 00:08:33.909 align:start position:0%
there's a call in there to a method
called<00:08:31.000><c> or</c><00:08:31.400><c> a</c><00:08:32.120><c> routine</c><00:08:32.560><c> called</c><00:08:32.800><c> core</c><00:08:33.080><c> info</c><00:08:33.640><c> new</c>

00:08:33.909 --> 00:08:33.919 align:start position:0%
called or a routine called core info new
 

00:08:33.919 --> 00:08:36.430 align:start position:0%
called or a routine called core info new
help<00:08:34.399><c> help</c><00:08:34.640><c> newest</c><00:08:35.120><c> fast</c><00:08:35.640><c> that's</c><00:08:35.839><c> allocating</c>

00:08:36.430 --> 00:08:36.440 align:start position:0%
help help newest fast that's allocating
 

00:08:36.440 --> 00:08:38.709 align:start position:0%
help help newest fast that's allocating
Heap<00:08:36.719><c> object</c><00:08:37.599><c> we</c><00:08:37.760><c> then</c><00:08:37.919><c> fill</c><00:08:38.159><c> in</c><00:08:38.320><c> the</c><00:08:38.440><c> fields</c>

00:08:38.709 --> 00:08:38.719 align:start position:0%
Heap object we then fill in the fields
 

00:08:38.719 --> 00:08:40.269 align:start position:0%
Heap object we then fill in the fields
of<00:08:38.839><c> the</c><00:08:38.919><c> Heap</c><00:08:39.200><c> object</c><00:08:39.519><c> writing</c><00:08:39.839><c> twos</c><00:08:40.080><c> and</c>

00:08:40.269 --> 00:08:40.279 align:start position:0%
of the Heap object writing twos and
 

00:08:40.279 --> 00:08:42.389 align:start position:0%
of the Heap object writing twos and
threes<00:08:41.200><c> and</c><00:08:41.320><c> then</c><00:08:41.440><c> we</c><00:08:41.560><c> read</c><00:08:41.800><c> those</c><00:08:42.039><c> back</c><00:08:42.200><c> to</c>

00:08:42.389 --> 00:08:42.399 align:start position:0%
threes and then we read those back to
 

00:08:42.399 --> 00:08:43.990 align:start position:0%
threes and then we read those back to
compute<00:08:42.719><c> the</c><00:08:42.839><c> area</c><00:08:43.159><c> so</c><00:08:43.240><c> we</c><00:08:43.360><c> immediately</c><00:08:43.719><c> read</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
compute the area so we immediately read
 

00:08:44.000 --> 00:08:45.990 align:start position:0%
compute the area so we immediately read
back<00:08:44.200><c> the</c><00:08:44.320><c> values</c><00:08:44.640><c> that</c><00:08:44.760><c> we</c><00:08:44.880><c> just</c><00:08:45.000><c> wrote</c><00:08:45.920><c> and</c>

00:08:45.990 --> 00:08:46.000 align:start position:0%
back the values that we just wrote and
 

00:08:46.000 --> 00:08:47.750 align:start position:0%
back the values that we just wrote and
then<00:08:46.160><c> we</c><00:08:46.440><c> return</c><00:08:46.760><c> now</c><00:08:46.959><c> that</c><00:08:47.200><c> object</c><00:08:47.519><c> that</c><00:08:47.640><c> we</c>

00:08:47.750 --> 00:08:47.760 align:start position:0%
then we return now that object that we
 

00:08:47.760 --> 00:08:49.389 align:start position:0%
then we return now that object that we
just<00:08:47.920><c> allocated</c><00:08:48.440><c> can't</c><00:08:48.640><c> be</c><00:08:48.839><c> referred</c><00:08:49.200><c> to</c>

00:08:49.389 --> 00:08:49.399 align:start position:0%
just allocated can't be referred to
 

00:08:49.399 --> 00:08:51.389 align:start position:0%
just allocated can't be referred to
anymore<00:08:50.360><c> and</c><00:08:50.480><c> so</c><00:08:50.680><c> it's</c><00:08:50.800><c> going</c><00:08:50.920><c> to</c><00:08:51.040><c> eventually</c>

00:08:51.389 --> 00:08:51.399 align:start position:0%
anymore and so it's going to eventually
 

00:08:51.399 --> 00:08:53.590 align:start position:0%
anymore and so it's going to eventually
be<00:08:51.560><c> collected</c><00:08:51.920><c> by</c><00:08:52.040><c> the</c><00:08:52.160><c> GC</c><00:08:53.120><c> you</c><00:08:53.200><c> can</c><00:08:53.320><c> see</c><00:08:53.519><c> we</c>

00:08:53.590 --> 00:08:53.600 align:start position:0%
be collected by the GC you can see we
 

00:08:53.600 --> 00:08:54.870 align:start position:0%
be collected by the GC you can see we
went<00:08:53.720><c> through</c><00:08:53.880><c> a</c><00:08:53.959><c> lot</c><00:08:54.080><c> of</c><00:08:54.160><c> work</c><00:08:54.320><c> to</c><00:08:54.480><c> create</c><00:08:54.680><c> an</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
went through a lot of work to create an
 

00:08:54.880 --> 00:08:56.509 align:start position:0%
went through a lot of work to create an
object<00:08:55.160><c> that</c><00:08:55.240><c> we</c><00:08:55.360><c> didn't</c><00:08:55.560><c> use</c><00:08:55.760><c> for</c><00:08:56.000><c> very</c><00:08:56.200><c> long</c>

00:08:56.509 --> 00:08:56.519 align:start position:0%
object that we didn't use for very long
 

00:08:56.519 --> 00:08:58.790 align:start position:0%
object that we didn't use for very long
and<00:08:56.680><c> that</c><00:08:56.800><c> just</c><00:08:56.920><c> seems</c><00:08:57.240><c> kind</c><00:08:57.360><c> of</c><00:08:57.800><c> unnecessary</c>

00:08:58.790 --> 00:08:58.800 align:start position:0%
and that just seems kind of unnecessary
 

00:08:58.800 --> 00:09:00.710 align:start position:0%
and that just seems kind of unnecessary
and<00:08:58.959><c> D</c><00:08:59.160><c> at</c><00:08:59.279><c> n</c><00:08:59.600><c> we're</c><00:08:59.760><c> able</c><00:08:59.920><c> to</c><00:09:00.040><c> prove</c><00:09:00.279><c> that</c><00:09:00.440><c> that</c>

00:09:00.710 --> 00:09:00.720 align:start position:0%
and D at n we're able to prove that that
 

00:09:00.720 --> 00:09:02.590 align:start position:0%
and D at n we're able to prove that that
object<00:09:01.320><c> cannot</c><00:09:01.680><c> live</c><00:09:01.959><c> longer</c><00:09:02.320><c> than</c><00:09:02.440><c> the</c>

00:09:02.590 --> 00:09:02.600 align:start position:0%
object cannot live longer than the
 

00:09:02.600 --> 00:09:04.829 align:start position:0%
object cannot live longer than the
method<00:09:02.920><c> that</c><00:09:03.000><c> it's</c><00:09:03.200><c> allocated</c><00:09:03.720><c> in</c><00:09:04.320><c> so</c><00:09:04.519><c> we</c><00:09:04.680><c> no</c>

00:09:04.829 --> 00:09:04.839 align:start position:0%
method that it's allocated in so we no
 

00:09:04.839 --> 00:09:06.910 align:start position:0%
method that it's allocated in so we no
longer<00:09:05.120><c> need</c><00:09:05.320><c> to</c><00:09:05.480><c> allocate</c><00:09:05.920><c> the</c><00:09:06.120><c> object</c><00:09:06.760><c> we</c>

00:09:06.910 --> 00:09:06.920 align:start position:0%
longer need to allocate the object we
 

00:09:06.920 --> 00:09:08.790 align:start position:0%
longer need to allocate the object we
promote<00:09:07.240><c> its</c><00:09:07.440><c> Fields</c><00:09:07.839><c> very</c><00:09:08.040><c> aggressively</c><00:09:08.680><c> and</c>

00:09:08.790 --> 00:09:08.800 align:start position:0%
promote its Fields very aggressively and
 

00:09:08.800 --> 00:09:10.910 align:start position:0%
promote its Fields very aggressively and
so<00:09:08.920><c> we're</c><00:09:09.079><c> able</c><00:09:09.279><c> to</c><00:09:09.440><c> see</c><00:09:10.320><c> that</c><00:09:10.519><c> instead</c><00:09:10.800><c> of</c>

00:09:10.910 --> 00:09:10.920 align:start position:0%
so we're able to see that instead of
 

00:09:10.920 --> 00:09:12.389 align:start position:0%
so we're able to see that instead of
writing<00:09:11.200><c> two</c><00:09:11.360><c> and</c><00:09:11.519><c> three</c><00:09:11.680><c> to</c><00:09:11.839><c> memory</c><00:09:12.200><c> we</c><00:09:12.279><c> can</c>

00:09:12.389 --> 00:09:12.399 align:start position:0%
writing two and three to memory we can
 

00:09:12.399 --> 00:09:14.190 align:start position:0%
writing two and three to memory we can
just<00:09:12.560><c> keep</c><00:09:12.720><c> them</c><00:09:12.839><c> in</c><00:09:13.040><c> registers</c><00:09:13.839><c> and</c><00:09:13.959><c> then</c><00:09:14.079><c> we</c>

00:09:14.190 --> 00:09:14.200 align:start position:0%
just keep them in registers and then we
 

00:09:14.200 --> 00:09:16.069 align:start position:0%
just keep them in registers and then we
see<00:09:14.399><c> the</c><00:09:14.480><c> way</c><00:09:14.640><c> that</c><00:09:14.760><c> those</c><00:09:14.920><c> are</c><00:09:15.040><c> used</c><00:09:15.560><c> and</c><00:09:15.680><c> we</c>

00:09:16.069 --> 00:09:16.079 align:start position:0%
see the way that those are used and we
 

00:09:16.079 --> 00:09:17.150 align:start position:0%
see the way that those are used and we
understand<00:09:16.279><c> that</c><00:09:16.399><c> the</c><00:09:16.560><c> values</c><00:09:16.839><c> are</c><00:09:17.040><c> just</c>

00:09:17.150 --> 00:09:17.160 align:start position:0%
understand that the values are just
 

00:09:17.160 --> 00:09:18.670 align:start position:0%
understand that the values are just
immediately<00:09:17.640><c> consumed</c><00:09:18.120><c> by</c><00:09:18.320><c> this</c>

00:09:18.670 --> 00:09:18.680 align:start position:0%
immediately consumed by this
 

00:09:18.680 --> 00:09:20.630 align:start position:0%
immediately consumed by this
multiplication<00:09:19.680><c> we</c><00:09:19.920><c> propagate</c><00:09:20.440><c> those</c>

00:09:20.630 --> 00:09:20.640 align:start position:0%
multiplication we propagate those
 

00:09:20.640 --> 00:09:22.509 align:start position:0%
multiplication we propagate those
constants<00:09:21.040><c> to</c><00:09:21.200><c> the</c><00:09:21.320><c> multiply</c><00:09:22.000><c> and</c><00:09:22.160><c> we</c><00:09:22.279><c> figure</c>

00:09:22.509 --> 00:09:22.519 align:start position:0%
constants to the multiply and we figure
 

00:09:22.519 --> 00:09:25.110 align:start position:0%
constants to the multiply and we figure
out<00:09:22.640><c> what</c><00:09:22.760><c> the</c><00:09:22.880><c> answer</c><00:09:23.160><c> is</c><00:09:23.720><c> so</c><00:09:23.920><c> in</c><00:09:24.079><c> do</c><00:09:24.240><c> at</c><00:09:24.399><c> 9</c><00:09:24.959><c> we</c>

00:09:25.110 --> 00:09:25.120 align:start position:0%
out what the answer is so in do at 9 we
 

00:09:25.120 --> 00:09:26.990 align:start position:0%
out what the answer is so in do at 9 we
just<00:09:25.440><c> return</c><00:09:25.640><c> the</c><00:09:25.760><c> number</c><00:09:26.040><c> six</c><00:09:26.560><c> There's</c><00:09:26.760><c> No</c>

00:09:26.990 --> 00:09:27.000 align:start position:0%
just return the number six There's No
 

00:09:27.000 --> 00:09:28.750 align:start position:0%
just return the number six There's No
Object<00:09:27.440><c> there's</c><00:09:27.640><c> no</c><00:09:27.800><c> Fields</c><00:09:28.320><c> there's</c><00:09:28.519><c> no</c>

00:09:28.750 --> 00:09:28.760 align:start position:0%
Object there's no Fields there's no
 

00:09:28.760 --> 00:09:30.550 align:start position:0%
Object there's no Fields there's no
computation<00:09:29.760><c> you</c><00:09:29.839><c> know</c><00:09:30.079><c> everything</c><00:09:30.360><c> is</c>

00:09:30.550 --> 00:09:30.560 align:start position:0%
computation you know everything is
 

00:09:30.560 --> 00:09:32.389 align:start position:0%
computation you know everything is
nicely<00:09:30.880><c> cleaned</c>

00:09:32.389 --> 00:09:32.399 align:start position:0%
nicely cleaned
 

00:09:32.399 --> 00:09:34.630 align:start position:0%
nicely cleaned
up<00:09:33.399><c> all</c><00:09:33.519><c> right</c><00:09:33.680><c> so</c><00:09:33.800><c> let's</c><00:09:34.000><c> switch</c><00:09:34.279><c> gears</c><00:09:34.519><c> a</c>

00:09:34.630 --> 00:09:34.640 align:start position:0%
up all right so let's switch gears a
 

00:09:34.640 --> 00:09:36.949 align:start position:0%
up all right so let's switch gears a
little<00:09:34.800><c> bit</c><00:09:34.920><c> and</c><00:09:35.120><c> talk</c><00:09:35.320><c> about</c><00:09:35.600><c> arm</c><00:09:35.959><c> 64</c><00:09:36.720><c> as</c><00:09:36.800><c> you</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
little bit and talk about arm 64 as you
 

00:09:36.959 --> 00:09:39.750 align:start position:0%
little bit and talk about arm 64 as you
know<00:09:37.720><c> Microsoft</c><00:09:38.279><c> has</c><00:09:38.440><c> just</c><00:09:38.640><c> introduced</c><00:09:39.600><c> uh</c>

00:09:39.750 --> 00:09:39.760 align:start position:0%
know Microsoft has just introduced uh
 

00:09:39.760 --> 00:09:43.310 align:start position:0%
know Microsoft has just introduced uh
its<00:09:39.880><c> own</c><00:09:40.240><c> first</c><00:09:41.000><c> uh</c><00:09:41.560><c> captive</c><00:09:41.920><c> arm</c><00:09:42.200><c> 64</c><00:09:42.720><c> host</c><00:09:43.040><c> in</c>

00:09:43.310 --> 00:09:43.320 align:start position:0%
its own first uh captive arm 64 host in
 

00:09:43.320 --> 00:09:45.750 align:start position:0%
its own first uh captive arm 64 host in
in<00:09:43.480><c> Azure</c><00:09:43.880><c> called</c><00:09:44.079><c> the</c><00:09:44.200><c> Cobalt</c><00:09:44.760><c> 100</c><00:09:45.360><c> offers</c>

00:09:45.750 --> 00:09:45.760 align:start position:0%
in Azure called the Cobalt 100 offers
 

00:09:45.760 --> 00:09:47.790 align:start position:0%
in Azure called the Cobalt 100 offers
very<00:09:46.000><c> awesome</c><00:09:46.399><c> computing</c><00:09:46.920><c> power</c><00:09:47.399><c> you</c><00:09:47.519><c> know</c><00:09:47.720><c> I</c>

00:09:47.790 --> 00:09:47.800 align:start position:0%
very awesome computing power you know I
 

00:09:47.800 --> 00:09:50.230 align:start position:0%
very awesome computing power you know I
think<00:09:48.000><c> also</c><00:09:48.360><c> very</c><00:09:48.839><c> attractive</c><00:09:49.360><c> pricing</c>

00:09:50.230 --> 00:09:50.240 align:start position:0%
think also very attractive pricing
 

00:09:50.240 --> 00:09:51.630 align:start position:0%
think also very attractive pricing
something<00:09:50.560><c> everybody</c><00:09:50.920><c> ought</c><00:09:51.079><c> to</c><00:09:51.240><c> really</c><00:09:51.480><c> be</c>

00:09:51.630 --> 00:09:51.640 align:start position:0%
something everybody ought to really be
 

00:09:51.640 --> 00:09:54.150 align:start position:0%
something everybody ought to really be
thinking<00:09:51.959><c> about</c><00:09:52.160><c> for</c><00:09:52.360><c> their</c><00:09:52.560><c> Cloud</c><00:09:53.160><c> workloads</c>

00:09:54.150 --> 00:09:54.160 align:start position:0%
thinking about for their Cloud workloads
 

00:09:54.160 --> 00:09:55.670 align:start position:0%
thinking about for their Cloud workloads
um<00:09:54.480><c> one</c><00:09:54.600><c> of</c><00:09:54.720><c> the</c><00:09:54.839><c> nice</c><00:09:55.120><c> things</c><00:09:55.360><c> that</c><00:09:55.519><c> this</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
um one of the nice things that this
 

00:09:55.680 --> 00:09:57.069 align:start position:0%
um one of the nice things that this
machine<00:09:56.079><c> offers</c><00:09:56.399><c> is</c><00:09:56.560><c> something</c><00:09:56.880><c> called</c>

00:09:57.069 --> 00:09:57.079 align:start position:0%
machine offers is something called
 

00:09:57.079 --> 00:09:59.550 align:start position:0%
machine offers is something called
scalable<00:09:57.600><c> Vector</c><00:09:58.120><c> extensions</c><00:09:59.120><c> and</c><00:09:59.399><c> I'm</c><00:09:59.480><c> going</c>

00:09:59.550 --> 00:09:59.560 align:start position:0%
scalable Vector extensions and I'm going
 

00:09:59.560 --> 00:10:01.190 align:start position:0%
scalable Vector extensions and I'm going
to<00:09:59.640><c> just</c><00:09:59.760><c> give</c><00:09:59.880><c> you</c><00:10:00.160><c> just</c><00:10:00.279><c> a</c><00:10:00.399><c> very</c><00:10:00.600><c> brief</c><00:10:00.920><c> taste</c>

00:10:01.190 --> 00:10:01.200 align:start position:0%
to just give you just a very brief taste
 

00:10:01.200 --> 00:10:04.389 align:start position:0%
to just give you just a very brief taste
of<00:10:01.399><c> what</c><00:10:01.560><c> this</c><00:10:01.920><c> means</c><00:10:02.920><c> um</c><00:10:03.680><c> when</c><00:10:03.839><c> you</c><00:10:04.079><c> have</c>

00:10:04.389 --> 00:10:04.399 align:start position:0%
of what this means um when you have
 

00:10:04.399 --> 00:10:06.910 align:start position:0%
of what this means um when you have
Vector<00:10:04.839><c> processing</c><00:10:05.480><c> you're</c><00:10:05.680><c> able</c><00:10:05.959><c> to</c><00:10:06.440><c> to</c><00:10:06.640><c> do</c>

00:10:06.910 --> 00:10:06.920 align:start position:0%
Vector processing you're able to to do
 

00:10:06.920 --> 00:10:09.190 align:start position:0%
Vector processing you're able to to do
things<00:10:07.480><c> you</c><00:10:07.600><c> know</c><00:10:08.200><c> in</c><00:10:08.399><c> basically</c><00:10:08.720><c> in</c><00:10:08.880><c> chunks</c>

00:10:09.190 --> 00:10:09.200 align:start position:0%
things you know in basically in chunks
 

00:10:09.200 --> 00:10:11.030 align:start position:0%
things you know in basically in chunks
in<00:10:09.399><c> Vector</c><00:10:09.760><c> sized</c><00:10:10.000><c> chunks</c><00:10:10.360><c> so</c><00:10:10.480><c> let's</c><00:10:10.720><c> imagine</c>

00:10:11.030 --> 00:10:11.040 align:start position:0%
in Vector sized chunks so let's imagine
 

00:10:11.040 --> 00:10:13.750 align:start position:0%
in Vector sized chunks so let's imagine
that<00:10:11.160><c> we're</c><00:10:11.279><c> trying</c><00:10:11.440><c> to</c><00:10:11.680><c> add</c><00:10:11.959><c> up</c><00:10:12.959><c> you</c><00:10:13.079><c> know</c><00:10:13.640><c> an</c>

00:10:13.750 --> 00:10:13.760 align:start position:0%
that we're trying to add up you know an
 

00:10:13.760 --> 00:10:15.949 align:start position:0%
that we're trying to add up you know an
array<00:10:14.200><c> here</c><00:10:14.640><c> and</c><00:10:14.800><c> say</c><00:10:15.000><c> our</c><00:10:15.120><c> array</c><00:10:15.440><c> has</c><00:10:15.600><c> got</c><00:10:15.760><c> 10</c>

00:10:15.949 --> 00:10:15.959 align:start position:0%
array here and say our array has got 10
 

00:10:15.959 --> 00:10:18.829 align:start position:0%
array here and say our array has got 10
elements<00:10:16.360><c> in</c><00:10:16.519><c> it</c><00:10:17.079><c> if</c><00:10:17.200><c> I</c><00:10:17.399><c> have</c><00:10:17.880><c> um</c><00:10:18.040><c> a</c><00:10:18.200><c> vector</c><00:10:18.640><c> of</c>

00:10:18.829 --> 00:10:18.839 align:start position:0%
elements in it if I have um a vector of
 

00:10:18.839 --> 00:10:22.430 align:start position:0%
elements in it if I have um a vector of
size<00:10:19.120><c> four</c><00:10:19.880><c> I</c><00:10:19.959><c> can</c><00:10:20.120><c> do</c><00:10:20.399><c> two</c><00:10:20.800><c> ads</c><00:10:21.120><c> of</c><00:10:21.360><c> eight</c><00:10:22.320><c> and</c>

00:10:22.430 --> 00:10:22.440 align:start position:0%
size four I can do two ads of eight and
 

00:10:22.440 --> 00:10:25.590 align:start position:0%
size four I can do two ads of eight and
then<00:10:22.640><c> I</c><00:10:22.720><c> can</c><00:10:22.920><c> do</c><00:10:23.880><c> one</c><00:10:24.200><c> add</c><00:10:24.480><c> of</c><00:10:24.640><c> two</c><00:10:25.279><c> and</c><00:10:25.360><c> then</c><00:10:25.519><c> I</c>

00:10:25.590 --> 00:10:25.600 align:start position:0%
then I can do one add of two and then I
 

00:10:25.600 --> 00:10:27.870 align:start position:0%
then I can do one add of two and then I
can<00:10:25.800><c> accumulate</c><00:10:26.680><c> but</c><00:10:26.839><c> that</c><00:10:26.959><c> one</c><00:10:27.160><c> add</c><00:10:27.360><c> of</c><00:10:27.519><c> two</c>

00:10:27.870 --> 00:10:27.880 align:start position:0%
can accumulate but that one add of two
 

00:10:27.880 --> 00:10:30.030 align:start position:0%
can accumulate but that one add of two
is<00:10:28.079><c> not</c><00:10:28.360><c> Vector</c><00:10:28.800><c> sized</c><00:10:29.120><c> and</c><00:10:29.360><c> so</c><00:10:29.480><c> you'll</c><00:10:29.680><c> see</c><00:10:29.920><c> in</c>

00:10:30.030 --> 00:10:30.040 align:start position:0%
is not Vector sized and so you'll see in
 

00:10:30.040 --> 00:10:32.230 align:start position:0%
is not Vector sized and so you'll see in
the<00:10:30.200><c> circle</c><00:10:30.680><c> there</c><00:10:31.399><c> instead</c><00:10:31.680><c> of</c><00:10:31.800><c> me</c><00:10:32.000><c> being</c>

00:10:32.230 --> 00:10:32.240 align:start position:0%
the circle there instead of me being
 

00:10:32.240 --> 00:10:34.069 align:start position:0%
the circle there instead of me being
able<00:10:32.440><c> to</c><00:10:32.600><c> do</c><00:10:32.800><c> just</c><00:10:33.000><c> Vector</c><00:10:33.399><c> operations</c><00:10:33.880><c> I</c><00:10:33.959><c> have</c>

00:10:34.069 --> 00:10:34.079 align:start position:0%
able to do just Vector operations I have
 

00:10:34.079 --> 00:10:35.949 align:start position:0%
able to do just Vector operations I have
to<00:10:34.200><c> drop</c><00:10:34.519><c> back</c><00:10:34.760><c> for</c><00:10:34.959><c> this</c><00:10:35.120><c> little</c><00:10:35.360><c> tail</c><00:10:35.720><c> of</c>

00:10:35.949 --> 00:10:35.959 align:start position:0%
to drop back for this little tail of
 

00:10:35.959 --> 00:10:37.790 align:start position:0%
to drop back for this little tail of
processing<00:10:36.519><c> this</c><00:10:36.720><c> last</c><00:10:36.920><c> few</c><00:10:37.160><c> elements</c><00:10:37.639><c> to</c>

00:10:37.790 --> 00:10:37.800 align:start position:0%
processing this last few elements to
 

00:10:37.800 --> 00:10:39.509 align:start position:0%
processing this last few elements to
scalar<00:10:38.320><c> processing</c><00:10:38.720><c> and</c><00:10:38.880><c> sort</c><00:10:39.000><c> of</c><00:10:39.160><c> add</c><00:10:39.360><c> them</c>

00:10:39.509 --> 00:10:39.519 align:start position:0%
scalar processing and sort of add them
 

00:10:39.519 --> 00:10:42.509 align:start position:0%
scalar processing and sort of add them
up<00:10:39.720><c> one</c><00:10:39.920><c> by</c><00:10:40.160><c> one</c><00:10:41.160><c> um</c><00:10:41.600><c> and</c><00:10:41.720><c> so</c><00:10:41.839><c> you</c><00:10:42.000><c> find</c><00:10:42.279><c> very</c>

00:10:42.509 --> 00:10:42.519 align:start position:0%
up one by one um and so you find very
 

00:10:42.519 --> 00:10:44.150 align:start position:0%
up one by one um and so you find very
commonly<00:10:42.959><c> in</c><00:10:43.120><c> these</c><00:10:43.320><c> machines</c><00:10:43.959><c> with</c>

00:10:44.150 --> 00:10:44.160 align:start position:0%
commonly in these machines with
 

00:10:44.160 --> 00:10:46.350 align:start position:0%
commonly in these machines with
vectorized<00:10:44.760><c> code</c><00:10:45.519><c> that</c><00:10:45.639><c> you</c><00:10:45.760><c> end</c><00:10:45.920><c> up</c><00:10:46.079><c> writing</c>

00:10:46.350 --> 00:10:46.360 align:start position:0%
vectorized code that you end up writing
 

00:10:46.360 --> 00:10:48.350 align:start position:0%
vectorized code that you end up writing
a<00:10:46.480><c> lot</c><00:10:46.600><c> of</c><00:10:46.760><c> this</c><00:10:46.959><c> little</c><00:10:47.240><c> residual</c><00:10:47.680><c> Loop</c><00:10:47.959><c> codes</c>

00:10:48.350 --> 00:10:48.360 align:start position:0%
a lot of this little residual Loop codes
 

00:10:48.360 --> 00:10:51.590 align:start position:0%
a lot of this little residual Loop codes
people<00:10:48.560><c> call</c><00:10:48.760><c> it</c><00:10:48.880><c> tail</c><00:10:49.120><c> Loops</c><00:10:49.440><c> for</c><00:10:49.639><c> example</c><00:10:50.600><c> um</c>

00:10:51.590 --> 00:10:51.600 align:start position:0%
people call it tail Loops for example um
 

00:10:51.600 --> 00:10:53.550 align:start position:0%
people call it tail Loops for example um
in<00:10:51.800><c> sve</c><00:10:52.360><c> there's</c><00:10:52.519><c> a</c><00:10:52.639><c> very</c><00:10:52.800><c> nice</c><00:10:53.000><c> feature</c><00:10:53.399><c> it's</c>

00:10:53.550 --> 00:10:53.560 align:start position:0%
in sve there's a very nice feature it's
 

00:10:53.560 --> 00:10:56.949 align:start position:0%
in sve there's a very nice feature it's
also<00:10:53.839><c> available</c><00:10:54.279><c> in</c><00:10:54.519><c> ABX</c><00:10:55.040><c> 512</c><00:10:55.720><c> on</c><00:10:55.920><c> Intel</c><00:10:56.760><c> where</c>

00:10:56.949 --> 00:10:56.959 align:start position:0%
also available in ABX 512 on Intel where
 

00:10:56.959 --> 00:10:58.629 align:start position:0%
also available in ABX 512 on Intel where
you<00:10:57.079><c> can</c><00:10:57.440><c> actually</c><00:10:57.760><c> add</c><00:10:58.040><c> predicated</c>

00:10:58.629 --> 00:10:58.639 align:start position:0%
you can actually add predicated
 

00:10:58.639 --> 00:11:01.190 align:start position:0%
you can actually add predicated
operations<00:10:59.399><c> into</c><00:10:59.600><c> your</c><00:10:59.760><c> vector</c><00:11:00.200><c> operations</c>

00:11:01.190 --> 00:11:01.200 align:start position:0%
operations into your vector operations
 

00:11:01.200 --> 00:11:03.550 align:start position:0%
operations into your vector operations
and<00:11:01.360><c> so</c><00:11:02.320><c> one</c><00:11:02.440><c> of</c><00:11:02.560><c> the</c><00:11:02.680><c> benefits</c><00:11:03.120><c> is</c><00:11:03.320><c> you</c><00:11:03.399><c> can</c>

00:11:03.550 --> 00:11:03.560 align:start position:0%
and so one of the benefits is you can
 

00:11:03.560 --> 00:11:05.310 align:start position:0%
and so one of the benefits is you can
eliminate<00:11:04.000><c> the</c><00:11:04.120><c> need</c><00:11:04.320><c> for</c><00:11:04.519><c> these</c><00:11:04.680><c> tail</c><00:11:04.920><c> Loops</c>

00:11:05.310 --> 00:11:05.320 align:start position:0%
eliminate the need for these tail Loops
 

00:11:05.320 --> 00:11:07.710 align:start position:0%
eliminate the need for these tail Loops
entirely<00:11:06.160><c> so</c><00:11:06.399><c> what</c><00:11:06.560><c> happens</c><00:11:06.959><c> is</c><00:11:07.079><c> in</c><00:11:07.320><c> this</c><00:11:07.519><c> case</c>

00:11:07.710 --> 00:11:07.720 align:start position:0%
entirely so what happens is in this case
 

00:11:07.720 --> 00:11:09.710 align:start position:0%
entirely so what happens is in this case
we<00:11:07.839><c> do</c><00:11:08.120><c> two</c><00:11:08.440><c> Vector</c><00:11:08.839><c> operations</c><00:11:09.360><c> both</c><00:11:09.560><c> of</c>

00:11:09.710 --> 00:11:09.720 align:start position:0%
we do two Vector operations both of
 

00:11:09.720 --> 00:11:12.150 align:start position:0%
we do two Vector operations both of
length<00:11:09.959><c> four</c><00:11:10.720><c> we</c><00:11:10.880><c> also</c><00:11:11.120><c> produce</c><00:11:11.440><c> a</c><00:11:11.680><c> mask</c><00:11:12.040><c> at</c>

00:11:12.150 --> 00:11:12.160 align:start position:0%
length four we also produce a mask at
 

00:11:12.160 --> 00:11:13.710 align:start position:0%
length four we also produce a mask at
each<00:11:12.360><c> step</c><00:11:12.600><c> saying</c><00:11:12.920><c> which</c><00:11:13.079><c> elements</c><00:11:13.440><c> of</c><00:11:13.600><c> the</c>

00:11:13.710 --> 00:11:13.720 align:start position:0%
each step saying which elements of the
 

00:11:13.720 --> 00:11:15.750 align:start position:0%
each step saying which elements of the
vector<00:11:14.000><c> are</c><00:11:14.279><c> active</c><00:11:15.000><c> and</c><00:11:15.120><c> we</c><00:11:15.279><c> get</c><00:11:15.399><c> to</c><00:11:15.560><c> that</c>

00:11:15.750 --> 00:11:15.760 align:start position:0%
vector are active and we get to that
 

00:11:15.760 --> 00:11:18.710 align:start position:0%
vector are active and we get to that
last<00:11:16.079><c> step</c><00:11:16.560><c> The</c><00:11:16.720><c> Mask</c><00:11:17.240><c> basically</c><00:11:17.639><c> turns</c><00:11:18.040><c> off</c>

00:11:18.710 --> 00:11:18.720 align:start position:0%
last step The Mask basically turns off
 

00:11:18.720 --> 00:11:20.230 align:start position:0%
last step The Mask basically turns off
two<00:11:18.920><c> of</c><00:11:19.040><c> the</c><00:11:19.120><c> elements</c><00:11:19.560><c> the</c><00:11:19.720><c> vector</c><00:11:20.000><c> and</c><00:11:20.120><c> so</c>

00:11:20.230 --> 00:11:20.240 align:start position:0%
two of the elements the vector and so
 

00:11:20.240 --> 00:11:22.150 align:start position:0%
two of the elements the vector and so
instead<00:11:20.480><c> of</c><00:11:20.600><c> doing</c><00:11:20.800><c> a</c><00:11:21.000><c> size</c><00:11:21.240><c> four</c><00:11:21.560><c> add</c><00:11:21.880><c> we</c><00:11:22.000><c> end</c>

00:11:22.150 --> 00:11:22.160 align:start position:0%
instead of doing a size four add we end
 

00:11:22.160 --> 00:11:24.389 align:start position:0%
instead of doing a size four add we end
up<00:11:22.320><c> doing</c><00:11:22.560><c> a</c><00:11:22.720><c> size</c><00:11:22.959><c> two</c><00:11:23.200><c> add</c><00:11:23.839><c> so</c><00:11:24.000><c> in</c><00:11:24.160><c> three</c>

00:11:24.389 --> 00:11:24.399 align:start position:0%
up doing a size two add so in three
 

00:11:24.399 --> 00:11:25.870 align:start position:0%
up doing a size two add so in three
steps<00:11:24.720><c> we've</c><00:11:24.920><c> managed</c><00:11:25.240><c> to</c><00:11:25.360><c> add</c><00:11:25.519><c> up</c><00:11:25.680><c> all</c><00:11:25.800><c> the</c>

00:11:25.870 --> 00:11:25.880 align:start position:0%
steps we've managed to add up all the
 

00:11:25.880 --> 00:11:28.069 align:start position:0%
steps we've managed to add up all the
numbers<00:11:26.240><c> we</c><00:11:26.320><c> have</c><00:11:26.440><c> to</c><00:11:26.560><c> do</c><00:11:26.720><c> one</c><00:11:26.880><c> more</c><00:11:27.639><c> reduction</c>

00:11:28.069 --> 00:11:28.079 align:start position:0%
numbers we have to do one more reduction
 

00:11:28.079 --> 00:11:30.269 align:start position:0%
numbers we have to do one more reduction
at<00:11:28.200><c> the</c><00:11:28.320><c> end</c><00:11:28.560><c> to</c><00:11:28.760><c> add</c><00:11:29.000><c> the</c><00:11:29.320><c> four</c><00:11:29.519><c> Vector</c><00:11:29.760><c> Lanes</c>

00:11:30.269 --> 00:11:30.279 align:start position:0%
at the end to add the four Vector Lanes
 

00:11:30.279 --> 00:11:32.389 align:start position:0%
at the end to add the four Vector Lanes
together<00:11:30.760><c> and</c><00:11:31.160><c> voila</c><00:11:31.560><c> we</c><00:11:31.680><c> have</c><00:11:31.800><c> our</c><00:11:31.959><c> answer</c>

00:11:32.389 --> 00:11:32.399 align:start position:0%
together and voila we have our answer
 

00:11:32.399 --> 00:11:34.670 align:start position:0%
together and voila we have our answer
without<00:11:33.200><c> any</c><00:11:33.440><c> extra</c><00:11:33.760><c> fussing</c><00:11:34.160><c> around</c><00:11:34.440><c> with</c><00:11:34.560><c> a</c>

00:11:34.670 --> 00:11:34.680 align:start position:0%
without any extra fussing around with a
 

00:11:34.680 --> 00:11:36.870 align:start position:0%
without any extra fussing around with a
tail<00:11:34.920><c> Loop</c><00:11:35.160><c> or</c><00:11:35.279><c> anything</c><00:11:35.639><c> like</c><00:11:35.839><c> that</c><00:11:36.680><c> so</c><00:11:36.800><c> you</c>

00:11:36.870 --> 00:11:36.880 align:start position:0%
tail Loop or anything like that so you
 

00:11:36.880 --> 00:11:38.710 align:start position:0%
tail Loop or anything like that so you
can<00:11:37.040><c> really</c><00:11:37.279><c> get</c><00:11:37.480><c> some</c><00:11:37.680><c> nice</c><00:11:37.959><c> benefit</c><00:11:38.399><c> out</c><00:11:38.560><c> of</c>

00:11:38.710 --> 00:11:38.720 align:start position:0%
can really get some nice benefit out of
 

00:11:38.720 --> 00:11:41.030 align:start position:0%
can really get some nice benefit out of
these<00:11:38.920><c> predicated</c><00:11:39.399><c> or</c><00:11:39.560><c> mased</c><00:11:40.040><c> operations</c><00:11:40.800><c> in</c>

00:11:41.030 --> 00:11:41.040 align:start position:0%
these predicated or mased operations in
 

00:11:41.040 --> 00:11:43.230 align:start position:0%
these predicated or mased operations in
your<00:11:41.240><c> vector</c><00:11:41.800><c> processing</c><00:11:42.800><c> obviously</c><00:11:43.079><c> you</c><00:11:43.160><c> got</c>

00:11:43.230 --> 00:11:43.240 align:start position:0%
your vector processing obviously you got
 

00:11:43.240 --> 00:11:44.870 align:start position:0%
your vector processing obviously you got
to<00:11:43.360><c> do</c><00:11:43.480><c> some</c><00:11:43.680><c> manual</c><00:11:44.079><c> coding</c><00:11:44.399><c> here</c><00:11:44.560><c> to</c><00:11:44.720><c> take</c>

00:11:44.870 --> 00:11:44.880 align:start position:0%
to do some manual coding here to take
 

00:11:44.880 --> 00:11:46.949 align:start position:0%
to do some manual coding here to take
advantage<00:11:45.320><c> of</c><00:11:45.480><c> it</c><00:11:45.920><c> um</c><00:11:46.399><c> but</c><00:11:46.519><c> it's</c><00:11:46.680><c> something</c>

00:11:46.949 --> 00:11:46.959 align:start position:0%
advantage of it um but it's something
 

00:11:46.959 --> 00:11:48.990 align:start position:0%
advantage of it um but it's something
that<00:11:47.120><c> if</c><00:11:47.240><c> you're</c><00:11:47.480><c> interested</c><00:11:47.920><c> in</c><00:11:48.480><c> really</c><00:11:48.760><c> high</c>

00:11:48.990 --> 00:11:49.000 align:start position:0%
that if you're interested in really high
 

00:11:49.000 --> 00:11:50.389 align:start position:0%
that if you're interested in really high
performance<00:11:49.440><c> Vector</c><00:11:49.720><c> code</c><00:11:50.000><c> it's</c><00:11:50.120><c> worth</c>

00:11:50.389 --> 00:11:50.399 align:start position:0%
performance Vector code it's worth
 

00:11:50.399 --> 00:11:51.310 align:start position:0%
performance Vector code it's worth
checking

00:11:51.310 --> 00:11:51.320 align:start position:0%
checking
 

00:11:51.320 --> 00:11:54.670 align:start position:0%
checking
out<00:11:52.320><c> um</c><00:11:53.079><c> and</c><00:11:53.279><c> so</c><00:11:53.399><c> in</c><00:11:53.680><c> net</c><00:11:53.839><c> 9</c><00:11:54.160><c> we've</c><00:11:54.360><c> added</c>

00:11:54.670 --> 00:11:54.680 align:start position:0%
out um and so in net 9 we've added
 

00:11:54.680 --> 00:11:58.710 align:start position:0%
out um and so in net 9 we've added
support<00:11:55.079><c> for</c><00:11:55.880><c> 281</c><00:11:56.880><c> new</c><00:11:57.160><c> apis</c><00:11:57.800><c> for</c><00:11:58.040><c> sve</c>

00:11:58.710 --> 00:11:58.720 align:start position:0%
support for 281 new apis for sve
 

00:11:58.720 --> 00:11:59.870 align:start position:0%
support for 281 new apis for sve
including

00:11:59.870 --> 00:11:59.880 align:start position:0%
including
 

00:11:59.880 --> 00:12:01.949 align:start position:0%
including
all<00:12:00.079><c> those</c><00:12:00.279><c> categories</c><00:12:00.760><c> you</c><00:12:00.920><c> see</c><00:12:01.200><c> there</c><00:12:01.839><c> a</c>

00:12:01.949 --> 00:12:01.959 align:start position:0%
all those categories you see there a
 

00:12:01.959 --> 00:12:03.389 align:start position:0%
all those categories you see there a
whole<00:12:02.120><c> bunch</c><00:12:02.279><c> of</c><00:12:02.440><c> actual</c><00:12:02.760><c> instructions</c><00:12:03.240><c> that</c>

00:12:03.389 --> 00:12:03.399 align:start position:0%
whole bunch of actual instructions that
 

00:12:03.399 --> 00:12:05.629 align:start position:0%
whole bunch of actual instructions that
we<00:12:03.480><c> canm</c><00:12:04.279><c> this</c><00:12:04.399><c> is</c><00:12:04.560><c> all</c><00:12:04.720><c> hooked</c><00:12:05.000><c> up</c><00:12:05.160><c> to</c><00:12:05.399><c> Vector</c>

00:12:05.629 --> 00:12:05.639 align:start position:0%
we canm this is all hooked up to Vector
 

00:12:05.639 --> 00:12:06.350 align:start position:0%
we canm this is all hooked up to Vector
of

00:12:06.350 --> 00:12:06.360 align:start position:0%
of
 

00:12:06.360 --> 00:12:08.790 align:start position:0%
of
T<00:12:07.360><c> so</c><00:12:07.760><c> it's</c><00:12:07.920><c> going</c><00:12:08.000><c> to</c><00:12:08.200><c> act</c><00:12:08.360><c> like</c><00:12:08.519><c> we</c><00:12:08.639><c> have</c>

00:12:08.790 --> 00:12:08.800 align:start position:0%
T so it's going to act like we have
 

00:12:08.800 --> 00:12:10.389 align:start position:0%
T so it's going to act like we have
scalable<00:12:09.279><c> vectors</c><00:12:09.600><c> it</c><00:12:09.720><c> turns</c><00:12:09.920><c> out</c><00:12:10.079><c> in</c><00:12:10.200><c> this</c>

00:12:10.389 --> 00:12:10.399 align:start position:0%
scalable vectors it turns out in this
 

00:12:10.399 --> 00:12:11.829 align:start position:0%
scalable vectors it turns out in this
implementation<00:12:11.000><c> we're</c><00:12:11.160><c> going</c><00:12:11.240><c> to</c><00:12:11.360><c> hardcode</c>

00:12:11.829 --> 00:12:11.839 align:start position:0%
implementation we're going to hardcode
 

00:12:11.839 --> 00:12:13.829 align:start position:0%
implementation we're going to hardcode
the<00:12:11.959><c> vector</c><00:12:12.200><c> length</c><00:12:12.480><c> to</c><00:12:12.680><c> 16</c><00:12:13.040><c> bytes</c><00:12:13.480><c> but</c><00:12:13.600><c> in</c><00:12:13.720><c> the</c>

00:12:13.829 --> 00:12:13.839 align:start position:0%
the vector length to 16 bytes but in the
 

00:12:13.839 --> 00:12:15.670 align:start position:0%
the vector length to 16 bytes but in the
future<00:12:14.560><c> when</c><00:12:14.720><c> we</c><00:12:14.800><c> get</c><00:12:14.920><c> onto</c><00:12:15.199><c> Hardware</c><00:12:15.560><c> that</c>

00:12:15.670 --> 00:12:15.680 align:start position:0%
future when we get onto Hardware that
 

00:12:15.680 --> 00:12:17.470 align:start position:0%
future when we get onto Hardware that
has<00:12:15.839><c> longer</c><00:12:16.279><c> Vector</c><00:12:16.560><c> support</c><00:12:16.880><c> in</c><00:12:17.079><c> Hardware</c>

00:12:17.470 --> 00:12:17.480 align:start position:0%
has longer Vector support in Hardware
 

00:12:17.480 --> 00:12:19.030 align:start position:0%
has longer Vector support in Hardware
we're<00:12:17.639><c> going</c><00:12:17.720><c> to</c><00:12:17.880><c> have</c><00:12:18.079><c> that</c><00:12:18.320><c> value</c><00:12:18.639><c> be</c><00:12:18.839><c> able</c>

00:12:19.030 --> 00:12:19.040 align:start position:0%
we're going to have that value be able
 

00:12:19.040 --> 00:12:21.750 align:start position:0%
we're going to have that value be able
to<00:12:19.560><c> adjust</c><00:12:20.000><c> upwards</c><00:12:20.839><c> one</c><00:12:21.040><c> is</c><00:12:21.160><c> a</c><00:12:21.279><c> cool</c><00:12:21.440><c> thing</c><00:12:21.600><c> to</c>

00:12:21.750 --> 00:12:21.760 align:start position:0%
to adjust upwards one is a cool thing to
 

00:12:21.760 --> 00:12:24.110 align:start position:0%
to adjust upwards one is a cool thing to
check<00:12:22.000><c> out</c><00:12:22.800><c> um</c><00:12:22.959><c> we'd</c><00:12:23.199><c> love</c><00:12:23.399><c> to</c><00:12:23.519><c> get</c><00:12:23.680><c> feedback</c>

00:12:24.110 --> 00:12:24.120 align:start position:0%
check out um we'd love to get feedback
 

00:12:24.120 --> 00:12:25.710 align:start position:0%
check out um we'd love to get feedback
on<00:12:24.320><c> this</c><00:12:24.480><c> and</c><00:12:24.639><c> see</c><00:12:24.880><c> how</c><00:12:25.040><c> well</c><00:12:25.360><c> you</c><00:12:25.440><c> know</c><00:12:25.560><c> our</c>

00:12:25.710 --> 00:12:25.720 align:start position:0%
on this and see how well you know our
 

00:12:25.720 --> 00:12:27.790 align:start position:0%
on this and see how well you know our
implementation<00:12:26.360><c> works</c><00:12:26.680><c> in</c><00:12:26.920><c> practice</c><00:12:27.240><c> on</c><00:12:27.519><c> code</c>

00:12:27.790 --> 00:12:27.800 align:start position:0%
implementation works in practice on code
 

00:12:27.800 --> 00:12:31.269 align:start position:0%
implementation works in practice on code
that<00:12:27.920><c> you</c><00:12:28.079><c> might</c><00:12:28.240><c> want</c><00:12:28.360><c> to</c><00:12:28.519><c> vectorize</c>

00:12:31.269 --> 00:12:31.279 align:start position:0%
 
 

00:12:31.279 --> 00:12:32.910 align:start position:0%
 
uh<00:12:31.399><c> let's</c><00:12:31.600><c> switch</c><00:12:31.959><c> topics</c><00:12:32.360><c> again</c><00:12:32.519><c> and</c><00:12:32.680><c> talk</c><00:12:32.839><c> a</c>

00:12:32.910 --> 00:12:32.920 align:start position:0%
uh let's switch topics again and talk a
 

00:12:32.920 --> 00:12:35.230 align:start position:0%
uh let's switch topics again and talk a
little<00:12:33.079><c> bit</c><00:12:33.240><c> about</c><00:12:33.399><c> loops</c><00:12:34.320><c> um</c><00:12:34.920><c> these</c><00:12:35.040><c> are</c>

00:12:35.230 --> 00:12:35.240 align:start position:0%
little bit about loops um these are
 

00:12:35.240 --> 00:12:36.670 align:start position:0%
little bit about loops um these are
things<00:12:35.480><c> that</c><00:12:35.639><c> if</c><00:12:35.720><c> you're</c><00:12:35.959><c> familiar</c><00:12:36.440><c> with</c>

00:12:36.670 --> 00:12:36.680 align:start position:0%
things that if you're familiar with
 

00:12:36.680 --> 00:12:38.590 align:start position:0%
things that if you're familiar with
compiler<00:12:37.240><c> technology</c><00:12:37.920><c> probably</c><00:12:38.320><c> thought</c>

00:12:38.590 --> 00:12:38.600 align:start position:0%
compiler technology probably thought
 

00:12:38.600 --> 00:12:40.509 align:start position:0%
compiler technology probably thought
that<00:12:38.720><c> we</c><00:12:38.839><c> were</c><00:12:39.120><c> already</c><00:12:39.519><c> doing</c><00:12:39.920><c> inside</c><00:12:40.240><c> of</c><00:12:40.360><c> our</c>

00:12:40.509 --> 00:12:40.519 align:start position:0%
that we were already doing inside of our
 

00:12:40.519 --> 00:12:43.389 align:start position:0%
that we were already doing inside of our
code<00:12:40.720><c> generator</c><00:12:41.360><c> turns</c><00:12:41.639><c> out</c><00:12:41.959><c> that</c><00:12:42.120><c> we</c><00:12:42.399><c> weren't</c>

00:12:43.389 --> 00:12:43.399 align:start position:0%
code generator turns out that we weren't
 

00:12:43.399 --> 00:12:45.430 align:start position:0%
code generator turns out that we weren't
um<00:12:44.040><c> basically</c><00:12:44.399><c> one</c><00:12:44.519><c> of</c><00:12:44.639><c> the</c><00:12:44.760><c> key</c><00:12:44.920><c> things</c><00:12:45.240><c> about</c>

00:12:45.430 --> 00:12:45.440 align:start position:0%
um basically one of the key things about
 

00:12:45.440 --> 00:12:47.310 align:start position:0%
um basically one of the key things about
loops<00:12:45.880><c> is</c><00:12:46.000><c> to</c><00:12:46.480><c> understand</c><00:12:46.760><c> so-called</c>

00:12:47.310 --> 00:12:47.320 align:start position:0%
loops is to understand so-called
 

00:12:47.320 --> 00:12:48.790 align:start position:0%
loops is to understand so-called
induction<00:12:47.800><c> variables</c><00:12:48.240><c> and</c><00:12:48.399><c> induction</c>

00:12:48.790 --> 00:12:48.800 align:start position:0%
induction variables and induction
 

00:12:48.800 --> 00:12:50.870 align:start position:0%
induction variables and induction
variables<00:12:49.560><c> are</c><00:12:49.839><c> values</c><00:12:50.240><c> within</c><00:12:50.480><c> the</c><00:12:50.600><c> loop</c>

00:12:50.870 --> 00:12:50.880 align:start position:0%
variables are values within the loop
 

00:12:50.880 --> 00:12:52.470 align:start position:0%
variables are values within the loop
that<00:12:51.000><c> change</c><00:12:51.360><c> predictably</c><00:12:52.000><c> from</c><00:12:52.240><c> one</c>

00:12:52.470 --> 00:12:52.480 align:start position:0%
that change predictably from one
 

00:12:52.480 --> 00:12:54.829 align:start position:0%
that change predictably from one
iteration<00:12:52.920><c> to</c><00:12:53.160><c> the</c><00:12:53.320><c> next</c><00:12:54.199><c> let's</c><00:12:54.399><c> look</c><00:12:54.519><c> at</c><00:12:54.680><c> this</c>

00:12:54.829 --> 00:12:54.839 align:start position:0%
iteration to the next let's look at this
 

00:12:54.839 --> 00:12:57.110 align:start position:0%
iteration to the next let's look at this
simple<00:12:55.160><c> Loop</c><00:12:55.440><c> here</c><00:12:55.639><c> on</c><00:12:55.800><c> the</c><00:12:56.000><c> left</c><00:12:56.680><c> we</c><00:12:56.839><c> have</c><00:12:56.959><c> a</c>

00:12:57.110 --> 00:12:57.120 align:start position:0%
simple Loop here on the left we have a
 

00:12:57.120 --> 00:13:00.030 align:start position:0%
simple Loop here on the left we have a
value<00:12:57.480><c> here</c><00:12:57.800><c> I</c><00:12:58.320><c> and</c><00:12:58.519><c> I</c><00:12:58.720><c> is</c><00:12:58.880><c> simp</c><00:12:59.399><c> incrementing</c>

00:13:00.030 --> 00:13:00.040 align:start position:0%
value here I and I is simp incrementing
 

00:13:00.040 --> 00:13:02.670 align:start position:0%
value here I and I is simp incrementing
by<00:13:00.199><c> one</c><00:13:00.600><c> every</c><00:13:00.839><c> single</c><00:13:01.120><c> Loop</c><00:13:01.399><c> iteration</c><00:13:02.199><c> right</c>

00:13:02.670 --> 00:13:02.680 align:start position:0%
by one every single Loop iteration right
 

00:13:02.680 --> 00:13:04.590 align:start position:0%
by one every single Loop iteration right
so<00:13:02.839><c> we're</c><00:13:02.959><c> able</c><00:13:03.160><c> to</c><00:13:03.240><c> do</c><00:13:03.399><c> the</c><00:13:03.560><c> analysis</c><00:13:04.000><c> now</c><00:13:04.160><c> to</c>

00:13:04.590 --> 00:13:04.600 align:start position:0%
so we're able to do the analysis now to
 

00:13:04.600 --> 00:13:06.030 align:start position:0%
so we're able to do the analysis now to
understand<00:13:04.880><c> quite</c><00:13:05.040><c> a</c><00:13:05.199><c> bit</c><00:13:05.440><c> about</c><00:13:05.720><c> how</c><00:13:05.880><c> the</c>

00:13:06.030 --> 00:13:06.040 align:start position:0%
understand quite a bit about how the
 

00:13:06.040 --> 00:13:09.110 align:start position:0%
understand quite a bit about how the
value<00:13:06.320><c> of</c><00:13:06.519><c> I</c><00:13:06.839><c> evolves</c><00:13:07.519><c> as</c><00:13:07.680><c> the</c><00:13:07.839><c> loop</c>

00:13:09.110 --> 00:13:09.120 align:start position:0%
value of I evolves as the loop
 

00:13:09.120 --> 00:13:11.150 align:start position:0%
value of I evolves as the loop
processes<00:13:10.120><c> and</c><00:13:10.240><c> in</c><00:13:10.360><c> this</c><00:13:10.560><c> particular</c><00:13:11.000><c> case</c>

00:13:11.150 --> 00:13:11.160 align:start position:0%
processes and in this particular case
 

00:13:11.160 --> 00:13:12.790 align:start position:0%
processes and in this particular case
we're<00:13:11.320><c> going</c><00:13:11.399><c> to</c><00:13:11.519><c> take</c><00:13:11.720><c> advantage</c><00:13:12.120><c> of</c><00:13:12.360><c> that</c>

00:13:12.790 --> 00:13:12.800 align:start position:0%
we're going to take advantage of that
 

00:13:12.800 --> 00:13:14.150 align:start position:0%
we're going to take advantage of that
we're<00:13:12.959><c> going</c><00:13:13.079><c> to</c><00:13:13.199><c> realize</c><00:13:13.519><c> that</c><00:13:13.720><c> inside</c><00:13:14.040><c> the</c>

00:13:14.150 --> 00:13:14.160 align:start position:0%
we're going to realize that inside the
 

00:13:14.160 --> 00:13:15.829 align:start position:0%
we're going to realize that inside the
loop<00:13:14.440><c> you're</c><00:13:14.600><c> not</c><00:13:14.839><c> actually</c><00:13:15.240><c> making</c><00:13:15.560><c> any</c>

00:13:15.829 --> 00:13:15.839 align:start position:0%
loop you're not actually making any
 

00:13:15.839 --> 00:13:17.710 align:start position:0%
loop you're not actually making any
reference<00:13:16.160><c> to</c><00:13:16.440><c> I</c><00:13:16.720><c> at</c><00:13:16.839><c> all</c><00:13:17.079><c> the</c><00:13:17.199><c> value</c><00:13:17.440><c> of</c><00:13:17.560><c> I</c>

00:13:17.710 --> 00:13:17.720 align:start position:0%
reference to I at all the value of I
 

00:13:17.720 --> 00:13:19.310 align:start position:0%
reference to I at all the value of I
isn't<00:13:18.000><c> used</c><00:13:18.279><c> anywhere</c><00:13:18.600><c> it's</c><00:13:18.760><c> only</c><00:13:18.959><c> used</c><00:13:19.199><c> to</c>

00:13:19.310 --> 00:13:19.320 align:start position:0%
isn't used anywhere it's only used to
 

00:13:19.320 --> 00:13:22.189 align:start position:0%
isn't used anywhere it's only used to
control<00:13:19.680><c> the</c><00:13:19.839><c> loop</c><00:13:20.839><c> um</c><00:13:21.160><c> and</c><00:13:21.320><c> because</c><00:13:21.560><c> of</c><00:13:21.800><c> that</c>

00:13:22.189 --> 00:13:22.199 align:start position:0%
control the loop um and because of that
 

00:13:22.199 --> 00:13:23.870 align:start position:0%
control the loop um and because of that
it's<00:13:22.480><c> actually</c><00:13:22.720><c> more</c><00:13:23.000><c> efficient</c><00:13:23.399><c> for</c><00:13:23.560><c> us</c><00:13:23.720><c> to</c>

00:13:23.870 --> 00:13:23.880 align:start position:0%
it's actually more efficient for us to
 

00:13:23.880 --> 00:13:26.189 align:start position:0%
it's actually more efficient for us to
reexpress<00:13:24.480><c> the</c><00:13:24.600><c> loop</c><00:13:24.920><c> as</c><00:13:25.079><c> counting</c><00:13:25.560><c> downwards</c>

00:13:26.189 --> 00:13:26.199 align:start position:0%
reexpress the loop as counting downwards
 

00:13:26.199 --> 00:13:28.829 align:start position:0%
reexpress the loop as counting downwards
instead<00:13:26.519><c> of</c><00:13:26.680><c> counting</c><00:13:27.399><c> upwards</c><00:13:28.399><c> so</c><00:13:28.600><c> instead</c>

00:13:28.829 --> 00:13:28.839 align:start position:0%
instead of counting upwards so instead
 

00:13:28.839 --> 00:13:31.629 align:start position:0%
instead of counting upwards so instead
of<00:13:29.480><c> effectively</c><00:13:29.959><c> writing</c><00:13:30.240><c> for</c><00:13:30.440><c> I</c><00:13:30.639><c> equals</c><00:13:31.000><c> 1</c><00:13:31.279><c> to</c>

00:13:31.629 --> 00:13:31.639 align:start position:0%
of effectively writing for I equals 1 to
 

00:13:31.639 --> 00:13:34.470 align:start position:0%
of effectively writing for I equals 1 to
I<00:13:31.800><c> equals</c><00:13:32.120><c> 1</c><00:13:32.399><c> I</c><00:13:32.600><c> less</c><00:13:32.839><c> than</c><00:13:33.040><c> n</c><00:13:33.680><c> we</c><00:13:33.839><c> change</c><00:13:34.120><c> it</c><00:13:34.279><c> to</c>

00:13:34.470 --> 00:13:34.480 align:start position:0%
I equals 1 I less than n we change it to
 

00:13:34.480 --> 00:13:37.550 align:start position:0%
I equals 1 I less than n we change it to
be<00:13:35.079><c> if</c><00:13:35.360><c> I</c><00:13:35.639><c> you</c><00:13:35.760><c> know</c><00:13:35.880><c> is</c><00:13:36.040><c> equal</c>

00:13:37.550 --> 00:13:37.560 align:start position:0%
be if I you know is equal
 

00:13:37.560 --> 00:13:40.110 align:start position:0%
be if I you know is equal
to<00:13:38.560><c> and</c><00:13:38.760><c> and</c><00:13:38.920><c> we</c><00:13:39.040><c> go</c><00:13:39.199><c> downwards</c><00:13:39.639><c> until</c><00:13:39.880><c> we</c><00:13:40.000><c> get</c>

00:13:40.110 --> 00:13:40.120 align:start position:0%
to and and we go downwards until we get
 

00:13:40.120 --> 00:13:42.910 align:start position:0%
to and and we go downwards until we get
to<00:13:40.320><c> zero</c><00:13:40.720><c> or</c><00:13:40.920><c> n</c><00:13:41.079><c> minus</c><00:13:41.440><c> one</c><00:13:42.279><c> so</c><00:13:42.440><c> anyway</c><00:13:42.720><c> so</c><00:13:42.800><c> we</c>

00:13:42.910 --> 00:13:42.920 align:start position:0%
to zero or n minus one so anyway so we
 

00:13:42.920 --> 00:13:44.350 align:start position:0%
to zero or n minus one so anyway so we
end<00:13:43.079><c> up</c><00:13:43.399><c> effectively</c><00:13:43.880><c> doing</c><00:13:44.199><c> this</c>

00:13:44.350 --> 00:13:44.360 align:start position:0%
end up effectively doing this
 

00:13:44.360 --> 00:13:46.030 align:start position:0%
end up effectively doing this
transformation<00:13:45.040><c> that</c><00:13:45.160><c> you</c><00:13:45.240><c> see</c><00:13:45.480><c> over</c><00:13:45.720><c> here</c><00:13:45.880><c> on</c>

00:13:46.030 --> 00:13:46.040 align:start position:0%
transformation that you see over here on
 

00:13:46.040 --> 00:13:48.430 align:start position:0%
transformation that you see over here on
the<00:13:46.240><c> side</c><00:13:47.160><c> um</c><00:13:47.560><c> now</c><00:13:47.720><c> you</c><00:13:47.800><c> might</c><00:13:47.959><c> wonder</c><00:13:48.279><c> like</c>

00:13:48.430 --> 00:13:48.440 align:start position:0%
the side um now you might wonder like
 

00:13:48.440 --> 00:13:49.670 align:start position:0%
the side um now you might wonder like
well<00:13:48.560><c> what's</c><00:13:48.760><c> the</c><00:13:48.880><c> point</c><00:13:49.040><c> of</c><00:13:49.160><c> that</c><00:13:49.320><c> why</c><00:13:49.440><c> do</c><00:13:49.560><c> you</c>

00:13:49.670 --> 00:13:49.680 align:start position:0%
well what's the point of that why do you
 

00:13:49.680 --> 00:13:51.590 align:start position:0%
well what's the point of that why do you
even<00:13:49.920><c> bother</c><00:13:50.680><c> if</c><00:13:50.800><c> you</c><00:13:50.920><c> look</c><00:13:51.040><c> at</c><00:13:51.199><c> the</c><00:13:51.320><c> code</c>

00:13:51.590 --> 00:13:51.600 align:start position:0%
even bother if you look at the code
 

00:13:51.600 --> 00:13:53.069 align:start position:0%
even bother if you look at the code
that's<00:13:51.759><c> in</c><00:13:51.959><c> purple</c><00:13:52.399><c> obviously</c><00:13:52.759><c> this</c><00:13:52.880><c> is</c>

00:13:53.069 --> 00:13:53.079 align:start position:0%
that's in purple obviously this is
 

00:13:53.079 --> 00:13:54.749 align:start position:0%
that's in purple obviously this is
machine<00:13:53.399><c> code</c><00:13:53.680><c> and</c><00:13:53.880><c> not</c><00:13:54.079><c> all</c><00:13:54.199><c> of</c><00:13:54.320><c> you</c><00:13:54.440><c> may</c><00:13:54.600><c> be</c>

00:13:54.749 --> 00:13:54.759 align:start position:0%
machine code and not all of you may be
 

00:13:54.759 --> 00:13:56.590 align:start position:0%
machine code and not all of you may be
comfortable<00:13:55.199><c> with</c><00:13:55.360><c> it</c><00:13:55.880><c> but</c><00:13:56.000><c> you</c><00:13:56.079><c> can</c><00:13:56.240><c> notice</c>

00:13:56.590 --> 00:13:56.600 align:start position:0%
comfortable with it but you can notice
 

00:13:56.600 --> 00:13:58.550 align:start position:0%
comfortable with it but you can notice
one<00:13:56.800><c> thing</c><00:13:57.079><c> is</c><00:13:57.240><c> that</c><00:13:57.800><c> on</c><00:13:57.920><c> the</c><00:13:58.079><c> left</c><00:13:58.320><c> we</c><00:13:58.440><c> had</c>

00:13:58.550 --> 00:13:58.560 align:start position:0%
one thing is that on the left we had
 

00:13:58.560 --> 00:13:59.949 align:start position:0%
one thing is that on the left we had
four<00:13:58.759><c> inst</c><00:13:59.079><c> instructions</c><00:13:59.440><c> and</c><00:13:59.560><c> on</c><00:13:59.680><c> the</c><00:13:59.800><c> right</c>

00:13:59.949 --> 00:13:59.959 align:start position:0%
four inst instructions and on the right
 

00:13:59.959 --> 00:14:01.990 align:start position:0%
four inst instructions and on the right
we<00:14:00.120><c> have</c><00:14:00.360><c> three</c><00:14:00.800><c> so</c><00:14:01.079><c> hey</c><00:14:01.240><c> we</c><00:14:01.399><c> got</c><00:14:01.560><c> rid</c><00:14:01.680><c> of</c><00:14:01.800><c> one</c>

00:14:01.990 --> 00:14:02.000 align:start position:0%
we have three so hey we got rid of one
 

00:14:02.000 --> 00:14:03.389 align:start position:0%
we have three so hey we got rid of one
instruction<00:14:02.399><c> in</c><00:14:02.480><c> the</c><00:14:02.600><c> loop</c><00:14:02.880><c> it</c><00:14:02.959><c> should</c><00:14:03.160><c> run</c><00:14:03.320><c> a</c>

00:14:03.389 --> 00:14:03.399 align:start position:0%
instruction in the loop it should run a
 

00:14:03.399 --> 00:14:05.269 align:start position:0%
instruction in the loop it should run a
little<00:14:03.720><c> faster</c><00:14:04.480><c> the</c><00:14:04.600><c> other</c><00:14:04.759><c> thing</c><00:14:04.959><c> that's</c>

00:14:05.269 --> 00:14:05.279 align:start position:0%
little faster the other thing that's
 

00:14:05.279 --> 00:14:06.829 align:start position:0%
little faster the other thing that's
actually<00:14:05.519><c> a</c><00:14:05.639><c> bigger</c><00:14:05.959><c> deal</c><00:14:06.320><c> is</c><00:14:06.440><c> that</c><00:14:06.600><c> the</c>

00:14:06.829 --> 00:14:06.839 align:start position:0%
actually a bigger deal is that the
 

00:14:06.839 --> 00:14:08.269 align:start position:0%
actually a bigger deal is that the
verion<00:14:07.120><c> on</c><00:14:07.240><c> the</c><00:14:07.360><c> left</c><00:14:07.560><c> is</c><00:14:07.720><c> using</c><00:14:08.040><c> two</c>

00:14:08.269 --> 00:14:08.279 align:start position:0%
verion on the left is using two
 

00:14:08.279 --> 00:14:10.310 align:start position:0%
verion on the left is using two
registers<00:14:09.040><c> it's</c><00:14:09.199><c> using</c><00:14:09.480><c> a</c><00:14:09.680><c> register</c><00:14:10.120><c> to</c>

00:14:10.310 --> 00:14:10.320 align:start position:0%
registers it's using a register to
 

00:14:10.320 --> 00:14:12.110 align:start position:0%
registers it's using a register to
remember<00:14:10.720><c> what</c><00:14:10.839><c> the</c><00:14:10.959><c> value</c><00:14:11.199><c> of</c><00:14:11.360><c> I</c><00:14:11.639><c> is</c><00:14:11.880><c> and</c><00:14:12.000><c> it</c>

00:14:12.110 --> 00:14:12.120 align:start position:0%
remember what the value of I is and it
 

00:14:12.120 --> 00:14:13.509 align:start position:0%
remember what the value of I is and it
has<00:14:12.320><c> another</c><00:14:12.600><c> register</c><00:14:12.959><c> to</c><00:14:13.079><c> remember</c><00:14:13.399><c> what</c>

00:14:13.509 --> 00:14:13.519 align:start position:0%
has another register to remember what
 

00:14:13.519 --> 00:14:16.310 align:start position:0%
has another register to remember what
the<00:14:13.639><c> value</c><00:14:13.880><c> of</c><00:14:14.040><c> n</c><00:14:14.360><c> is</c><00:14:15.240><c> where</c><00:14:15.560><c> the</c><00:14:15.680><c> code</c><00:14:16.000><c> on</c><00:14:16.160><c> the</c>

00:14:16.310 --> 00:14:16.320 align:start position:0%
the value of n is where the code on the
 

00:14:16.320 --> 00:14:18.030 align:start position:0%
the value of n is where the code on the
right<00:14:16.639><c> only</c><00:14:16.880><c> needs</c><00:14:17.120><c> to</c><00:14:17.279><c> keep</c><00:14:17.480><c> track</c><00:14:17.720><c> of</c><00:14:17.880><c> one</c>

00:14:18.030 --> 00:14:18.040 align:start position:0%
right only needs to keep track of one
 

00:14:18.040 --> 00:14:19.990 align:start position:0%
right only needs to keep track of one
thing<00:14:18.519><c> and</c><00:14:18.600><c> so</c><00:14:18.759><c> we've</c><00:14:18.920><c> freed</c><00:14:19.279><c> up</c><00:14:19.399><c> a</c><00:14:19.519><c> register</c>

00:14:19.990 --> 00:14:20.000 align:start position:0%
thing and so we've freed up a register
 

00:14:20.000 --> 00:14:21.550 align:start position:0%
thing and so we've freed up a register
that<00:14:20.199><c> could</c><00:14:20.320><c> be</c><00:14:20.519><c> super</c><00:14:20.759><c> useful</c><00:14:21.240><c> somewhere</c>

00:14:21.550 --> 00:14:21.560 align:start position:0%
that could be super useful somewhere
 

00:14:21.560 --> 00:14:23.470 align:start position:0%
that could be super useful somewhere
else<00:14:21.759><c> in</c><00:14:21.880><c> the</c><00:14:22.040><c> loop</c><00:14:22.440><c> say</c><00:14:22.680><c> we</c><00:14:22.800><c> had</c><00:14:22.959><c> an</c><00:14:23.199><c> actual</c>

00:14:23.470 --> 00:14:23.480 align:start position:0%
else in the loop say we had an actual
 

00:14:23.480 --> 00:14:25.990 align:start position:0%
else in the loop say we had an actual
interesting<00:14:24.079><c> computation</c><00:14:24.720><c> going</c><00:14:24.920><c> on</c><00:14:25.160><c> here</c><00:14:25.759><c> so</c>

00:14:25.990 --> 00:14:26.000 align:start position:0%
interesting computation going on here so
 

00:14:26.000 --> 00:14:28.110 align:start position:0%
interesting computation going on here so
we<00:14:26.120><c> get</c><00:14:26.360><c> a</c><00:14:26.480><c> smaller</c><00:14:26.839><c> Loop</c><00:14:27.360><c> it</c><00:14:27.440><c> uses</c><00:14:27.759><c> fewer</c>

00:14:28.110 --> 00:14:28.120 align:start position:0%
we get a smaller Loop it uses fewer
 

00:14:28.120 --> 00:14:30.189 align:start position:0%
we get a smaller Loop it uses fewer
registers<00:14:28.680><c> it's</c><00:14:28.800><c> just</c><00:14:29.160><c> better</c>

00:14:30.189 --> 00:14:30.199 align:start position:0%
registers it's just better
 

00:14:30.199 --> 00:14:33.590 align:start position:0%
registers it's just better
overall<00:14:31.560><c> um</c><00:14:32.560><c> similar</c><00:14:32.920><c> kind</c><00:14:33.040><c> of</c><00:14:33.160><c> thing</c><00:14:33.360><c> we</c><00:14:33.440><c> can</c>

00:14:33.590 --> 00:14:33.600 align:start position:0%
overall um similar kind of thing we can
 

00:14:33.600 --> 00:14:35.069 align:start position:0%
overall um similar kind of thing we can
do<00:14:33.839><c> now</c><00:14:34.000><c> that</c><00:14:34.120><c> we</c><00:14:34.199><c> can</c><00:14:34.360><c> analyze</c><00:14:34.720><c> induction</c>

00:14:35.069 --> 00:14:35.079 align:start position:0%
do now that we can analyze induction
 

00:14:35.079 --> 00:14:37.069 align:start position:0%
do now that we can analyze induction
variables<00:14:35.480><c> is</c><00:14:35.639><c> strength</c><00:14:36.079><c> reduction</c><00:14:36.680><c> so</c><00:14:36.839><c> now</c>

00:14:37.069 --> 00:14:37.079 align:start position:0%
variables is strength reduction so now
 

00:14:37.079 --> 00:14:38.509 align:start position:0%
variables is strength reduction so now
you<00:14:37.199><c> have</c><00:14:37.360><c> some</c><00:14:37.480><c> sort</c><00:14:37.680><c> of</c><00:14:37.880><c> operation</c><00:14:38.279><c> in</c><00:14:38.399><c> your</c>

00:14:38.509 --> 00:14:38.519 align:start position:0%
you have some sort of operation in your
 

00:14:38.519 --> 00:14:40.629 align:start position:0%
you have some sort of operation in your
Loop<00:14:38.839><c> typically</c><00:14:39.199><c> that</c><00:14:39.399><c> involves</c><00:14:39.759><c> a</c><00:14:39.959><c> multiply</c>

00:14:40.629 --> 00:14:40.639 align:start position:0%
Loop typically that involves a multiply
 

00:14:40.639 --> 00:14:43.030 align:start position:0%
Loop typically that involves a multiply
so<00:14:40.839><c> there</c><00:14:40.959><c> on</c><00:14:41.079><c> the</c><00:14:41.240><c> left</c><00:14:41.440><c> you</c><00:14:41.560><c> can</c><00:14:41.720><c> see</c><00:14:42.600><c> we</c><00:14:42.800><c> have</c>

00:14:43.030 --> 00:14:43.040 align:start position:0%
so there on the left you can see we have
 

00:14:43.040 --> 00:14:44.870 align:start position:0%
so there on the left you can see we have
I<00:14:43.320><c> controlling</c><00:14:43.759><c> the</c><00:14:43.920><c> loop</c><00:14:44.199><c> now</c><00:14:44.360><c> we</c><00:14:44.480><c> do</c><00:14:44.639><c> have</c><00:14:44.759><c> a</c>

00:14:44.870 --> 00:14:44.880 align:start position:0%
I controlling the loop now we do have a
 

00:14:44.880 --> 00:14:47.629 align:start position:0%
I controlling the loop now we do have a
reference<00:14:45.279><c> to</c><00:14:45.440><c> I</c><00:14:45.759><c> inside</c><00:14:46.040><c> the</c><00:14:46.360><c> loop</c><00:14:47.360><c> but</c><00:14:47.519><c> when</c>

00:14:47.629 --> 00:14:47.639 align:start position:0%
reference to I inside the loop but when
 

00:14:47.639 --> 00:14:49.509 align:start position:0%
reference to I inside the loop but when
we<00:14:47.800><c> use</c><00:14:47.959><c> it</c><00:14:48.160><c> we're</c><00:14:48.399><c> all</c><00:14:48.680><c> always</c><00:14:48.959><c> multiplying</c>

00:14:49.509 --> 00:14:49.519 align:start position:0%
we use it we're all always multiplying
 

00:14:49.519 --> 00:14:53.230 align:start position:0%
we use it we're all always multiplying
it<00:14:49.720><c> by</c><00:14:50.120><c> three</c><00:14:51.120><c> now</c><00:14:51.720><c> multiplication</c><00:14:52.720><c> on</c><00:14:52.880><c> most</c>

00:14:53.230 --> 00:14:53.240 align:start position:0%
it by three now multiplication on most
 

00:14:53.240 --> 00:14:56.550 align:start position:0%
it by three now multiplication on most
computers<00:14:54.079><c> is</c><00:14:54.279><c> not</c><00:14:54.639><c> as</c><00:14:54.800><c> cheap</c><00:14:55.120><c> as</c><00:14:55.360><c> addition</c><00:14:56.360><c> um</c>

00:14:56.550 --> 00:14:56.560 align:start position:0%
computers is not as cheap as addition um
 

00:14:56.560 --> 00:14:58.550 align:start position:0%
computers is not as cheap as addition um
and<00:14:56.720><c> so</c><00:14:57.079><c> if</c><00:14:57.199><c> we</c><00:14:57.360><c> could</c><00:14:57.560><c> somehow</c><00:14:57.920><c> reexpress</c>

00:14:58.550 --> 00:14:58.560 align:start position:0%
and so if we could somehow reexpress
 

00:14:58.560 --> 00:15:00.389 align:start position:0%
and so if we could somehow reexpress
that<00:14:58.759><c> mult</c><00:14:59.040><c> multiplication</c><00:14:59.639><c> as</c><00:14:59.759><c> an</c><00:14:59.920><c> addition</c>

00:15:00.389 --> 00:15:00.399 align:start position:0%
that mult multiplication as an addition
 

00:15:00.399 --> 00:15:02.350 align:start position:0%
that mult multiplication as an addition
we<00:15:00.519><c> might</c><00:15:00.720><c> be</c><00:15:00.839><c> able</c><00:15:01.000><c> to</c><00:15:01.160><c> make</c><00:15:01.399><c> Loop</c><00:15:01.639><c> run</c><00:15:01.959><c> faster</c>

00:15:02.350 --> 00:15:02.360 align:start position:0%
we might be able to make Loop run faster
 

00:15:02.360 --> 00:15:04.629 align:start position:0%
we might be able to make Loop run faster
save<00:15:02.639><c> some</c><00:15:02.880><c> time</c><00:15:03.600><c> and</c><00:15:03.800><c> this</c><00:15:03.880><c> is</c><00:15:04.120><c> what</c><00:15:04.320><c> we</c><00:15:04.480><c> can</c>

00:15:04.629 --> 00:15:04.639 align:start position:0%
save some time and this is what we can
 

00:15:04.639 --> 00:15:06.710 align:start position:0%
save some time and this is what we can
do<00:15:04.839><c> when</c><00:15:05.000><c> we</c><00:15:05.120><c> have</c><00:15:05.240><c> strength</c><00:15:05.639><c> reduction</c><00:15:06.399><c> so</c><00:15:06.600><c> in</c>

00:15:06.710 --> 00:15:06.720 align:start position:0%
do when we have strength reduction so in
 

00:15:06.720 --> 00:15:08.790 align:start position:0%
do when we have strength reduction so in
this<00:15:06.880><c> case</c><00:15:07.120><c> we</c><00:15:07.639><c> understand</c><00:15:07.880><c> that</c><00:15:08.079><c> while</c><00:15:08.320><c> I</c><00:15:08.639><c> is</c>

00:15:08.790 --> 00:15:08.800 align:start position:0%
this case we understand that while I is
 

00:15:08.800 --> 00:15:11.870 align:start position:0%
this case we understand that while I is
incrementing<00:15:09.440><c> by</c><00:15:09.600><c> one</c><00:15:09.920><c> every</c><00:15:10.279><c> iteration</c><00:15:11.279><c> I</c><00:15:11.480><c> *</c>

00:15:11.870 --> 00:15:11.880 align:start position:0%
incrementing by one every iteration I *
 

00:15:11.880 --> 00:15:14.310 align:start position:0%
incrementing by one every iteration I *
3<00:15:12.240><c> is</c><00:15:12.399><c> incrementing</c><00:15:13.040><c> by</c><00:15:13.199><c> three</c><00:15:13.839><c> every</c>

00:15:14.310 --> 00:15:14.320 align:start position:0%
3 is incrementing by three every
 

00:15:14.320 --> 00:15:17.269 align:start position:0%
3 is incrementing by three every
iteration<00:15:15.320><c> right</c><00:15:16.000><c> and</c><00:15:16.160><c> then</c><00:15:16.519><c> we</c><00:15:16.680><c> also</c>

00:15:17.269 --> 00:15:17.279 align:start position:0%
iteration right and then we also
 

00:15:17.279 --> 00:15:19.550 align:start position:0%
iteration right and then we also
understand<00:15:17.560><c> again</c><00:15:18.000><c> how</c><00:15:18.560><c> the</c><00:15:18.759><c> value</c><00:15:19.000><c> of</c><00:15:19.160><c> I</c><00:15:19.399><c> is</c>

00:15:19.550 --> 00:15:19.560 align:start position:0%
understand again how the value of I is
 

00:15:19.560 --> 00:15:21.550 align:start position:0%
understand again how the value of I is
evolving<00:15:20.320><c> we</c><00:15:20.440><c> turn</c><00:15:20.720><c> this</c><00:15:20.839><c> into</c><00:15:21.079><c> a</c><00:15:21.240><c> down</c>

00:15:21.550 --> 00:15:21.560 align:start position:0%
evolving we turn this into a down
 

00:15:21.560 --> 00:15:24.749 align:start position:0%
evolving we turn this into a down
counted<00:15:21.880><c> Loop</c><00:15:22.720><c> okay</c><00:15:23.560><c> and</c><00:15:23.880><c> we</c><00:15:24.120><c> replace</c><00:15:24.600><c> the</c>

00:15:24.749 --> 00:15:24.759 align:start position:0%
counted Loop okay and we replace the
 

00:15:24.759 --> 00:15:27.269 align:start position:0%
counted Loop okay and we replace the
multiplication<00:15:25.560><c> in</c><00:15:25.759><c> there</c><00:15:26.079><c> by</c><00:15:26.199><c> an</c><00:15:26.399><c> addition</c>

00:15:27.269 --> 00:15:27.279 align:start position:0%
multiplication in there by an addition
 

00:15:27.279 --> 00:15:28.749 align:start position:0%
multiplication in there by an addition
so<00:15:27.519><c> if</c><00:15:27.600><c> you</c><00:15:27.720><c> look</c><00:15:27.880><c> at</c><00:15:28.000><c> that</c><00:15:28.120><c> transformation</c>

00:15:28.749 --> 00:15:28.759 align:start position:0%
so if you look at that transformation
 

00:15:28.759 --> 00:15:30.350 align:start position:0%
so if you look at that transformation
and<00:15:28.959><c> you</c><00:15:29.040><c> might</c><00:15:29.160><c> have</c><00:15:29.279><c> to</c><00:15:29.360><c> squint</c><00:15:29.639><c> a</c><00:15:29.759><c> little</c><00:15:30.079><c> to</c>

00:15:30.350 --> 00:15:30.360 align:start position:0%
and you might have to squint a little to
 

00:15:30.360 --> 00:15:31.829 align:start position:0%
and you might have to squint a little to
to<00:15:30.519><c> convince</c><00:15:30.880><c> yourself</c><00:15:31.240><c> that</c><00:15:31.319><c> we're</c><00:15:31.560><c> actually</c>

00:15:31.829 --> 00:15:31.839 align:start position:0%
to convince yourself that we're actually
 

00:15:31.839 --> 00:15:33.910 align:start position:0%
to convince yourself that we're actually
doing<00:15:32.120><c> things</c><00:15:32.360><c> correctly</c><00:15:33.319><c> but</c><00:15:33.440><c> now</c><00:15:33.600><c> we</c><00:15:33.720><c> have</c><00:15:33.800><c> a</c>

00:15:33.910 --> 00:15:33.920 align:start position:0%
doing things correctly but now we have a
 

00:15:33.920 --> 00:15:35.389 align:start position:0%
doing things correctly but now we have a
down<00:15:34.199><c> count</c><00:15:34.319><c> to</c><00:15:34.480><c> Loop</c><00:15:34.759><c> so</c><00:15:34.880><c> we're</c><00:15:35.000><c> using</c>

00:15:35.389 --> 00:15:35.399 align:start position:0%
down count to Loop so we're using
 

00:15:35.399 --> 00:15:36.749 align:start position:0%
down count to Loop so we're using
potentially<00:15:35.759><c> a</c><00:15:35.839><c> few</c>

00:15:36.749 --> 00:15:36.759 align:start position:0%
potentially a few
 

00:15:36.759 --> 00:15:39.550 align:start position:0%
potentially a few
register<00:15:37.759><c> plus</c><00:15:38.040><c> registers</c><00:15:38.440><c> for</c><00:15:38.639><c> that</c><00:15:39.399><c> and</c>

00:15:39.550 --> 00:15:39.560 align:start position:0%
register plus registers for that and
 

00:15:39.560 --> 00:15:41.309 align:start position:0%
register plus registers for that and
also<00:15:39.800><c> we've</c><00:15:40.000><c> gotten</c><00:15:40.759><c> gotten</c><00:15:40.959><c> rid</c><00:15:41.120><c> of</c><00:15:41.199><c> the</c>

00:15:41.309 --> 00:15:41.319 align:start position:0%
also we've gotten gotten rid of the
 

00:15:41.319 --> 00:15:43.550 align:start position:0%
also we've gotten gotten rid of the
multiply<00:15:41.800><c> changed</c><00:15:42.120><c> it</c><00:15:42.240><c> into</c><00:15:42.440><c> an</c><00:15:42.560><c> addition</c><00:15:43.279><c> so</c>

00:15:43.550 --> 00:15:43.560 align:start position:0%
multiply changed it into an addition so
 

00:15:43.560 --> 00:15:47.509 align:start position:0%
multiply changed it into an addition so
again<00:15:43.839><c> the</c><00:15:43.959><c> loop</c><00:15:44.199><c> is</c><00:15:44.399><c> now</c><00:15:45.079><c> operating</c><00:15:45.519><c> more</c>

00:15:47.509 --> 00:15:47.519 align:start position:0%
again the loop is now operating more
 

00:15:47.519 --> 00:15:49.710 align:start position:0%
again the loop is now operating more
efficiently<00:15:48.519><c> and</c><00:15:48.680><c> as</c><00:15:48.800><c> a</c><00:15:48.959><c> final</c><00:15:49.240><c> piece</c><00:15:49.600><c> this</c>

00:15:49.710 --> 00:15:49.720 align:start position:0%
efficiently and as a final piece this
 

00:15:49.720 --> 00:15:51.350 align:start position:0%
efficiently and as a final piece this
one<00:15:49.920><c> might</c><00:15:50.079><c> be</c><00:15:50.279><c> a</c><00:15:50.399><c> little</c><00:15:50.600><c> bit</c><00:15:50.959><c> hard</c><00:15:51.160><c> for</c>

00:15:51.350 --> 00:15:51.360 align:start position:0%
one might be a little bit hard for
 

00:15:51.360 --> 00:15:53.269 align:start position:0%
one might be a little bit hard for
people<00:15:51.600><c> to</c><00:15:52.040><c> understand</c><00:15:52.240><c> but</c><00:15:52.360><c> let's</c><00:15:52.560><c> give</c><00:15:52.680><c> it</c><00:15:52.800><c> a</c>

00:15:53.269 --> 00:15:53.279 align:start position:0%
people to understand but let's give it a
 

00:15:53.279 --> 00:15:56.990 align:start position:0%
people to understand but let's give it a
try<00:15:54.279><c> um</c><00:15:54.880><c> there's</c><00:15:55.079><c> a</c><00:15:55.240><c> mode</c><00:15:55.600><c> in</c><00:15:55.759><c> arm</c><00:15:56.040><c> 64</c><00:15:56.759><c> called</c>

00:15:56.990 --> 00:15:57.000 align:start position:0%
try um there's a mode in arm 64 called
 

00:15:57.000 --> 00:15:59.309 align:start position:0%
try um there's a mode in arm 64 called
post<00:15:57.319><c> increment</c><00:15:57.800><c> addressing</c><00:15:58.319><c> mode</c><00:15:59.000><c> so</c><00:15:59.120><c> if</c><00:15:59.240><c> you</c>

00:15:59.309 --> 00:15:59.319 align:start position:0%
post increment addressing mode so if you
 

00:15:59.319 --> 00:16:01.829 align:start position:0%
post increment addressing mode so if you
are<00:15:59.560><c> walking</c><00:16:00.120><c> through</c><00:16:01.040><c> data</c><00:16:01.319><c> structure</c><00:16:01.680><c> like</c>

00:16:01.829 --> 00:16:01.839 align:start position:0%
are walking through data structure like
 

00:16:01.839 --> 00:16:04.749 align:start position:0%
are walking through data structure like
an<00:16:02.040><c> array</c><00:16:02.800><c> effectively</c><00:16:03.360><c> somewhere</c><00:16:03.759><c> in</c><00:16:04.040><c> there</c>

00:16:04.749 --> 00:16:04.759 align:start position:0%
an array effectively somewhere in there
 

00:16:04.759 --> 00:16:06.350 align:start position:0%
an array effectively somewhere in there
there<00:16:04.959><c> has</c><00:16:05.120><c> to</c><00:16:05.279><c> be</c><00:16:05.600><c> a</c><00:16:05.759><c> pointer</c><00:16:06.160><c> that's</c>

00:16:06.350 --> 00:16:06.360 align:start position:0%
there has to be a pointer that's
 

00:16:06.360 --> 00:16:08.790 align:start position:0%
there has to be a pointer that's
advancing<00:16:06.800><c> along</c><00:16:07.680><c> pointing</c><00:16:08.040><c> at</c><00:16:08.199><c> each</c><00:16:08.440><c> element</c>

00:16:08.790 --> 00:16:08.800 align:start position:0%
advancing along pointing at each element
 

00:16:08.800 --> 00:16:12.509 align:start position:0%
advancing along pointing at each element
of<00:16:08.920><c> the</c><00:16:09.199><c> array</c><00:16:10.199><c> um</c><00:16:10.800><c> and</c><00:16:11.040><c> in</c><00:16:11.560><c> net</c><00:16:11.720><c> 8</c><00:16:12.120><c> we</c><00:16:12.240><c> would</c>

00:16:12.509 --> 00:16:12.519 align:start position:0%
of the array um and in net 8 we would
 

00:16:12.519 --> 00:16:15.350 align:start position:0%
of the array um and in net 8 we would
actually<00:16:13.480><c> compute</c><00:16:13.920><c> that</c><00:16:14.079><c> pointer</c><00:16:14.560><c> value</c><00:16:15.199><c> on</c>

00:16:15.350 --> 00:16:15.360 align:start position:0%
actually compute that pointer value on
 

00:16:15.360 --> 00:16:18.150 align:start position:0%
actually compute that pointer value on
the<00:16:15.480><c> Fly</c><00:16:15.959><c> by</c><00:16:16.120><c> taking</c><00:16:16.600><c> I</c><00:16:16.920><c> and</c><00:16:17.120><c> multiplying</c><00:16:17.720><c> it</c>

00:16:18.150 --> 00:16:18.160 align:start position:0%
the Fly by taking I and multiplying it
 

00:16:18.160 --> 00:16:20.509 align:start position:0%
the Fly by taking I and multiplying it
by<00:16:18.959><c> the</c><00:16:19.160><c> size</c><00:16:19.360><c> of</c><00:16:19.480><c> the</c><00:16:19.560><c> array</c><00:16:19.880><c> element</c><00:16:20.319><c> and</c>

00:16:20.509 --> 00:16:20.519 align:start position:0%
by the size of the array element and
 

00:16:20.519 --> 00:16:22.590 align:start position:0%
by the size of the array element and
adding<00:16:20.800><c> it</c><00:16:20.920><c> to</c><00:16:21.240><c> that</c><00:16:21.519><c> base</c><00:16:22.000><c> element</c><00:16:22.319><c> of</c><00:16:22.480><c> the</c>

00:16:22.590 --> 00:16:22.600 align:start position:0%
adding it to that base element of the
 

00:16:22.600 --> 00:16:24.550 align:start position:0%
adding it to that base element of the
array<00:16:22.959><c> to</c><00:16:23.120><c> figure</c><00:16:23.319><c> out</c><00:16:23.440><c> where</c><00:16:23.560><c> to</c><00:16:23.720><c> point</c><00:16:24.440><c> and</c>

00:16:24.550 --> 00:16:24.560 align:start position:0%
array to figure out where to point and
 

00:16:24.560 --> 00:16:26.069 align:start position:0%
array to figure out where to point and
that's<00:16:24.720><c> what</c><00:16:24.920><c> that</c><00:16:25.079><c> very</c><00:16:25.319><c> first</c><00:16:25.600><c> instruction</c>

00:16:26.069 --> 00:16:26.079 align:start position:0%
that's what that very first instruction
 

00:16:26.079 --> 00:16:28.189 align:start position:0%
that's what that very first instruction
in<00:16:26.279><c> purple</c><00:16:26.720><c> there</c><00:16:26.959><c> on</c><00:16:27.240><c> the</c><00:16:27.720><c> in</c><00:16:27.800><c> the</c><00:16:27.920><c> middle</c>

00:16:28.189 --> 00:16:28.199 align:start position:0%
in purple there on the in the middle
 

00:16:28.199 --> 00:16:30.470 align:start position:0%
in purple there on the in the middle
column<00:16:28.440><c> is</c><00:16:28.519><c> showing</c><00:16:28.920><c> was</c><00:16:29.120><c> basically</c><00:16:29.480><c> adding</c>

00:16:30.470 --> 00:16:30.480 align:start position:0%
column is showing was basically adding
 

00:16:30.480 --> 00:16:33.749 align:start position:0%
column is showing was basically adding
result<00:16:30.759><c> of</c><00:16:30.959><c> that</c><00:16:31.680><c> um</c><00:16:32.120><c> thing</c><00:16:32.480><c> and</c><00:16:32.680><c> then</c><00:16:33.560><c> that</c>

00:16:33.749 --> 00:16:33.759 align:start position:0%
result of that um thing and then that
 

00:16:33.759 --> 00:16:35.389 align:start position:0%
result of that um thing and then that
addition<00:16:34.360><c> happens</c><00:16:34.680><c> sort</c><00:16:34.839><c> of</c><00:16:34.959><c> just</c><00:16:35.120><c> for</c><00:16:35.279><c> the</c>

00:16:35.389 --> 00:16:35.399 align:start position:0%
addition happens sort of just for the
 

00:16:35.399 --> 00:16:37.389 align:start position:0%
addition happens sort of just for the
array<00:16:35.839><c> access</c><00:16:36.360><c> and</c><00:16:36.519><c> then</c><00:16:37.000><c> we</c><00:16:37.120><c> have</c><00:16:37.199><c> to</c>

00:16:37.389 --> 00:16:37.399 align:start position:0%
array access and then we have to
 

00:16:37.399 --> 00:16:39.829 align:start position:0%
array access and then we have to
increment<00:16:38.040><c> I</c><00:16:38.639><c> and</c><00:16:38.759><c> we</c><00:16:38.880><c> have</c><00:16:38.959><c> to</c><00:16:39.480><c> do</c><00:16:39.680><c> the</c>

00:16:39.829 --> 00:16:39.839 align:start position:0%
increment I and we have to do the
 

00:16:39.839 --> 00:16:41.470 align:start position:0%
increment I and we have to do the
computation<00:16:40.279><c> of</c><00:16:40.480><c> loop</c><00:16:40.759><c> which</c><00:16:40.839><c> is</c><00:16:41.000><c> adding</c><00:16:41.279><c> up</c>

00:16:41.470 --> 00:16:41.480 align:start position:0%
computation of loop which is adding up
 

00:16:41.480 --> 00:16:42.949 align:start position:0%
computation of loop which is adding up
the<00:16:41.639><c> sum</c><00:16:42.120><c> so</c><00:16:42.240><c> you'll</c><00:16:42.399><c> see</c><00:16:42.600><c> that</c><00:16:42.720><c> there's</c>

00:16:42.949 --> 00:16:42.959 align:start position:0%
the sum so you'll see that there's
 

00:16:42.959 --> 00:16:44.550 align:start position:0%
the sum so you'll see that there's
effectively<00:16:43.440><c> three</c><00:16:43.680><c> additions</c><00:16:44.120><c> going</c><00:16:44.319><c> on</c><00:16:44.440><c> in</c>

00:16:44.550 --> 00:16:44.560 align:start position:0%
effectively three additions going on in
 

00:16:44.560 --> 00:16:45.870 align:start position:0%
effectively three additions going on in
that<00:16:44.680><c> Loop</c><00:16:45.000><c> one</c><00:16:45.120><c> of</c><00:16:45.240><c> which</c><00:16:45.360><c> is</c><00:16:45.519><c> just</c><00:16:45.639><c> sort</c><00:16:45.759><c> of</c>

00:16:45.870 --> 00:16:45.880 align:start position:0%
that Loop one of which is just sort of
 

00:16:45.880 --> 00:16:49.949 align:start position:0%
that Loop one of which is just sort of
used<00:16:46.399><c> transiently</c><00:16:47.399><c> compute</c><00:16:47.800><c> the</c><00:16:48.040><c> element</c>

00:16:49.949 --> 00:16:49.959 align:start position:0%
used transiently compute the element
 

00:16:49.959 --> 00:16:52.710 align:start position:0%
used transiently compute the element
address<00:16:50.959><c> so</c><00:16:51.639><c> if</c><00:16:51.720><c> you</c><00:16:51.839><c> could</c><00:16:52.079><c> capture</c><00:16:52.440><c> that</c><00:16:52.600><c> and</c>

00:16:52.710 --> 00:16:52.720 align:start position:0%
address so if you could capture that and
 

00:16:52.720 --> 00:16:55.430 align:start position:0%
address so if you could capture that and
you<00:16:52.880><c> could</c><00:16:53.000><c> do</c><00:16:53.160><c> the</c><00:16:53.399><c> addition</c><00:16:54.399><c> and</c><00:16:55.240><c> take</c>

00:16:55.430 --> 00:16:55.440 align:start position:0%
you could do the addition and take
 

00:16:55.440 --> 00:16:56.550 align:start position:0%
you could do the addition and take
advantage<00:16:55.800><c> of</c><00:16:55.920><c> the</c><00:16:56.040><c> fact</c><00:16:56.199><c> that</c><00:16:56.319><c> it's</c>

00:16:56.550 --> 00:16:56.560 align:start position:0%
advantage of the fact that it's
 

00:16:56.560 --> 00:16:58.269 align:start position:0%
advantage of the fact that it's
incrementing<00:16:57.399><c> you</c><00:16:57.519><c> know</c><00:16:57.800><c> effectively</c><00:16:58.199><c> the</c>

00:16:58.269 --> 00:16:58.279 align:start position:0%
incrementing you know effectively the
 

00:16:58.279 --> 00:17:00.389 align:start position:0%
incrementing you know effectively the
loop<00:16:58.480><c> control</c><00:16:59.040><c> thing</c><00:16:59.480><c> you</c><00:16:59.600><c> can</c><00:16:59.800><c> eliminate</c><00:17:00.240><c> an</c>

00:17:00.389 --> 00:17:00.399 align:start position:0%
loop control thing you can eliminate an
 

00:17:00.399 --> 00:17:02.949 align:start position:0%
loop control thing you can eliminate an
addition<00:17:00.800><c> and</c><00:17:01.000><c> there</c><00:17:01.120><c> we</c><00:17:01.279><c> have</c><00:17:01.440><c> it</c><00:17:01.759><c> on</c><00:17:02.199><c> net</c><00:17:02.360><c> 9</c>

00:17:02.949 --> 00:17:02.959 align:start position:0%
addition and there we have it on net 9
 

00:17:02.959 --> 00:17:04.829 align:start position:0%
addition and there we have it on net 9
there's<00:17:03.240><c> one</c><00:17:03.480><c> less</c><00:17:03.800><c> addition</c>

00:17:04.829 --> 00:17:04.839 align:start position:0%
there's one less addition
 

00:17:04.839 --> 00:17:07.549 align:start position:0%
there's one less addition
happening<00:17:05.839><c> um</c><00:17:06.480><c> and</c><00:17:06.640><c> the</c><00:17:06.760><c> addition</c><00:17:07.199><c> that</c><00:17:07.319><c> was</c>

00:17:07.549 --> 00:17:07.559 align:start position:0%
happening um and the addition that was
 

00:17:07.559 --> 00:17:09.949 align:start position:0%
happening um and the addition that was
explicit<00:17:08.240><c> in</c><00:17:08.400><c> the</c><00:17:09.039><c> addressing</c><00:17:09.439><c> mode</c><00:17:09.720><c> before</c>

00:17:09.949 --> 00:17:09.959 align:start position:0%
explicit in the addressing mode before
 

00:17:09.959 --> 00:17:12.429 align:start position:0%
explicit in the addressing mode before
is<00:17:10.120><c> now</c><00:17:10.280><c> in</c><00:17:10.439><c> blue</c><00:17:11.160><c> has</c><00:17:11.360><c> a</c><00:17:11.600><c> special</c><00:17:11.919><c> syntax</c>

00:17:12.429 --> 00:17:12.439 align:start position:0%
is now in blue has a special syntax
 

00:17:12.439 --> 00:17:14.350 align:start position:0%
is now in blue has a special syntax
which<00:17:12.640><c> basically</c><00:17:12.959><c> means</c><00:17:13.480><c> we're</c><00:17:13.679><c> going</c><00:17:13.880><c> to</c><00:17:14.039><c> use</c>

00:17:14.350 --> 00:17:14.360 align:start position:0%
which basically means we're going to use
 

00:17:14.360 --> 00:17:16.870 align:start position:0%
which basically means we're going to use
x0<00:17:15.120><c> as</c><00:17:15.360><c> the</c><00:17:15.679><c> as</c><00:17:15.839><c> the</c><00:17:16.000><c> address</c><00:17:16.280><c> of</c><00:17:16.400><c> the</c><00:17:16.520><c> element</c>

00:17:16.870 --> 00:17:16.880 align:start position:0%
x0 as the as the address of the element
 

00:17:16.880 --> 00:17:18.710 align:start position:0%
x0 as the as the address of the element
and<00:17:17.000><c> then</c><00:17:17.079><c> we're</c><00:17:17.199><c> going</c><00:17:17.319><c> to</c><00:17:17.480><c> increment</c><00:17:17.959><c> x0</c><00:17:18.520><c> by</c>

00:17:18.710 --> 00:17:18.720 align:start position:0%
and then we're going to increment x0 by
 

00:17:18.720 --> 00:17:21.590 align:start position:0%
and then we're going to increment x0 by
four<00:17:19.720><c> so</c><00:17:20.079><c> there's</c><00:17:20.240><c> an</c><00:17:20.480><c> ad</c><00:17:20.720><c> hidden</c><00:17:21.000><c> in</c><00:17:21.160><c> there</c><00:17:21.319><c> so</c>

00:17:21.590 --> 00:17:21.600 align:start position:0%
four so there's an ad hidden in there so
 

00:17:21.600 --> 00:17:24.549 align:start position:0%
four so there's an ad hidden in there so
again<00:17:21.799><c> fewer</c><00:17:22.480><c> registers</c><00:17:23.480><c> um</c><00:17:24.039><c> a</c><00:17:24.120><c> fewer</c>

00:17:24.549 --> 00:17:24.559 align:start position:0%
again fewer registers um a fewer
 

00:17:24.559 --> 00:17:27.029 align:start position:0%
again fewer registers um a fewer
instructions<00:17:25.559><c> faster</c><00:17:26.039><c> processing</c><00:17:26.679><c> you</c><00:17:26.839><c> know</c>

00:17:27.029 --> 00:17:27.039 align:start position:0%
instructions faster processing you know
 

00:17:27.039 --> 00:17:29.590 align:start position:0%
instructions faster processing you know
all<00:17:27.240><c> good</c><00:17:27.439><c> stuffff</c>

00:17:29.590 --> 00:17:29.600 align:start position:0%
all good stuffff
 

00:17:29.600 --> 00:17:31.270 align:start position:0%
all good stuffff
all<00:17:29.760><c> right</c><00:17:30.000><c> let's</c><00:17:30.280><c> talk</c><00:17:30.480><c> a</c><00:17:30.600><c> little</c><00:17:30.799><c> bit</c><00:17:31.000><c> about</c>

00:17:31.270 --> 00:17:31.280 align:start position:0%
all right let's talk a little bit about
 

00:17:31.280 --> 00:17:33.230 align:start position:0%
all right let's talk a little bit about
some<00:17:31.520><c> general</c><00:17:31.919><c> optimizations</c><00:17:32.840><c> so</c><00:17:33.039><c> as</c><00:17:33.120><c> you</c>

00:17:33.230 --> 00:17:33.240 align:start position:0%
some general optimizations so as you
 

00:17:33.240 --> 00:17:36.390 align:start position:0%
some general optimizations so as you
know<00:17:33.400><c> in</c><00:17:33.880><c> net</c><00:17:34.039><c> 8</c><00:17:34.880><c> we</c><00:17:35.039><c> introduced</c><00:17:35.559><c> Dynamic</c><00:17:35.919><c> pjo</c>

00:17:36.390 --> 00:17:36.400 align:start position:0%
know in net 8 we introduced Dynamic pjo
 

00:17:36.400 --> 00:17:38.350 align:start position:0%
know in net 8 we introduced Dynamic pjo
and<00:17:36.720><c> net</c><00:17:36.880><c> 9</c><00:17:37.120><c> we've</c><00:17:37.400><c> made</c><00:17:37.600><c> some</c><00:17:37.840><c> enhancements</c>

00:17:38.350 --> 00:17:38.360 align:start position:0%
and net 9 we've made some enhancements
 

00:17:38.360 --> 00:17:40.909 align:start position:0%
and net 9 we've made some enhancements
to<00:17:38.520><c> Dynamic</c><00:17:39.080><c> pggo</c><00:17:40.080><c> I'd</c><00:17:40.240><c> like</c><00:17:40.400><c> to</c><00:17:40.520><c> just</c><00:17:40.679><c> touch</c>

00:17:40.909 --> 00:17:40.919 align:start position:0%
to Dynamic pggo I'd like to just touch
 

00:17:40.919 --> 00:17:42.510 align:start position:0%
to Dynamic pggo I'd like to just touch
on<00:17:41.160><c> one</c><00:17:41.320><c> of</c><00:17:41.480><c> those</c><00:17:41.679><c> here</c><00:17:41.919><c> and</c><00:17:42.000><c> then</c><00:17:42.120><c> we've</c><00:17:42.320><c> also</c>

00:17:42.510 --> 00:17:42.520 align:start position:0%
on one of those here and then we've also
 

00:17:42.520 --> 00:17:44.390 align:start position:0%
on one of those here and then we've also
made<00:17:42.720><c> some</c><00:17:42.919><c> improvements</c><00:17:43.440><c> to</c>

00:17:44.390 --> 00:17:44.400 align:start position:0%
made some improvements to
 

00:17:44.400 --> 00:17:46.990 align:start position:0%
made some improvements to
inlining<00:17:45.400><c> um</c>

00:17:46.990 --> 00:17:47.000 align:start position:0%
inlining um
 

00:17:47.000 --> 00:17:51.430 align:start position:0%
inlining um
so<00:17:48.000><c> in</c><00:17:48.480><c> net</c><00:17:48.799><c> 8</c><00:17:49.600><c> most</c><00:17:49.880><c> of</c><00:17:50.120><c> the</c><00:17:50.480><c> activity</c><00:17:51.039><c> around</c>

00:17:51.430 --> 00:17:51.440 align:start position:0%
so in net 8 most of the activity around
 

00:17:51.440 --> 00:17:54.430 align:start position:0%
so in net 8 most of the activity around
pggo<00:17:52.240><c> had</c><00:17:52.400><c> to</c><00:17:52.559><c> do</c><00:17:52.720><c> with</c><00:17:53.080><c> virtual</c><00:17:53.640><c> calls</c><00:17:54.200><c> and</c>

00:17:54.430 --> 00:17:54.440 align:start position:0%
pggo had to do with virtual calls and
 

00:17:54.440 --> 00:17:56.990 align:start position:0%
pggo had to do with virtual calls and
interface<00:17:55.000><c> calls</c><00:17:55.320><c> so</c><00:17:55.440><c> we</c><00:17:55.559><c> would</c><00:17:55.840><c> profile</c><00:17:56.840><c> look</c>

00:17:56.990 --> 00:17:57.000 align:start position:0%
interface calls so we would profile look
 

00:17:57.000 --> 00:17:58.830 align:start position:0%
interface calls so we would profile look
at<00:17:57.200><c> what</c><00:17:57.360><c> types</c><00:17:57.640><c> were</c><00:17:57.840><c> involved</c><00:17:58.200><c> in</c><00:17:58.360><c> those</c><00:17:58.520><c> and</c>

00:17:58.830 --> 00:17:58.840 align:start position:0%
at what types were involved in those and
 

00:17:58.840 --> 00:18:01.310 align:start position:0%
at what types were involved in those and
try<00:17:59.000><c> to</c><00:17:59.120><c> make</c><00:17:59.360><c> those</c><00:17:59.679><c> operations</c><00:18:00.559><c> be</c><00:18:00.960><c> more</c>

00:18:01.310 --> 00:18:01.320 align:start position:0%
try to make those operations be more
 

00:18:01.320 --> 00:18:04.270 align:start position:0%
try to make those operations be more
efficient<00:18:02.320><c> by</c><00:18:02.840><c> by</c><00:18:03.280><c> by</c><00:18:03.559><c> guessing</c><00:18:04.000><c> or</c>

00:18:04.270 --> 00:18:04.280 align:start position:0%
efficient by by by guessing or
 

00:18:04.280 --> 00:18:06.950 align:start position:0%
efficient by by by guessing or
predicting<00:18:04.840><c> what</c><00:18:05.080><c> the</c><00:18:05.240><c> outcomes</c><00:18:05.799><c> might</c><00:18:06.080><c> be</c>

00:18:06.950 --> 00:18:06.960 align:start position:0%
predicting what the outcomes might be
 

00:18:06.960 --> 00:18:09.830 align:start position:0%
predicting what the outcomes might be
and<00:18:07.039><c> so</c><00:18:07.200><c> in</c><00:18:07.360><c> dnet</c><00:18:08.320><c> um</c><00:18:08.799><c> nine</c><00:18:09.200><c> we've</c><00:18:09.400><c> extended</c>

00:18:09.830 --> 00:18:09.840 align:start position:0%
and so in dnet um nine we've extended
 

00:18:09.840 --> 00:18:11.470 align:start position:0%
and so in dnet um nine we've extended
that<00:18:09.960><c> to</c><00:18:10.120><c> include</c><00:18:10.480><c> some</c><00:18:10.679><c> other</c><00:18:10.960><c> operations</c>

00:18:11.470 --> 00:18:11.480 align:start position:0%
that to include some other operations
 

00:18:11.480 --> 00:18:13.990 align:start position:0%
that to include some other operations
that<00:18:11.640><c> deal</c><00:18:11.880><c> with</c><00:18:12.080><c> types</c><00:18:12.440><c> like</c><00:18:12.760><c> casting</c><00:18:13.679><c> so</c><00:18:13.840><c> in</c>

00:18:13.990 --> 00:18:14.000 align:start position:0%
that deal with types like casting so in
 

00:18:14.000 --> 00:18:15.830 align:start position:0%
that deal with types like casting so in
this<00:18:14.240><c> case</c><00:18:14.679><c> we</c>

00:18:15.830 --> 00:18:15.840 align:start position:0%
this case we
 

00:18:15.840 --> 00:18:19.190 align:start position:0%
this case we
have<00:18:16.840><c> um</c><00:18:17.440><c> a</c><00:18:17.600><c> simple</c><00:18:18.440><c> question</c><00:18:18.919><c> like</c><00:18:19.039><c> we're</c>

00:18:19.190 --> 00:18:19.200 align:start position:0%
have um a simple question like we're
 

00:18:19.200 --> 00:18:21.190 align:start position:0%
have um a simple question like we're
just<00:18:19.320><c> going</c><00:18:19.440><c> to</c><00:18:19.799><c> look</c><00:18:19.960><c> at</c><00:18:20.120><c> an</c><00:18:20.320><c> object</c><00:18:20.640><c> and</c><00:18:20.799><c> say</c>

00:18:21.190 --> 00:18:21.200 align:start position:0%
just going to look at an object and say
 

00:18:21.200 --> 00:18:24.350 align:start position:0%
just going to look at an object and say
hey<00:18:22.200><c> um</c><00:18:22.880><c> is</c><00:18:23.080><c> this</c><00:18:23.320><c> object</c><00:18:23.679><c> Implement</c><00:18:24.120><c> I</c>

00:18:24.350 --> 00:18:24.360 align:start position:0%
hey um is this object Implement I
 

00:18:24.360 --> 00:18:27.070 align:start position:0%
hey um is this object Implement I
collection<00:18:25.200><c> right</c><00:18:25.520><c> so</c><00:18:26.240><c> might</c><00:18:26.440><c> think</c><00:18:26.720><c> well</c>

00:18:27.070 --> 00:18:27.080 align:start position:0%
collection right so might think well
 

00:18:27.080 --> 00:18:28.510 align:start position:0%
collection right so might think well
okay<00:18:27.360><c> that</c><00:18:27.480><c> seems</c><00:18:27.760><c> like</c><00:18:27.880><c> a</c><00:18:28.000><c> fairly</c><00:18:28.280><c> simple</c>

00:18:28.510 --> 00:18:28.520 align:start position:0%
okay that seems like a fairly simple
 

00:18:28.520 --> 00:18:30.390 align:start position:0%
okay that seems like a fairly simple
thing<00:18:28.840><c> to</c><00:18:29.000><c> do</c><00:18:29.720><c> but</c><00:18:29.840><c> when</c><00:18:29.960><c> you</c><00:18:30.080><c> actually</c><00:18:30.280><c> look</c>

00:18:30.390 --> 00:18:30.400 align:start position:0%
thing to do but when you actually look
 

00:18:30.400 --> 00:18:32.950 align:start position:0%
thing to do but when you actually look
at<00:18:30.520><c> the</c><00:18:30.640><c> codee</c><00:18:30.880><c> that</c><00:18:31.320><c> net</c><00:18:31.720><c> 8</c><00:18:32.159><c> generated</c><00:18:32.679><c> for</c>

00:18:32.950 --> 00:18:32.960 align:start position:0%
at the codee that net 8 generated for
 

00:18:32.960 --> 00:18:35.750 align:start position:0%
at the codee that net 8 generated for
that<00:18:33.200><c> the</c><00:18:33.320><c> code</c><00:18:33.520><c> for</c><00:18:33.760><c> this</c><00:18:34.000><c> is</c><00:18:34.640><c> collection</c><00:18:35.640><c> it</c>

00:18:35.750 --> 00:18:35.760 align:start position:0%
that the code for this is collection it
 

00:18:35.760 --> 00:18:37.710 align:start position:0%
that the code for this is collection it
has<00:18:35.880><c> to</c><00:18:36.080><c> delegate</c><00:18:36.559><c> the</c><00:18:36.760><c> heavy</c><00:18:36.960><c> lifting</c><00:18:37.360><c> off</c><00:18:37.520><c> to</c>

00:18:37.710 --> 00:18:37.720 align:start position:0%
has to delegate the heavy lifting off to
 

00:18:37.720 --> 00:18:39.470 align:start position:0%
has to delegate the heavy lifting off to
this<00:18:38.000><c> helper</c><00:18:38.400><c> method</c><00:18:38.720><c> and</c><00:18:38.799><c> the</c><00:18:38.880><c> helper</c><00:18:39.200><c> method</c>

00:18:39.470 --> 00:18:39.480 align:start position:0%
this helper method and the helper method
 

00:18:39.480 --> 00:18:40.950 align:start position:0%
this helper method and the helper method
I<00:18:39.559><c> don't</c><00:18:39.720><c> have</c><00:18:39.840><c> the</c><00:18:39.960><c> code</c><00:18:40.200><c> here</c><00:18:40.320><c> for</c><00:18:40.520><c> it</c><00:18:40.720><c> but</c>

00:18:40.950 --> 00:18:40.960 align:start position:0%
I don't have the code here for it but
 

00:18:40.960 --> 00:18:42.630 align:start position:0%
I don't have the code here for it but
turns<00:18:41.159><c> out</c><00:18:41.360><c> it</c><00:18:41.520><c> actually</c><00:18:41.760><c> does</c><00:18:41.960><c> a</c><00:18:42.159><c> fair</c><00:18:42.360><c> amount</c>

00:18:42.630 --> 00:18:42.640 align:start position:0%
turns out it actually does a fair amount
 

00:18:42.640 --> 00:18:44.669 align:start position:0%
turns out it actually does a fair amount
of<00:18:42.840><c> analysis</c><00:18:43.480><c> because</c>

00:18:44.669 --> 00:18:44.679 align:start position:0%
of analysis because
 

00:18:44.679 --> 00:18:46.990 align:start position:0%
of analysis because
they're<00:18:45.679><c> implementation</c><00:18:46.200><c> of</c><00:18:46.320><c> interfaces</c><00:18:46.840><c> can</c>

00:18:46.990 --> 00:18:47.000 align:start position:0%
they're implementation of interfaces can
 

00:18:47.000 --> 00:18:49.230 align:start position:0%
they're implementation of interfaces can
go<00:18:47.159><c> through</c><00:18:47.320><c> some</c><00:18:47.559><c> twisty</c><00:18:48.039><c> paths</c><00:18:48.520><c> and</c><00:18:48.640><c> so</c>

00:18:49.230 --> 00:18:49.240 align:start position:0%
go through some twisty paths and so
 

00:18:49.240 --> 00:18:50.830 align:start position:0%
go through some twisty paths and so
there's<00:18:49.440><c> a</c><00:18:49.559><c> lot</c><00:18:49.720><c> of</c><00:18:49.840><c> checking</c><00:18:50.200><c> that</c><00:18:50.360><c> goes</c><00:18:50.520><c> on</c>

00:18:50.830 --> 00:18:50.840 align:start position:0%
there's a lot of checking that goes on
 

00:18:50.840 --> 00:18:53.710 align:start position:0%
there's a lot of checking that goes on
here<00:18:51.559><c> um</c><00:18:52.520><c> and</c><00:18:52.679><c> so</c><00:18:52.919><c> you</c><00:18:53.000><c> know</c><00:18:53.200><c> potentially</c><00:18:53.600><c> it</c>

00:18:53.710 --> 00:18:53.720 align:start position:0%
here um and so you know potentially it
 

00:18:53.720 --> 00:18:56.789 align:start position:0%
here um and so you know potentially it
takes<00:18:53.919><c> a</c><00:18:54.080><c> while</c><00:18:54.840><c> um</c><00:18:55.400><c> now</c><00:18:55.799><c> what</c><00:18:55.919><c> we</c><00:18:56.039><c> did</c><00:18:56.200><c> in</c><00:18:56.600><c> net</c>

00:18:56.789 --> 00:18:56.799 align:start position:0%
takes a while um now what we did in net
 

00:18:56.799 --> 00:18:59.710 align:start position:0%
takes a while um now what we did in net
9<00:18:57.400><c> is</c><00:18:57.919><c> when</c><00:18:58.120><c> we</c><00:18:58.240><c> run</c><00:18:58.520><c> this</c><00:18:58.919><c> version</c><00:18:59.280><c> at</c><00:18:59.440><c> tier</c>

00:18:59.710 --> 00:18:59.720 align:start position:0%
9 is when we run this version at tier
 

00:18:59.720 --> 00:19:01.830 align:start position:0%
9 is when we run this version at tier
zero<00:19:00.159><c> we</c><00:19:00.280><c> sort</c><00:19:00.440><c> of</c><00:19:00.679><c> Watch</c><00:19:01.080><c> What</c><00:19:01.280><c> types</c><00:19:01.559><c> you</c>

00:19:01.830 --> 00:19:01.840 align:start position:0%
zero we sort of Watch What types you
 

00:19:01.840 --> 00:19:04.070 align:start position:0%
zero we sort of Watch What types you
present<00:19:02.200><c> to</c><00:19:02.400><c> this</c><00:19:02.559><c> interface</c><00:19:03.039><c> call</c><00:19:03.640><c> or</c><00:19:03.880><c> this</c>

00:19:04.070 --> 00:19:04.080 align:start position:0%
present to this interface call or this
 

00:19:04.080 --> 00:19:05.710 align:start position:0%
present to this interface call or this
this<00:19:04.200><c> helper</c><00:19:04.480><c> call</c><00:19:04.720><c> we're</c><00:19:04.880><c> like</c><00:19:05.320><c> are</c><00:19:05.480><c> you</c>

00:19:05.710 --> 00:19:05.720 align:start position:0%
this helper call we're like are you
 

00:19:05.720 --> 00:19:07.830 align:start position:0%
this helper call we're like are you
asking<00:19:06.039><c> about</c><00:19:06.360><c> the</c><00:19:06.480><c> same</c><00:19:06.760><c> type</c><00:19:07.159><c> a</c><00:19:07.280><c> lot</c><00:19:07.520><c> and</c><00:19:07.679><c> if</c>

00:19:07.830 --> 00:19:07.840 align:start position:0%
asking about the same type a lot and if
 

00:19:07.840 --> 00:19:09.710 align:start position:0%
asking about the same type a lot and if
so<00:19:08.240><c> maybe</c><00:19:08.480><c> we</c><00:19:08.600><c> can</c><00:19:08.760><c> sort</c><00:19:08.919><c> of</c><00:19:09.120><c> guess</c><00:19:09.400><c> that</c><00:19:09.559><c> that</c>

00:19:09.710 --> 00:19:09.720 align:start position:0%
so maybe we can sort of guess that that
 

00:19:09.720 --> 00:19:11.230 align:start position:0%
so maybe we can sort of guess that that
might<00:19:09.880><c> be</c><00:19:10.039><c> the</c><00:19:10.200><c> type</c><00:19:10.400><c> that</c><00:19:10.480><c> you</c><00:19:10.640><c> ask</c><00:19:10.919><c> about</c>

00:19:11.230 --> 00:19:11.240 align:start position:0%
might be the type that you ask about
 

00:19:11.240 --> 00:19:13.190 align:start position:0%
might be the type that you ask about
here<00:19:11.760><c> and</c><00:19:11.960><c> bypass</c><00:19:12.400><c> all</c><00:19:12.559><c> of</c><00:19:12.679><c> this</c><00:19:12.799><c> and</c><00:19:12.960><c> figure</c>

00:19:13.190 --> 00:19:13.200 align:start position:0%
here and bypass all of this and figure
 

00:19:13.200 --> 00:19:15.230 align:start position:0%
here and bypass all of this and figure
out<00:19:13.360><c> what</c><00:19:13.480><c> the</c><00:19:13.600><c> answer</c><00:19:13.880><c> is</c><00:19:14.039><c> up</c><00:19:14.280><c> front</c><00:19:15.120><c> and</c>

00:19:15.230 --> 00:19:15.240 align:start position:0%
out what the answer is up front and
 

00:19:15.240 --> 00:19:17.470 align:start position:0%
out what the answer is up front and
indeed<00:19:15.600><c> that's</c><00:19:15.799><c> what</c><00:19:15.960><c> we've</c><00:19:16.200><c> actually</c><00:19:16.520><c> done</c>

00:19:17.470 --> 00:19:17.480 align:start position:0%
indeed that's what we've actually done
 

00:19:17.480 --> 00:19:20.029 align:start position:0%
indeed that's what we've actually done
in<00:19:17.960><c> net</c><00:19:18.120><c> 9</c><00:19:18.400><c> so</c><00:19:18.559><c> here's</c><00:19:18.720><c> the</c><00:19:18.880><c> same</c><00:19:19.159><c> code</c><00:19:19.840><c> you'll</c>

00:19:20.029 --> 00:19:20.039 align:start position:0%
in net 9 so here's the same code you'll
 

00:19:20.039 --> 00:19:22.190 align:start position:0%
in net 9 so here's the same code you'll
notice<00:19:20.440><c> that</c><00:19:20.640><c> if</c><00:19:20.720><c> you</c><00:19:20.840><c> look</c><00:19:21.000><c> at</c><00:19:21.120><c> the</c><00:19:21.480><c> Coden</c><00:19:22.039><c> on</c>

00:19:22.190 --> 00:19:22.200 align:start position:0%
notice that if you look at the Coden on
 

00:19:22.200 --> 00:19:23.830 align:start position:0%
notice that if you look at the Coden on
the<00:19:22.360><c> right</c><00:19:22.520><c> at</c><00:19:22.679><c> the</c><00:19:22.840><c> very</c><00:19:23.080><c> bottom</c><00:19:23.440><c> you</c><00:19:23.600><c> still</c>

00:19:23.830 --> 00:19:23.840 align:start position:0%
the right at the very bottom you still
 

00:19:23.840 --> 00:19:25.630 align:start position:0%
the right at the very bottom you still
see<00:19:24.400><c> sometimes</c><00:19:24.600><c> we</c><00:19:24.760><c> have</c><00:19:24.880><c> to</c><00:19:25.000><c> fall</c><00:19:25.280><c> back</c><00:19:25.480><c> to</c>

00:19:25.630 --> 00:19:25.640 align:start position:0%
see sometimes we have to fall back to
 

00:19:25.640 --> 00:19:27.710 align:start position:0%
see sometimes we have to fall back to
that<00:19:25.799><c> General</c><00:19:26.120><c> Helper</c><00:19:26.480><c> and</c><00:19:26.600><c> be</c><00:19:26.720><c> like</c><00:19:27.000><c> hey</c><00:19:27.559><c> we</c>

00:19:27.710 --> 00:19:27.720 align:start position:0%
that General Helper and be like hey we
 

00:19:27.720 --> 00:19:29.390 align:start position:0%
that General Helper and be like hey we
couldn't<00:19:28.000><c> figure</c><00:19:28.280><c> it</c><00:19:28.400><c> out</c><00:19:28.720><c> we</c><00:19:28.840><c> got</c><00:19:28.919><c> to</c><00:19:29.039><c> go</c><00:19:29.200><c> do</c>

00:19:29.390 --> 00:19:29.400 align:start position:0%
couldn't figure it out we got to go do
 

00:19:29.400 --> 00:19:32.029 align:start position:0%
couldn't figure it out we got to go do
the<00:19:29.559><c> general</c><00:19:29.960><c> thing</c><00:19:30.760><c> but</c><00:19:31.240><c> before</c><00:19:31.520><c> we</c><00:19:31.679><c> get</c><00:19:31.799><c> to</c>

00:19:32.029 --> 00:19:32.039 align:start position:0%
the general thing but before we get to
 

00:19:32.039 --> 00:19:33.510 align:start position:0%
the general thing but before we get to
that<00:19:32.200><c> point</c><00:19:32.440><c> we</c><00:19:32.559><c> do</c><00:19:32.720><c> a</c><00:19:32.840><c> couple</c><00:19:33.080><c> of</c><00:19:33.280><c> quick</c>

00:19:33.510 --> 00:19:33.520 align:start position:0%
that point we do a couple of quick
 

00:19:33.520 --> 00:19:36.390 align:start position:0%
that point we do a couple of quick
checks<00:19:34.080><c> like</c><00:19:34.400><c> okay</c><00:19:35.280><c> is</c><00:19:35.520><c> the</c><00:19:35.840><c> object</c><00:19:36.120><c> that</c><00:19:36.240><c> you</c>

00:19:36.390 --> 00:19:36.400 align:start position:0%
checks like okay is the object that you
 

00:19:36.400 --> 00:19:38.830 align:start position:0%
checks like okay is the object that you
pass<00:19:36.760><c> us</c><00:19:37.000><c> not</c><00:19:37.200><c> null</c><00:19:37.760><c> and</c><00:19:37.919><c> if</c><00:19:38.039><c> so</c><00:19:38.360><c> is</c><00:19:38.440><c> it</c><00:19:38.600><c> this</c>

00:19:38.830 --> 00:19:38.840 align:start position:0%
pass us not null and if so is it this
 

00:19:38.840 --> 00:19:40.510 align:start position:0%
pass us not null and if so is it this
specific<00:19:39.280><c> class</c><00:19:39.600><c> that</c><00:19:39.720><c> we</c><00:19:39.799><c> saw</c><00:19:40.000><c> you</c><00:19:40.200><c> asking</c>

00:19:40.510 --> 00:19:40.520 align:start position:0%
specific class that we saw you asking
 

00:19:40.520 --> 00:19:42.950 align:start position:0%
specific class that we saw you asking
about<00:19:40.760><c> a</c><00:19:40.880><c> lot</c><00:19:41.200><c> before</c><00:19:42.159><c> if</c><00:19:42.280><c> the</c><00:19:42.400><c> answer</c><00:19:42.640><c> to</c><00:19:42.799><c> that</c>

00:19:42.950 --> 00:19:42.960 align:start position:0%
about a lot before if the answer to that
 

00:19:42.960 --> 00:19:44.590 align:start position:0%
about a lot before if the answer to that
is<00:19:43.159><c> yes</c><00:19:43.400><c> then</c><00:19:43.559><c> we</c><00:19:43.760><c> actually</c><00:19:43.960><c> know</c><00:19:44.200><c> the</c><00:19:44.320><c> answer</c>

00:19:44.590 --> 00:19:44.600 align:start position:0%
is yes then we actually know the answer
 

00:19:44.600 --> 00:19:46.070 align:start position:0%
is yes then we actually know the answer
and<00:19:44.760><c> we</c><00:19:44.840><c> sort</c><00:19:45.000><c> of</c><00:19:45.120><c> just</c><00:19:45.280><c> quickly</c><00:19:45.600><c> comput</c><00:19:45.919><c> it</c>

00:19:46.070 --> 00:19:46.080 align:start position:0%
and we sort of just quickly comput it
 

00:19:46.080 --> 00:19:48.350 align:start position:0%
and we sort of just quickly comput it
and<00:19:46.240><c> we're</c><00:19:46.480><c> done</c><00:19:47.240><c> so</c><00:19:47.440><c> this</c><00:19:47.559><c> is</c><00:19:47.919><c> another</c><00:19:48.240><c> kind</c>

00:19:48.350 --> 00:19:48.360 align:start position:0%
and we're done so this is another kind
 

00:19:48.360 --> 00:19:50.870 align:start position:0%
and we're done so this is another kind
of<00:19:48.520><c> profile</c><00:19:48.919><c> guided</c><00:19:49.320><c> optimization</c><00:19:50.159><c> where</c><00:19:50.679><c> by</c>

00:19:50.870 --> 00:19:50.880 align:start position:0%
of profile guided optimization where by
 

00:19:50.880 --> 00:19:53.029 align:start position:0%
of profile guided optimization where by
observing<00:19:51.320><c> how</c><00:19:51.440><c> your</c><00:19:51.640><c> code</c><00:19:51.960><c> behaves</c><00:19:52.799><c> we</c><00:19:52.919><c> can</c>

00:19:53.029 --> 00:19:53.039 align:start position:0%
observing how your code behaves we can
 

00:19:53.039 --> 00:19:54.870 align:start position:0%
observing how your code behaves we can
try<00:19:53.200><c> to</c><00:19:53.440><c> anticipate</c><00:19:54.000><c> when</c><00:19:54.120><c> we</c><00:19:54.240><c> go</c><00:19:54.360><c> to</c><00:19:54.520><c> generate</c>

00:19:54.870 --> 00:19:54.880 align:start position:0%
try to anticipate when we go to generate
 

00:19:54.880 --> 00:19:56.310 align:start position:0%
try to anticipate when we go to generate
optimized<00:19:55.360><c> code</c><00:19:55.600><c> that</c><00:19:55.720><c> it's</c><00:19:55.880><c> still</c><00:19:56.080><c> going</c><00:19:56.159><c> to</c>

00:19:56.310 --> 00:19:56.320 align:start position:0%
optimized code that it's still going to
 

00:19:56.320 --> 00:19:58.430 align:start position:0%
optimized code that it's still going to
behave<00:19:56.679><c> that</c><00:19:56.840><c> way</c><00:19:57.400><c> and</c><00:19:57.600><c> provide</c><00:19:57.919><c> these</c><00:19:58.120><c> fast</c>

00:19:58.430 --> 00:19:58.440 align:start position:0%
behave that way and provide these fast
 

00:19:58.440 --> 00:20:00.270 align:start position:0%
behave that way and provide these fast
path<00:19:58.840><c> and</c><00:19:58.960><c> speed</c><00:19:59.280><c> things</c><00:19:59.480><c> up</c><00:19:59.880><c> now</c><00:19:59.960><c> you</c><00:20:00.080><c> might</c>

00:20:00.270 --> 00:20:00.280 align:start position:0%
path and speed things up now you might
 

00:20:00.280 --> 00:20:02.029 align:start position:0%
path and speed things up now you might
think<00:20:00.480><c> this</c><00:20:00.640><c> can't</c><00:20:00.919><c> be</c><00:20:01.159><c> that</c><00:20:01.360><c> big</c><00:20:01.520><c> of</c><00:20:01.600><c> a</c><00:20:01.760><c> deal</c>

00:20:02.029 --> 00:20:02.039 align:start position:0%
think this can't be that big of a deal
 

00:20:02.039 --> 00:20:03.350 align:start position:0%
think this can't be that big of a deal
like<00:20:02.200><c> how</c><00:20:02.320><c> much</c><00:20:02.559><c> difference</c><00:20:02.880><c> is</c><00:20:03.080><c> this</c><00:20:03.280><c> going</c>

00:20:03.350 --> 00:20:03.360 align:start position:0%
like how much difference is this going
 

00:20:03.360 --> 00:20:05.310 align:start position:0%
like how much difference is this going
to<00:20:03.559><c> make</c><00:20:04.120><c> so</c><00:20:04.280><c> here's</c><00:20:04.440><c> some</c><00:20:04.640><c> little</c><00:20:04.799><c> benchmarks</c>

00:20:05.310 --> 00:20:05.320 align:start position:0%
to make so here's some little benchmarks
 

00:20:05.320 --> 00:20:08.270 align:start position:0%
to make so here's some little benchmarks
that<00:20:05.440><c> we</c><00:20:06.000><c> ran</c><00:20:07.000><c> um</c><00:20:07.480><c> you</c><00:20:07.559><c> know</c><00:20:07.799><c> these</c><00:20:08.120><c> sometimes</c>

00:20:08.270 --> 00:20:08.280 align:start position:0%
that we ran um you know these sometimes
 

00:20:08.280 --> 00:20:10.510 align:start position:0%
that we ran um you know these sometimes
are<00:20:08.480><c> kind</c><00:20:08.559><c> of</c><00:20:08.679><c> misleading</c><00:20:09.400><c> because</c><00:20:10.280><c> we're</c>

00:20:10.510 --> 00:20:10.520 align:start position:0%
are kind of misleading because we're
 

00:20:10.520 --> 00:20:11.990 align:start position:0%
are kind of misleading because we're
really<00:20:10.799><c> focusing</c><00:20:11.280><c> here</c><00:20:11.400><c> on</c><00:20:11.600><c> some</c><00:20:11.720><c> of</c><00:20:11.840><c> the</c>

00:20:11.990 --> 00:20:12.000 align:start position:0%
really focusing here on some of the
 

00:20:12.000 --> 00:20:14.350 align:start position:0%
really focusing here on some of the
overhead<00:20:12.559><c> involved</c><00:20:13.159><c> in</c><00:20:13.360><c> doing</c><00:20:13.720><c> these</c><00:20:13.960><c> casts</c>

00:20:14.350 --> 00:20:14.360 align:start position:0%
overhead involved in doing these casts
 

00:20:14.360 --> 00:20:15.669 align:start position:0%
overhead involved in doing these casts
instead<00:20:14.679><c> of</c><00:20:14.799><c> you</c><00:20:14.880><c> know</c><00:20:15.000><c> there's</c><00:20:15.159><c> not</c><00:20:15.280><c> a</c><00:20:15.360><c> lot</c><00:20:15.480><c> of</c>

00:20:15.669 --> 00:20:15.679 align:start position:0%
instead of you know there's not a lot of
 

00:20:15.679 --> 00:20:17.950 align:start position:0%
instead of you know there's not a lot of
computation<00:20:16.320><c> once</c><00:20:16.480><c> you</c><00:20:16.679><c> get</c><00:20:16.880><c> the</c><00:20:17.039><c> answer</c><00:20:17.760><c> but</c>

00:20:17.950 --> 00:20:17.960 align:start position:0%
computation once you get the answer but
 

00:20:17.960 --> 00:20:19.270 align:start position:0%
computation once you get the answer but
still<00:20:18.320><c> these</c><00:20:18.440><c> are</c><00:20:18.640><c> things</c><00:20:18.880><c> that</c><00:20:18.960><c> you</c><00:20:19.120><c> might</c>

00:20:19.270 --> 00:20:19.280 align:start position:0%
still these are things that you might
 

00:20:19.280 --> 00:20:20.630 align:start position:0%
still these are things that you might
end<00:20:19.440><c> up</c><00:20:19.640><c> doing</c><00:20:19.840><c> in</c><00:20:19.960><c> your</c><00:20:20.080><c> code</c><00:20:20.320><c> or</c><00:20:20.440><c> that</c><00:20:20.520><c> your</c>

00:20:20.630 --> 00:20:20.640 align:start position:0%
end up doing in your code or that your
 

00:20:20.640 --> 00:20:22.990 align:start position:0%
end up doing in your code or that your
program<00:20:20.919><c> might</c><00:20:21.120><c> doing</c><00:20:21.440><c> so</c><00:20:22.320><c> if</c><00:20:22.400><c> you</c><00:20:22.520><c> look</c><00:20:22.760><c> at</c>

00:20:22.990 --> 00:20:23.000 align:start position:0%
program might doing so if you look at
 

00:20:23.000 --> 00:20:24.549 align:start position:0%
program might doing so if you look at
the<00:20:23.280><c> at</c><00:20:23.400><c> the</c>

00:20:24.549 --> 00:20:24.559 align:start position:0%
the at the
 

00:20:24.559 --> 00:20:26.909 align:start position:0%
the at the
benchmark.us<00:20:25.559><c> over</c><00:20:25.760><c> there</c><00:20:25.880><c> on</c><00:20:26.039><c> the</c><00:20:26.240><c> right</c><00:20:26.799><c> you</c>

00:20:26.909 --> 00:20:26.919 align:start position:0%
benchmark.us over there on the right you
 

00:20:26.919 --> 00:20:29.149 align:start position:0%
benchmark.us over there on the right you
can<00:20:27.080><c> see</c><00:20:27.360><c> that</c><00:20:27.720><c> you</c><00:20:27.840><c> know</c><00:20:28.000><c> these</c><00:20:28.159><c> things</c>

00:20:29.149 --> 00:20:29.159 align:start position:0%
can see that you know these things
 

00:20:29.159 --> 00:20:31.230 align:start position:0%
can see that you know these things
something<00:20:29.480><c> like</c><00:20:29.600><c> a</c><00:20:29.760><c> factor</c><00:20:30.039><c> of</c><00:20:30.159><c> two</c><00:20:30.600><c> factor</c><00:20:30.919><c> of</c>

00:20:31.230 --> 00:20:31.240 align:start position:0%
something like a factor of two factor of
 

00:20:31.240 --> 00:20:34.350 align:start position:0%
something like a factor of two factor of
you<00:20:31.360><c> know</c><00:20:31.600><c> six</c><00:20:32.080><c> Factor</c><00:20:32.720><c> something</c><00:20:33.360><c> faster</c>

00:20:34.350 --> 00:20:34.360 align:start position:0%
you know six Factor something faster
 

00:20:34.360 --> 00:20:36.350 align:start position:0%
you know six Factor something faster
because<00:20:34.559><c> of</c><00:20:34.720><c> these</c><00:20:34.880><c> changes</c><00:20:35.360><c> so</c><00:20:35.559><c> it</c><00:20:35.760><c> actually</c>

00:20:36.350 --> 00:20:36.360 align:start position:0%
because of these changes so it actually
 

00:20:36.360 --> 00:20:39.789 align:start position:0%
because of these changes so it actually
speeds<00:20:36.840><c> things</c><00:20:37.000><c> up</c><00:20:37.200><c> quite</c><00:20:37.400><c> a</c><00:20:37.520><c> bit</c><00:20:37.760><c> in</c>

00:20:39.789 --> 00:20:39.799 align:start position:0%
speeds things up quite a bit in
 

00:20:39.799 --> 00:20:42.710 align:start position:0%
speeds things up quite a bit in
general<00:20:40.799><c> all</c><00:20:41.000><c> right</c><00:20:41.440><c> and</c><00:20:41.640><c> then</c><00:20:42.240><c> one</c><00:20:42.480><c> last</c>

00:20:42.710 --> 00:20:42.720 align:start position:0%
general all right and then one last
 

00:20:42.720 --> 00:20:47.029 align:start position:0%
general all right and then one last
thing<00:20:43.480><c> um</c><00:20:44.760><c> so</c><00:20:45.760><c> one</c><00:20:45.919><c> of</c><00:20:46.039><c> the</c><00:20:46.280><c> big</c><00:20:46.600><c> powerful</c>

00:20:47.029 --> 00:20:47.039 align:start position:0%
thing um so one of the big powerful
 

00:20:47.039 --> 00:20:49.590 align:start position:0%
thing um so one of the big powerful
features<00:20:47.400><c> in</c><00:20:47.880><c> net</c><00:20:48.320><c> is</c><00:20:48.520><c> are</c><00:20:48.760><c> generic</c><00:20:49.120><c> types</c><00:20:49.400><c> and</c>

00:20:49.590 --> 00:20:49.600 align:start position:0%
features in net is are generic types and
 

00:20:49.600 --> 00:20:52.110 align:start position:0%
features in net is are generic types and
generic<00:20:49.960><c> methods</c><00:20:50.799><c> um</c><00:20:51.440><c> and</c><00:20:51.559><c> there's</c><00:20:51.760><c> a</c><00:20:51.919><c> fair</c>

00:20:52.110 --> 00:20:52.120 align:start position:0%
generic methods um and there's a fair
 

00:20:52.120 --> 00:20:54.029 align:start position:0%
generic methods um and there's a fair
amount<00:20:52.360><c> of</c><00:20:52.520><c> Machinery</c><00:20:53.159><c> under</c><00:20:53.400><c> the</c><00:20:53.559><c> cover</c><00:20:53.880><c> to</c>

00:20:54.029 --> 00:20:54.039 align:start position:0%
amount of Machinery under the cover to
 

00:20:54.039 --> 00:20:55.590 align:start position:0%
amount of Machinery under the cover to
implement<00:20:54.559><c> these</c><00:20:54.760><c> things</c><00:20:54.960><c> and</c><00:20:55.159><c> Implement</c>

00:20:55.590 --> 00:20:55.600 align:start position:0%
implement these things and Implement
 

00:20:55.600 --> 00:20:56.830 align:start position:0%
implement these things and Implement
them

00:20:56.830 --> 00:20:56.840 align:start position:0%
them
 

00:20:56.840 --> 00:20:59.110 align:start position:0%
them
efficiently<00:20:57.840><c> and</c><00:20:58.200><c> we're</c><00:20:58.400><c> always</c><00:20:58.720><c> looking</c><00:20:58.919><c> for</c>

00:20:59.110 --> 00:20:59.120 align:start position:0%
efficiently and we're always looking for
 

00:20:59.120 --> 00:21:00.909 align:start position:0%
efficiently and we're always looking for
ways<00:20:59.320><c> to</c><00:20:59.520><c> get</c><00:20:59.640><c> in</c><00:20:59.880><c> there</c><00:21:00.159><c> and</c><00:21:00.360><c> actually</c><00:21:00.679><c> make</c>

00:21:00.909 --> 00:21:00.919 align:start position:0%
ways to get in there and actually make
 

00:21:00.919 --> 00:21:03.390 align:start position:0%
ways to get in there and actually make
that<00:21:01.080><c> stuff</c><00:21:01.360><c> work</c><00:21:01.679><c> even</c><00:21:01.960><c> better</c><00:21:02.840><c> um</c><00:21:03.240><c> one</c><00:21:03.360><c> of</c>

00:21:03.390 --> 00:21:03.400 align:start position:0%
that stuff work even better um one of
 

00:21:03.400 --> 00:21:04.870 align:start position:0%
that stuff work even better um one of
the<00:21:03.520><c> things</c><00:21:03.679><c> you</c><00:21:03.799><c> may</c><00:21:03.919><c> have</c><00:21:04.039><c> seen</c><00:21:04.240><c> in</c><00:21:04.360><c> the</c><00:21:04.559><c> past</c>

00:21:04.870 --> 00:21:04.880 align:start position:0%
the things you may have seen in the past
 

00:21:04.880 --> 00:21:07.350 align:start position:0%
the things you may have seen in the past
or<00:21:05.080><c> maybe</c><00:21:05.320><c> you</c><00:21:05.480><c> haven't</c><00:21:05.720><c> seen</c><00:21:05.919><c> it</c><00:21:06.280><c> but</c><00:21:06.600><c> uh</c><00:21:07.200><c> is</c>

00:21:07.350 --> 00:21:07.360 align:start position:0%
or maybe you haven't seen it but uh is
 

00:21:07.360 --> 00:21:09.630 align:start position:0%
or maybe you haven't seen it but uh is
that<00:21:07.559><c> when</c><00:21:07.679><c> you</c><00:21:07.960><c> have</c><00:21:08.559><c> say</c><00:21:08.960><c> two</c><00:21:09.280><c> different</c>

00:21:09.630 --> 00:21:09.640 align:start position:0%
that when you have say two different
 

00:21:09.640 --> 00:21:11.230 align:start position:0%
that when you have say two different
generic<00:21:10.080><c> methods</c><00:21:10.520><c> like</c><00:21:10.640><c> here</c><00:21:10.799><c> we</c><00:21:10.919><c> have</c><00:21:11.039><c> two</c>

00:21:11.230 --> 00:21:11.240 align:start position:0%
generic methods like here we have two
 

00:21:11.240 --> 00:21:12.710 align:start position:0%
generic methods like here we have two
different<00:21:11.480><c> generic</c><00:21:11.799><c> methods</c><00:21:12.159><c> called</c><00:21:12.440><c> test</c>

00:21:12.710 --> 00:21:12.720 align:start position:0%
different generic methods called test
 

00:21:12.720 --> 00:21:16.029 align:start position:0%
different generic methods called test
and<00:21:13.279><c> coli</c><00:21:14.279><c> um</c><00:21:14.799><c> that</c><00:21:14.960><c> when</c><00:21:15.120><c> one</c><00:21:15.240><c> of</c><00:21:15.400><c> them</c><00:21:15.559><c> calls</c>

00:21:16.029 --> 00:21:16.039 align:start position:0%
and coli um that when one of them calls
 

00:21:16.039 --> 00:21:18.110 align:start position:0%
and coli um that when one of them calls
another<00:21:17.039><c> sometimes</c><00:21:17.360><c> there</c><00:21:17.480><c> was</c><00:21:17.760><c> actually</c><00:21:18.000><c> a</c>

00:21:18.110 --> 00:21:18.120 align:start position:0%
another sometimes there was actually a
 

00:21:18.120 --> 00:21:19.990 align:start position:0%
another sometimes there was actually a
bunch<00:21:18.320><c> of</c><00:21:18.520><c> extra</c><00:21:18.919><c> computation</c><00:21:19.480><c> that</c><00:21:19.679><c> had</c><00:21:19.840><c> to</c>

00:21:19.990 --> 00:21:20.000 align:start position:0%
bunch of extra computation that had to
 

00:21:20.000 --> 00:21:23.630 align:start position:0%
bunch of extra computation that had to
go<00:21:20.360><c> on</c><00:21:21.360><c> um</c><00:21:22.279><c> because</c><00:21:22.640><c> we</c><00:21:22.799><c> couldn't</c><00:21:23.159><c> effectively</c>

00:21:23.630 --> 00:21:23.640 align:start position:0%
go on um because we couldn't effectively
 

00:21:23.640 --> 00:21:26.510 align:start position:0%
go on um because we couldn't effectively
combine<00:21:24.000><c> them</c><00:21:24.279><c> together</c><00:21:24.600><c> via</c><00:21:25.279><c> inlining</c><00:21:26.279><c> so</c><00:21:26.440><c> if</c>

00:21:26.510 --> 00:21:26.520 align:start position:0%
combine them together via inlining so if
 

00:21:26.520 --> 00:21:29.470 align:start position:0%
combine them together via inlining so if
you<00:21:26.640><c> look</c><00:21:26.760><c> at</c><00:21:27.159><c> net</c><00:21:27.320><c> 8</c><00:21:27.720><c> here</c><00:21:28.200><c> here</c><00:21:28.799><c> have</c><00:21:29.080><c> test</c>

00:21:29.470 --> 00:21:29.480 align:start position:0%
you look at net 8 here here have test
 

00:21:29.480 --> 00:21:31.950 align:start position:0%
you look at net 8 here here have test
calling<00:21:29.880><c> call</c><00:21:30.159><c> E</c><00:21:30.960><c> it</c><00:21:31.080><c> looks</c><00:21:31.320><c> like</c><00:21:31.520><c> sort</c><00:21:31.720><c> of</c><00:21:31.880><c> the</c>

00:21:31.950 --> 00:21:31.960 align:start position:0%
calling call E it looks like sort of the
 

00:21:31.960 --> 00:21:33.390 align:start position:0%
calling call E it looks like sort of the
same<00:21:32.120><c> thing</c><00:21:32.279><c> is</c><00:21:32.400><c> going</c><00:21:32.600><c> on</c><00:21:32.720><c> like</c><00:21:32.840><c> there's</c><00:21:33.000><c> a</c><00:21:33.120><c> t</c>

00:21:33.390 --> 00:21:33.400 align:start position:0%
same thing is going on like there's a t
 

00:21:33.400 --> 00:21:36.390 align:start position:0%
same thing is going on like there's a t
in<00:21:33.559><c> all</c><00:21:33.679><c> of</c><00:21:33.880><c> these</c><00:21:34.520><c> it</c><00:21:34.640><c> turns</c><00:21:34.919><c> out</c><00:21:35.279><c> at</c><00:21:36.159><c> when</c><00:21:36.279><c> we</c>

00:21:36.390 --> 00:21:36.400 align:start position:0%
in all of these it turns out at when we
 

00:21:36.400 --> 00:21:41.430 align:start position:0%
in all of these it turns out at when we
generate<00:21:36.960><c> code</c><00:21:37.760><c> for</c><00:21:38.760><c> um</c><00:21:39.679><c> test</c><00:21:40.679><c> you</c><00:21:40.840><c> know</c><00:21:41.320><c> and</c>

00:21:41.430 --> 00:21:41.440 align:start position:0%
generate code for um test you know and
 

00:21:41.440 --> 00:21:43.549 align:start position:0%
generate code for um test you know and
it's<00:21:41.640><c> calling</c><00:21:42.000><c> Ki</c><00:21:42.520><c> we</c><00:21:42.600><c> don't</c><00:21:42.880><c> necessarily</c>

00:21:43.549 --> 00:21:43.559 align:start position:0%
it's calling Ki we don't necessarily
 

00:21:43.559 --> 00:21:45.190 align:start position:0%
it's calling Ki we don't necessarily
know<00:21:43.919><c> right</c><00:21:44.120><c> ahead</c><00:21:44.320><c> of</c><00:21:44.400><c> time</c><00:21:44.640><c> that</c><00:21:44.760><c> Kali</c><00:21:45.120><c> is</c>

00:21:45.190 --> 00:21:45.200 align:start position:0%
know right ahead of time that Kali is
 

00:21:45.200 --> 00:21:46.950 align:start position:0%
know right ahead of time that Kali is
going<00:21:45.279><c> to</c><00:21:45.440><c> get</c><00:21:45.600><c> the</c><00:21:45.720><c> same</c><00:21:46.000><c> type</c><00:21:46.279><c> that</c><00:21:46.480><c> test</c><00:21:46.720><c> has</c>

00:21:46.950 --> 00:21:46.960 align:start position:0%
going to get the same type that test has
 

00:21:46.960 --> 00:21:48.590 align:start position:0%
going to get the same type that test has
it<00:21:47.039><c> may</c><00:21:47.200><c> seem</c><00:21:47.480><c> weird</c><00:21:47.880><c> but</c><00:21:48.039><c> that's</c><00:21:48.279><c> actually</c>

00:21:48.590 --> 00:21:48.600 align:start position:0%
it may seem weird but that's actually
 

00:21:48.600 --> 00:21:52.669 align:start position:0%
it may seem weird but that's actually
the<00:21:48.720><c> way</c><00:21:48.840><c> it</c><00:21:49.000><c> is</c><00:21:49.840><c> so</c><00:21:50.360><c> when</c><00:21:50.640><c> we</c><00:21:50.799><c> go</c><00:21:50.960><c> to</c><00:21:51.200><c> call</c><00:21:51.919><c> ki</c>

00:21:52.669 --> 00:21:52.679 align:start position:0%
the way it is so when we go to call ki
 

00:21:52.679 --> 00:21:54.070 align:start position:0%
the way it is so when we go to call ki
we<00:21:52.799><c> got</c><00:21:52.880><c> to</c><00:21:53.039><c> go</c><00:21:53.200><c> do</c><00:21:53.360><c> a</c><00:21:53.480><c> bunch</c><00:21:53.640><c> of</c><00:21:53.760><c> work</c><00:21:53.919><c> and</c>

00:21:54.070 --> 00:21:54.080 align:start position:0%
we got to go do a bunch of work and
 

00:21:54.080 --> 00:21:56.269 align:start position:0%
we got to go do a bunch of work and
figure<00:21:54.279><c> out</c><00:21:54.480><c> like</c><00:21:54.679><c> hey</c><00:21:54.919><c> like</c><00:21:55.120><c> what</c><00:21:55.320><c> type</c><00:21:55.559><c> is</c><00:21:55.760><c> K</c>

00:21:56.269 --> 00:21:56.279 align:start position:0%
figure out like hey like what type is K
 

00:21:56.279 --> 00:21:57.789 align:start position:0%
figure out like hey like what type is K
actually<00:21:56.480><c> going</c><00:21:56.600><c> to</c><00:21:56.720><c> be</c><00:21:56.880><c> instantiated</c><00:21:57.520><c> on</c>

00:21:57.789 --> 00:21:57.799 align:start position:0%
actually going to be instantiated on
 

00:21:57.799 --> 00:21:59.950 align:start position:0%
actually going to be instantiated on
here<00:21:58.279><c> and</c><00:21:58.640><c> that</c><00:21:58.840><c> code</c><00:21:59.080><c> in</c><00:21:59.200><c> the</c><00:21:59.400><c> box</c><00:21:59.760><c> where</c><00:21:59.880><c> it</c>

00:21:59.950 --> 00:21:59.960 align:start position:0%
here and that code in the box where it
 

00:21:59.960 --> 00:22:01.750 align:start position:0%
here and that code in the box where it
says<00:22:00.159><c> runtime</c><00:22:00.600><c> lookup</c><00:22:00.960><c> is</c><00:22:01.159><c> actually</c><00:22:01.480><c> going</c>

00:22:01.750 --> 00:22:01.760 align:start position:0%
says runtime lookup is actually going
 

00:22:01.760 --> 00:22:03.870 align:start position:0%
says runtime lookup is actually going
off<00:22:01.919><c> and</c><00:22:02.080><c> doing</c><00:22:02.400><c> this</c><00:22:02.600><c> thing</c><00:22:03.279><c> and</c><00:22:03.400><c> not</c><00:22:03.559><c> only</c><00:22:03.760><c> do</c>

00:22:03.870 --> 00:22:03.880 align:start position:0%
off and doing this thing and not only do
 

00:22:03.880 --> 00:22:06.029 align:start position:0%
off and doing this thing and not only do
you<00:22:03.960><c> see</c><00:22:04.279><c> like</c><00:22:04.400><c> a</c><00:22:04.520><c> bunch</c><00:22:04.720><c> of</c><00:22:05.200><c> checking</c><00:22:05.600><c> you</c><00:22:05.760><c> see</c>

00:22:06.029 --> 00:22:06.039 align:start position:0%
you see like a bunch of checking you see
 

00:22:06.039 --> 00:22:07.750 align:start position:0%
you see like a bunch of checking you see
yet<00:22:06.240><c> again</c><00:22:06.600><c> another</c><00:22:06.880><c> helper</c><00:22:07.200><c> in</c><00:22:07.360><c> there</c><00:22:07.559><c> like</c>

00:22:07.750 --> 00:22:07.760 align:start position:0%
yet again another helper in there like
 

00:22:07.760 --> 00:22:09.630 align:start position:0%
yet again another helper in there like
wait<00:22:07.880><c> a</c><00:22:08.039><c> minute</c><00:22:08.279><c> like</c><00:22:08.440><c> we</c><00:22:08.559><c> got</c><00:22:08.640><c> to</c><00:22:08.840><c> go</c><00:22:09.240><c> and</c><00:22:09.440><c> ask</c>

00:22:09.630 --> 00:22:09.640 align:start position:0%
wait a minute like we got to go and ask
 

00:22:09.640 --> 00:22:11.070 align:start position:0%
wait a minute like we got to go and ask
you<00:22:09.760><c> know</c><00:22:09.960><c> go</c><00:22:10.080><c> to</c><00:22:10.240><c> some</c><00:22:10.400><c> other</c><00:22:10.600><c> piece</c><00:22:10.760><c> of</c><00:22:10.880><c> code</c>

00:22:11.070 --> 00:22:11.080 align:start position:0%
you know go to some other piece of code
 

00:22:11.080 --> 00:22:14.110 align:start position:0%
you know go to some other piece of code
and<00:22:11.279><c> figure</c><00:22:11.600><c> this</c><00:22:11.799><c> thing</c><00:22:12.000><c> out</c><00:22:12.960><c> so</c><00:22:13.640><c> potentially</c>

00:22:14.110 --> 00:22:14.120 align:start position:0%
and figure this thing out so potentially
 

00:22:14.120 --> 00:22:16.710 align:start position:0%
and figure this thing out so potentially
kind<00:22:14.240><c> of</c><00:22:14.400><c> inefficient</c><00:22:15.360><c> um</c><00:22:15.760><c> and</c><00:22:15.919><c> then</c><00:22:16.360><c> when</c><00:22:16.520><c> we</c>

00:22:16.710 --> 00:22:16.720 align:start position:0%
kind of inefficient um and then when we
 

00:22:16.720 --> 00:22:18.710 align:start position:0%
kind of inefficient um and then when we
actually<00:22:16.960><c> go</c><00:22:17.120><c> to</c><00:22:17.400><c> invoke</c><00:22:17.760><c> the</c><00:22:17.919><c> call</c><00:22:18.200><c> E</c><00:22:18.559><c> we</c>

00:22:18.710 --> 00:22:18.720 align:start position:0%
actually go to invoke the call E we
 

00:22:18.720 --> 00:22:20.630 align:start position:0%
actually go to invoke the call E we
can't<00:22:19.000><c> inline</c><00:22:19.440><c> the</c><00:22:19.559><c> code</c><00:22:19.840><c> we</c><00:22:19.960><c> have</c><00:22:20.080><c> to</c><00:22:20.240><c> call</c><00:22:20.480><c> it</c>

00:22:20.630 --> 00:22:20.640 align:start position:0%
can't inline the code we have to call it
 

00:22:20.640 --> 00:22:22.110 align:start position:0%
can't inline the code we have to call it
so<00:22:20.840><c> down</c><00:22:21.000><c> there</c><00:22:21.159><c> at</c><00:22:21.240><c> the</c><00:22:21.360><c> bottom</c><00:22:21.600><c> in</c><00:22:21.720><c> that</c><00:22:21.919><c> thin</c>

00:22:22.110 --> 00:22:22.120 align:start position:0%
so down there at the bottom in that thin
 

00:22:22.120 --> 00:22:24.029 align:start position:0%
so down there at the bottom in that thin
skinny<00:22:22.600><c> box</c><00:22:22.880><c> we're</c><00:22:23.120><c> actually</c><00:22:23.400><c> calling</c><00:22:23.840><c> this</c>

00:22:24.029 --> 00:22:24.039 align:start position:0%
skinny box we're actually calling this
 

00:22:24.039 --> 00:22:27.350 align:start position:0%
skinny box we're actually calling this
method<00:22:24.880><c> um</c><00:22:25.880><c> so</c><00:22:26.400><c> and</c><00:22:26.520><c> if</c><00:22:26.600><c> we</c><00:22:26.760><c> invoke</c><00:22:27.080><c> it</c><00:22:27.200><c> on</c>

00:22:27.350 --> 00:22:27.360 align:start position:0%
method um so and if we invoke it on
 

00:22:27.360 --> 00:22:29.590 align:start position:0%
method um so and if we invoke it on
something<00:22:27.640><c> like</c><00:22:27.799><c> string</c>

00:22:29.590 --> 00:22:29.600 align:start position:0%
something like string
 

00:22:29.600 --> 00:22:32.310 align:start position:0%
something like string
um<00:22:30.279><c> that'll</c><00:22:30.559><c> turn</c><00:22:30.760><c> out</c><00:22:31.039><c> that</c><00:22:31.200><c> string</c><00:22:32.000><c> is</c><00:22:32.120><c> a</c>

00:22:32.310 --> 00:22:32.320 align:start position:0%
um that'll turn out that string is a
 

00:22:32.320 --> 00:22:34.630 align:start position:0%
um that'll turn out that string is a
reference<00:22:32.799><c> type</c><00:22:33.039><c> so</c><00:22:33.320><c> type</c><00:22:33.520><c> of</c><00:22:33.679><c> t.</c><00:22:34.120><c> is</c><00:22:34.279><c> value</c>

00:22:34.630 --> 00:22:34.640 align:start position:0%
reference type so type of t. is value
 

00:22:34.640 --> 00:22:36.789 align:start position:0%
reference type so type of t. is value
type<00:22:34.880><c> is</c><00:22:35.000><c> going</c><00:22:35.120><c> to</c><00:22:35.279><c> be</c><00:22:35.480><c> false</c><00:22:36.200><c> so</c><00:22:36.360><c> we're</c><00:22:36.559><c> doing</c>

00:22:36.789 --> 00:22:36.799 align:start position:0%
type is going to be false so we're doing
 

00:22:36.799 --> 00:22:38.669 align:start position:0%
type is going to be false so we're doing
all<00:22:36.960><c> of</c><00:22:37.120><c> this</c><00:22:37.360><c> work</c><00:22:37.760><c> basically</c><00:22:38.080><c> to</c><00:22:38.440><c> discover</c>

00:22:38.669 --> 00:22:38.679 align:start position:0%
all of this work basically to discover
 

00:22:38.679 --> 00:22:40.149 align:start position:0%
all of this work basically to discover
something<00:22:39.039><c> that</c><00:22:39.440><c> maybe</c><00:22:39.679><c> should</c><00:22:39.840><c> have</c><00:22:39.960><c> been</c>

00:22:40.149 --> 00:22:40.159 align:start position:0%
something that maybe should have been
 

00:22:40.159 --> 00:22:42.190 align:start position:0%
something that maybe should have been
obvious<00:22:40.520><c> to</c><00:22:40.679><c> us</c><00:22:40.840><c> that</c><00:22:41.000><c> the</c><00:22:41.159><c> answer</c><00:22:41.480><c> was</c><00:22:41.679><c> indeed</c>

00:22:42.190 --> 00:22:42.200 align:start position:0%
obvious to us that the answer was indeed
 

00:22:42.200 --> 00:22:43.070 align:start position:0%
obvious to us that the answer was indeed
like

00:22:43.070 --> 00:22:43.080 align:start position:0%
like
 

00:22:43.080 --> 00:22:47.870 align:start position:0%
like
false<00:22:44.080><c> anyway</c><00:22:44.480><c> so</c><00:22:45.039><c> when</c><00:22:45.200><c> we</c><00:22:45.360><c> get</c><00:22:45.520><c> to</c>

00:22:47.870 --> 00:22:47.880 align:start position:0%
false anyway so when we get to
 

00:22:47.880 --> 00:22:49.590 align:start position:0%
false anyway so when we get to
um

00:22:49.590 --> 00:22:49.600 align:start position:0%
um
 

00:22:49.600 --> 00:22:53.789 align:start position:0%
um
net9<00:22:50.600><c> then</c><00:22:51.080><c> the</c><00:22:51.240><c> end</c><00:22:51.679><c> and</c><00:22:51.880><c> the</c><00:22:52.640><c> we</c><00:22:53.000><c> we</c><00:22:53.559><c> excuse</c>

00:22:53.789 --> 00:22:53.799 align:start position:0%
net9 then the end and the we we excuse
 

00:22:53.799 --> 00:22:55.710 align:start position:0%
net9 then the end and the we we excuse
me<00:22:54.320><c> we</c><00:22:54.440><c> managed</c><00:22:54.760><c> to</c><00:22:54.919><c> remove</c><00:22:55.279><c> all</c><00:22:55.520><c> those</c>

00:22:55.710 --> 00:22:55.720 align:start position:0%
me we managed to remove all those
 

00:22:55.720 --> 00:22:57.750 align:start position:0%
me we managed to remove all those
bottlenecks<00:22:56.400><c> about</c><00:22:56.600><c> inlining</c><00:22:57.159><c> from</c><00:22:57.440><c> one</c>

00:22:57.750 --> 00:22:57.760 align:start position:0%
bottlenecks about inlining from one
 

00:22:57.760 --> 00:23:01.590 align:start position:0%
bottlenecks about inlining from one
shared<00:22:58.520><c> generic</c><00:22:58.880><c> method</c><00:22:59.200><c> into</c><00:22:59.640><c> another</c><00:23:00.640><c> um</c>

00:23:01.590 --> 00:23:01.600 align:start position:0%
shared generic method into another um
 

00:23:01.600 --> 00:23:03.870 align:start position:0%
shared generic method into another um
and<00:23:01.840><c> once</c><00:23:02.080><c> we</c><00:23:02.240><c> do</c><00:23:02.520><c> that</c><00:23:02.919><c> we</c><00:23:03.039><c> know</c><00:23:03.240><c> in</c><00:23:03.400><c> this</c><00:23:03.600><c> case</c>

00:23:03.870 --> 00:23:03.880 align:start position:0%
and once we do that we know in this case
 

00:23:03.880 --> 00:23:06.110 align:start position:0%
and once we do that we know in this case
that<00:23:04.039><c> we</c><00:23:04.320><c> have</c><00:23:05.120><c> whenever</c><00:23:05.480><c> we</c><00:23:05.600><c> have</c><00:23:05.720><c> a</c><00:23:05.799><c> Shar</c>

00:23:06.110 --> 00:23:06.120 align:start position:0%
that we have whenever we have a Shar
 

00:23:06.120 --> 00:23:07.950 align:start position:0%
that we have whenever we have a Shar
generic<00:23:06.679><c> the</c><00:23:06.840><c> type</c><00:23:07.080><c> that</c><00:23:07.200><c> it's</c><00:23:07.360><c> being</c><00:23:07.520><c> shared</c>

00:23:07.950 --> 00:23:07.960 align:start position:0%
generic the type that it's being shared
 

00:23:07.960 --> 00:23:09.710 align:start position:0%
generic the type that it's being shared
over<00:23:08.240><c> is</c><00:23:08.400><c> always</c><00:23:08.600><c> a</c><00:23:08.760><c> reference</c><00:23:09.159><c> type</c><00:23:09.400><c> so</c><00:23:09.520><c> it's</c>

00:23:09.710 --> 00:23:09.720 align:start position:0%
over is always a reference type so it's
 

00:23:09.720 --> 00:23:12.230 align:start position:0%
over is always a reference type so it's
never<00:23:09.960><c> a</c><00:23:10.159><c> value</c><00:23:10.520><c> type</c><00:23:11.320><c> and</c><00:23:11.400><c> so</c><00:23:11.720><c> all</c><00:23:12.000><c> this</c>

00:23:12.230 --> 00:23:12.240 align:start position:0%
never a value type and so all this
 

00:23:12.240 --> 00:23:14.029 align:start position:0%
never a value type and so all this
method<00:23:12.520><c> does</c><00:23:12.720><c> in</c><00:23:12.880><c> dot</c><00:23:13.080><c> at</c><00:23:13.279><c> n</c><00:23:13.559><c> is</c><00:23:13.720><c> simply</c>

00:23:14.029 --> 00:23:14.039 align:start position:0%
method does in dot at n is simply
 

00:23:14.039 --> 00:23:17.070 align:start position:0%
method does in dot at n is simply
immediately<00:23:14.679><c> return</c><00:23:15.039><c> false</c><00:23:16.039><c> so</c><00:23:16.360><c> again</c><00:23:16.960><c> you</c>

00:23:17.070 --> 00:23:17.080 align:start position:0%
immediately return false so again you
 

00:23:17.080 --> 00:23:18.750 align:start position:0%
immediately return false so again you
can<00:23:17.240><c> see</c><00:23:17.559><c> you</c><00:23:17.679><c> know</c><00:23:18.000><c> big</c><00:23:18.240><c> difference</c><00:23:18.559><c> in</c>

00:23:18.750 --> 00:23:18.760 align:start position:0%
can see you know big difference in
 

00:23:18.760 --> 00:23:20.630 align:start position:0%
can see you know big difference in
performance<00:23:19.320><c> between</c><00:23:19.760><c> doing</c><00:23:20.120><c> this</c><00:23:20.320><c> kind</c><00:23:20.440><c> of</c>

00:23:20.630 --> 00:23:20.640 align:start position:0%
performance between doing this kind of
 

00:23:20.640 --> 00:23:22.230 align:start position:0%
performance between doing this kind of
stuff<00:23:21.039><c> to</c><00:23:21.400><c> discover</c><00:23:21.600><c> that</c><00:23:21.720><c> the</c><00:23:21.880><c> answer</c><00:23:22.080><c> is</c>

00:23:22.230 --> 00:23:22.240 align:start position:0%
stuff to discover that the answer is
 

00:23:22.240 --> 00:23:24.029 align:start position:0%
stuff to discover that the answer is
false<00:23:22.799><c> and</c><00:23:23.000><c> basically</c><00:23:23.360><c> doing</c><00:23:23.640><c> this</c><00:23:23.799><c> kind</c><00:23:23.919><c> of</c>

00:23:24.029 --> 00:23:24.039 align:start position:0%
false and basically doing this kind of
 

00:23:24.039 --> 00:23:26.669 align:start position:0%
false and basically doing this kind of
thing<00:23:24.240><c> to</c><00:23:24.400><c> know</c><00:23:24.799><c> that</c><00:23:24.919><c> the</c><00:23:25.080><c> answer</c><00:23:25.320><c> is</c><00:23:25.679><c> false</c>

00:23:26.669 --> 00:23:26.679 align:start position:0%
thing to know that the answer is false
 

00:23:26.679 --> 00:23:28.950 align:start position:0%
thing to know that the answer is false
and<00:23:27.039><c> uh</c><00:23:27.480><c> I</c><00:23:27.600><c> had</c><00:23:27.720><c> a</c><00:23:27.840><c> chart</c><00:23:28.039><c> on</c><00:23:28.159><c> here</c><00:23:28.520><c> I</c><00:23:28.600><c> think</c><00:23:28.760><c> I</c><00:23:28.840><c> I</c>

00:23:28.950 --> 00:23:28.960 align:start position:0%
and uh I had a chart on here I think I I
 

00:23:28.960 --> 00:23:30.750 align:start position:0%
and uh I had a chart on here I think I I
must<00:23:29.080><c> have</c><00:23:29.240><c> lost</c><00:23:29.480><c> that</c><00:23:29.600><c> version</c><00:23:29.919><c> but</c><00:23:30.080><c> anyways</c>

00:23:30.750 --> 00:23:30.760 align:start position:0%
must have lost that version but anyways
 

00:23:30.760 --> 00:23:32.430 align:start position:0%
must have lost that version but anyways
this<00:23:31.080><c> this</c><00:23:31.400><c> this</c><00:23:31.600><c> box</c><00:23:31.840><c> here</c><00:23:32.039><c> down</c><00:23:32.159><c> at</c><00:23:32.320><c> the</c>

00:23:32.430 --> 00:23:32.440 align:start position:0%
this this this box here down at the
 

00:23:32.440 --> 00:23:35.350 align:start position:0%
this this this box here down at the
bottom<00:23:33.240><c> is</c><00:23:33.400><c> showing</c><00:23:34.120><c> what</c><00:23:34.400><c> our</c><00:23:34.840><c> Benchmark</c>

00:23:35.350 --> 00:23:35.360 align:start position:0%
bottom is showing what our Benchmark
 

00:23:35.360 --> 00:23:38.549 align:start position:0%
bottom is showing what our Benchmark
system<00:23:35.679><c> told</c><00:23:35.919><c> us</c><00:23:36.480><c> this</c><00:23:37.360><c> this</c><00:23:37.679><c> change</c><00:23:38.080><c> made</c><00:23:38.440><c> in</c>

00:23:38.549 --> 00:23:38.559 align:start position:0%
system told us this this change made in
 

00:23:38.559 --> 00:23:40.909 align:start position:0%
system told us this this change made in
our<00:23:39.080><c> in</c><00:23:39.200><c> our</c><00:23:39.480><c> code</c><00:23:40.120><c> you</c><00:23:40.240><c> can</c><00:23:40.360><c> see</c><00:23:40.480><c> many</c><00:23:40.720><c> many</c>

00:23:40.909 --> 00:23:40.919 align:start position:0%
our in our code you can see many many
 

00:23:40.919 --> 00:23:42.590 align:start position:0%
our in our code you can see many many
benchmarks<00:23:41.400><c> improved</c><00:23:42.159><c> you're</c><00:23:42.400><c> probably</c>

00:23:42.590 --> 00:23:42.600 align:start position:0%
benchmarks improved you're probably
 

00:23:42.600 --> 00:23:44.950 align:start position:0%
benchmarks improved you're probably
going<00:23:42.720><c> to</c><00:23:42.840><c> see</c><00:23:43.039><c> some</c><00:23:43.559><c> you</c><00:23:43.679><c> know</c><00:23:44.559><c> Improvement</c>

00:23:44.950 --> 00:23:44.960 align:start position:0%
going to see some you know Improvement
 

00:23:44.960 --> 00:23:47.149 align:start position:0%
going to see some you know Improvement
in<00:23:45.080><c> your</c><00:23:45.159><c> own</c><00:23:45.400><c> code</c><00:23:46.400><c> if</c><00:23:46.480><c> you</c><00:23:46.600><c> do</c><00:23:46.799><c> this</c><00:23:46.919><c> kind</c><00:23:47.039><c> of</c>

00:23:47.149 --> 00:23:47.159 align:start position:0%
in your own code if you do this kind of
 

00:23:47.159 --> 00:23:49.350 align:start position:0%
in your own code if you do this kind of
thing<00:23:47.279><c> fairly</c><00:23:47.600><c> frequently</c><00:23:48.080><c> so</c><00:23:48.520><c> the</c><00:23:48.640><c> upshot</c><00:23:49.080><c> is</c>

00:23:49.350 --> 00:23:49.360 align:start position:0%
thing fairly frequently so the upshot is
 

00:23:49.360 --> 00:23:50.990 align:start position:0%
thing fairly frequently so the upshot is
with<00:23:49.520><c> this</c><00:23:49.720><c> optimization</c><00:23:50.440><c> generics</c>

00:23:50.990 --> 00:23:51.000 align:start position:0%
with this optimization generics
 

00:23:51.000 --> 00:23:53.669 align:start position:0%
with this optimization generics
basically<00:23:51.480><c> compose</c><00:23:52.039><c> more</c><00:23:52.760><c> uh</c><00:23:52.960><c> compose</c><00:23:53.360><c> better</c>

00:23:53.669 --> 00:23:53.679 align:start position:0%
basically compose more uh compose better
 

00:23:53.679 --> 00:23:56.110 align:start position:0%
basically compose more uh compose better
with<00:23:53.799><c> each</c><00:23:53.919><c> other</c><00:23:54.159><c> they</c><00:23:54.320><c> play</c><00:23:54.520><c> along</c><00:23:55.120><c> nicely</c>

00:23:56.110 --> 00:23:56.120 align:start position:0%
with each other they play along nicely
 

00:23:56.120 --> 00:23:57.590 align:start position:0%
with each other they play along nicely
um<00:23:56.320><c> you</c><00:23:56.440><c> can</c><00:23:56.559><c> use</c><00:23:56.799><c> them</c><00:23:57.000><c> without</c><00:23:57.200><c> worrying</c>

00:23:57.590 --> 00:23:57.600 align:start position:0%
um you can use them without worrying
 

00:23:57.600 --> 00:23:58.830 align:start position:0%
um you can use them without worrying
about<00:23:57.840><c> the</c><00:23:57.960><c> fact</c><00:23:58.120><c> that</c><00:23:58.200><c> when</c><00:23:58.320><c> you</c><00:23:58.440><c> you</c><00:23:58.559><c> cross</c>

00:23:58.830 --> 00:23:58.840 align:start position:0%
about the fact that when you you cross
 

00:23:58.840 --> 00:24:01.470 align:start position:0%
about the fact that when you you cross
from<00:23:59.080><c> one</c><00:23:59.679><c> generic</c><00:24:00.080><c> method</c><00:24:00.360><c> to</c><00:24:00.559><c> another</c><00:24:01.279><c> or</c>

00:24:01.470 --> 00:24:01.480 align:start position:0%
from one generic method to another or
 

00:24:01.480 --> 00:24:03.870 align:start position:0%
from one generic method to another or
from<00:24:01.720><c> one</c><00:24:02.279><c> generic</c><00:24:02.720><c> class</c><00:24:03.039><c> to</c><00:24:03.400><c> methods</c><00:24:03.720><c> of</c>

00:24:03.870 --> 00:24:03.880 align:start position:0%
from one generic class to methods of
 

00:24:03.880 --> 00:24:05.909 align:start position:0%
from one generic class to methods of
another<00:24:04.159><c> generic</c><00:24:04.559><c> class</c><00:24:05.320><c> that</c><00:24:05.520><c> potentially</c>

00:24:05.909 --> 00:24:05.919 align:start position:0%
another generic class that potentially
 

00:24:05.919 --> 00:24:06.990 align:start position:0%
another generic class that potentially
you're<00:24:06.080><c> losing</c><00:24:06.440><c> a</c><00:24:06.520><c> little</c><00:24:06.679><c> bit</c><00:24:06.840><c> of</c>

00:24:06.990 --> 00:24:07.000 align:start position:0%
you're losing a little bit of
 

00:24:07.000 --> 00:24:10.990 align:start position:0%
you're losing a little bit of
performance<00:24:07.919><c> because</c><00:24:08.120><c> of</c><00:24:08.279><c> these</c><00:24:08.960><c> things</c><00:24:10.000><c> um</c>

00:24:10.990 --> 00:24:11.000 align:start position:0%
performance because of these things um
 

00:24:11.000 --> 00:24:14.789 align:start position:0%
performance because of these things um
all<00:24:11.120><c> right</c><00:24:11.320><c> so</c><00:24:11.559><c> let's</c><00:24:11.960><c> wrap</c><00:24:12.240><c> things</c><00:24:12.480><c> up</c><00:24:13.440><c> um</c><00:24:14.120><c> so</c>

00:24:14.789 --> 00:24:14.799 align:start position:0%
all right so let's wrap things up um so
 

00:24:14.799 --> 00:24:17.070 align:start position:0%
all right so let's wrap things up um so
I've<00:24:14.960><c> shown</c><00:24:15.240><c> you</c><00:24:15.520><c> in</c><00:24:15.679><c> the</c><00:24:15.919><c> past</c><00:24:16.240><c> 20</c><00:24:16.559><c> minutes</c><00:24:16.880><c> or</c>

00:24:17.070 --> 00:24:17.080 align:start position:0%
I've shown you in the past 20 minutes or
 

00:24:17.080 --> 00:24:20.110 align:start position:0%
I've shown you in the past 20 minutes or
so<00:24:17.400><c> a</c><00:24:18.000><c> small</c><00:24:18.360><c> sample</c><00:24:19.279><c> of</c><00:24:19.400><c> the</c><00:24:19.520><c> changes</c><00:24:19.880><c> that</c><00:24:20.000><c> we</c>

00:24:20.110 --> 00:24:20.120 align:start position:0%
so a small sample of the changes that we
 

00:24:20.120 --> 00:24:21.870 align:start position:0%
so a small sample of the changes that we
made<00:24:20.279><c> in</c><00:24:20.679><c> net</c><00:24:20.840><c> 9</c><00:24:21.039><c> it</c><00:24:21.120><c> turned</c><00:24:21.360><c> out</c><00:24:21.520><c> we</c><00:24:21.640><c> made</c>

00:24:21.870 --> 00:24:21.880 align:start position:0%
made in net 9 it turned out we made
 

00:24:21.880 --> 00:24:24.950 align:start position:0%
made in net 9 it turned out we made
about<00:24:22.159><c> 1100</c><00:24:22.919><c> changes</c><00:24:23.400><c> to</c><00:24:23.559><c> the</c><00:24:23.720><c> jit</c><00:24:24.559><c> over</c><00:24:24.799><c> the</c>

00:24:24.950 --> 00:24:24.960 align:start position:0%
about 1100 changes to the jit over the
 

00:24:24.960 --> 00:24:28.389 align:start position:0%
about 1100 changes to the jit over the
year<00:24:25.720><c> um</c><00:24:25.960><c> between</c><00:24:26.240><c> donet</c><00:24:26.559><c> 8</c><00:24:26.760><c> and</c><00:24:26.840><c> donet</c><00:24:27.200><c> N</c><00:24:28.159><c> um</c>

00:24:28.389 --> 00:24:28.399 align:start position:0%
year um between donet 8 and donet N um
 

00:24:28.399 --> 00:24:29.950 align:start position:0%
year um between donet 8 and donet N um
clearly<00:24:28.679><c> there's</c><00:24:28.840><c> no</c><00:24:29.000><c> way</c><00:24:29.159><c> I</c><00:24:29.279><c> could</c><00:24:29.440><c> even</c>

00:24:29.950 --> 00:24:29.960 align:start position:0%
clearly there's no way I could even
 

00:24:29.960 --> 00:24:32.350 align:start position:0%
clearly there's no way I could even
bother<00:24:30.279><c> to</c><00:24:30.520><c> you</c><00:24:30.600><c> know</c><00:24:31.320><c> give</c><00:24:31.480><c> you</c><00:24:31.919><c> a</c><00:24:32.039><c> view</c><00:24:32.240><c> of</c>

00:24:32.350 --> 00:24:32.360 align:start position:0%
bother to you know give you a view of
 

00:24:32.360 --> 00:24:34.830 align:start position:0%
bother to you know give you a view of
more<00:24:32.520><c> than</c><00:24:32.679><c> a</c><00:24:32.880><c> very</c><00:24:33.159><c> small</c><00:24:33.559><c> fraction</c><00:24:33.960><c> of</c><00:24:34.120><c> them</c>

00:24:34.830 --> 00:24:34.840 align:start position:0%
more than a very small fraction of them
 

00:24:34.840 --> 00:24:36.269 align:start position:0%
more than a very small fraction of them
I<00:24:35.000><c> try</c><00:24:35.200><c> to</c><00:24:35.279><c> just</c><00:24:35.440><c> highlight</c><00:24:35.720><c> a</c><00:24:35.840><c> few</c><00:24:36.000><c> things</c>

00:24:36.269 --> 00:24:36.279 align:start position:0%
I try to just highlight a few things
 

00:24:36.279 --> 00:24:38.710 align:start position:0%
I try to just highlight a few things
that<00:24:36.440><c> we</c><00:24:36.559><c> thought</c><00:24:36.720><c> were</c><00:24:36.960><c> interesting</c>

00:24:38.710 --> 00:24:38.720 align:start position:0%
that we thought were interesting
 

00:24:38.720 --> 00:24:41.110 align:start position:0%
that we thought were interesting
um<00:24:39.720><c> and</c><00:24:39.840><c> the</c><00:24:39.960><c> good</c><00:24:40.120><c> news</c><00:24:40.399><c> is</c><00:24:40.679><c> the</c><00:24:40.799><c> only</c><00:24:41.000><c> thing</c>

00:24:41.110 --> 00:24:41.120 align:start position:0%
um and the good news is the only thing
 

00:24:41.120 --> 00:24:43.230 align:start position:0%
um and the good news is the only thing
you<00:24:41.279><c> really</c><00:24:41.440><c> need</c><00:24:41.640><c> to</c><00:24:41.799><c> do</c><00:24:42.360><c> to</c><00:24:42.520><c> see</c><00:24:42.720><c> the</c><00:24:42.880><c> benefit</c>

00:24:43.230 --> 00:24:43.240 align:start position:0%
you really need to do to see the benefit
 

00:24:43.240 --> 00:24:45.950 align:start position:0%
you really need to do to see the benefit
of<00:24:43.360><c> all</c><00:24:43.600><c> this</c><00:24:43.760><c> work</c><00:24:44.320><c> is</c><00:24:44.720><c> updated.</c><00:24:45.399><c> net9</c><00:24:45.880><c> you</c>

00:24:45.950 --> 00:24:45.960 align:start position:0%
of all this work is updated. net9 you
 

00:24:45.960 --> 00:24:47.310 align:start position:0%
of all this work is updated. net9 you
don't<00:24:46.120><c> have</c><00:24:46.200><c> to</c><00:24:46.320><c> change</c><00:24:46.640><c> anything</c><00:24:47.000><c> about</c><00:24:47.200><c> the</c>

00:24:47.310 --> 00:24:47.320 align:start position:0%
don't have to change anything about the
 

00:24:47.320 --> 00:24:49.310 align:start position:0%
don't have to change anything about the
way<00:24:47.440><c> you</c><00:24:47.600><c> code</c><00:24:47.960><c> or</c><00:24:48.159><c> deploy</c><00:24:48.600><c> or</c><00:24:48.799><c> anything</c><00:24:49.120><c> like</c>

00:24:49.310 --> 00:24:49.320 align:start position:0%
way you code or deploy or anything like
 

00:24:49.320 --> 00:24:52.029 align:start position:0%
way you code or deploy or anything like
that<00:24:50.200><c> um</c><00:24:50.679><c> you</c><00:24:50.840><c> might</c><00:24:51.039><c> be</c><00:24:51.200><c> curious</c><00:24:51.520><c> to</c><00:24:51.679><c> try</c><00:24:51.880><c> your</c>

00:24:52.029 --> 00:24:52.039 align:start position:0%
that um you might be curious to try your
 

00:24:52.039 --> 00:24:53.549 align:start position:0%
that um you might be curious to try your
code<00:24:52.240><c> on</c><00:24:52.399><c> a</c><00:24:52.520><c> different</c><00:24:52.760><c> platform</c><00:24:53.200><c> like</c><00:24:53.399><c> hey</c>

00:24:53.549 --> 00:24:53.559 align:start position:0%
code on a different platform like hey
 

00:24:53.559 --> 00:24:55.789 align:start position:0%
code on a different platform like hey
maybe<00:24:53.799><c> I</c><00:24:53.880><c> should</c><00:24:54.039><c> run</c><00:24:54.240><c> on</c><00:24:54.399><c> arm64</c><00:24:55.279><c> instead</c><00:24:55.559><c> of</c>

00:24:55.789 --> 00:24:55.799 align:start position:0%
maybe I should run on arm64 instead of
 

00:24:55.799 --> 00:24:58.350 align:start position:0%
maybe I should run on arm64 instead of
on<00:24:55.960><c> Intel</c><00:24:56.320><c> or</c><00:24:56.440><c> whatever</c><00:24:56.840><c> but</c><00:24:57.559><c> you</c><00:24:57.720><c> know</c><00:24:58.080><c> you</c>

00:24:58.350 --> 00:24:58.360 align:start position:0%
on Intel or whatever but you know you
 

00:24:58.360 --> 00:24:59.950 align:start position:0%
on Intel or whatever but you know you
you<00:24:58.559><c> just</c><00:24:58.720><c> pick</c><00:24:58.840><c> up</c><00:24:59.000><c> the</c><00:24:59.080><c> new</c><00:24:59.279><c> release</c><00:24:59.840><c> and</c>

00:24:59.950 --> 00:24:59.960 align:start position:0%
you just pick up the new release and
 

00:24:59.960 --> 00:25:01.310 align:start position:0%
you just pick up the new release and
immediately<00:25:00.399><c> you</c><00:25:00.559><c> get</c><00:25:00.720><c> these</c><00:25:00.880><c> benefits</c>

00:25:01.310 --> 00:25:01.320 align:start position:0%
immediately you get these benefits
 

00:25:01.320 --> 00:25:04.590 align:start position:0%
immediately you get these benefits
without<00:25:01.520><c> changing</c><00:25:01.840><c> your</c><00:25:02.039><c> code</c><00:25:02.279><c> at</c><00:25:02.679><c> all</c><00:25:03.679><c> um</c><00:25:04.399><c> and</c>

00:25:04.590 --> 00:25:04.600 align:start position:0%
without changing your code at all um and
 

00:25:04.600 --> 00:25:05.669 align:start position:0%
without changing your code at all um and
you<00:25:04.720><c> know</c><00:25:04.840><c> we</c><00:25:04.919><c> would</c><00:25:05.039><c> love</c><00:25:05.200><c> to</c><00:25:05.320><c> hear</c><00:25:05.480><c> your</c>

00:25:05.669 --> 00:25:05.679 align:start position:0%
you know we would love to hear your
 

00:25:05.679 --> 00:25:08.269 align:start position:0%
you know we would love to hear your
feedback<00:25:06.360><c> if</c><00:25:06.480><c> you</c><00:25:06.640><c> see</c><00:25:07.000><c> things</c><00:25:07.720><c> when</c><00:25:07.880><c> you</c><00:25:08.000><c> do</c>

00:25:08.269 --> 00:25:08.279 align:start position:0%
feedback if you see things when you do
 

00:25:08.279 --> 00:25:09.830 align:start position:0%
feedback if you see things when you do
this<00:25:08.440><c> where</c><00:25:08.640><c> performance</c><00:25:09.080><c> isn't</c><00:25:09.440><c> what</c><00:25:09.600><c> you</c>

00:25:09.830 --> 00:25:09.840 align:start position:0%
this where performance isn't what you
 

00:25:09.840 --> 00:25:12.870 align:start position:0%
this where performance isn't what you
expect<00:25:10.279><c> or</c><00:25:10.440><c> if</c><00:25:10.640><c> performance</c><00:25:11.120><c> is</c><00:25:11.440><c> is</c><00:25:11.679><c> good</c><00:25:12.360><c> we</c>

00:25:12.870 --> 00:25:12.880 align:start position:0%
expect or if performance is is good we
 

00:25:12.880 --> 00:25:15.110 align:start position:0%
expect or if performance is is good we
always<00:25:13.080><c> love</c><00:25:13.279><c> to</c><00:25:13.399><c> hear</c><00:25:13.600><c> feedback</c><00:25:14.279><c> um</c><00:25:14.840><c> we</c>

00:25:15.110 --> 00:25:15.120 align:start position:0%
always love to hear feedback um we
 

00:25:15.120 --> 00:25:16.630 align:start position:0%
always love to hear feedback um we
especially<00:25:15.559><c> interested</c><00:25:16.080><c> if</c><00:25:16.200><c> you</c><00:25:16.320><c> are</c><00:25:16.480><c> going</c>

00:25:16.630 --> 00:25:16.640 align:start position:0%
especially interested if you are going
 

00:25:16.640 --> 00:25:20.590 align:start position:0%
especially interested if you are going
to<00:25:16.799><c> try</c><00:25:17.039><c> out</c><00:25:17.279><c> arm</c><00:25:17.600><c> 64</c><00:25:18.240><c> and</c><00:25:18.440><c> the</c><00:25:18.600><c> Cobalt</c><00:25:19.279><c> 100</c><00:25:20.279><c> um</c>

00:25:20.590 --> 00:25:20.600 align:start position:0%
to try out arm 64 and the Cobalt 100 um
 

00:25:20.600 --> 00:25:22.909 align:start position:0%
to try out arm 64 and the Cobalt 100 um
and<00:25:20.760><c> try</c><00:25:21.159><c> these</c><00:25:21.399><c> new</c><00:25:21.760><c> experimental</c><00:25:22.399><c> sve</c>

00:25:22.909 --> 00:25:22.919 align:start position:0%
and try these new experimental sve
 

00:25:22.919 --> 00:25:24.470 align:start position:0%
and try these new experimental sve
extensions<00:25:23.440><c> that</c><00:25:23.559><c> we</c><00:25:23.720><c> talked</c><00:25:23.960><c> about</c><00:25:24.279><c> so</c><00:25:24.399><c> if</c>

00:25:24.470 --> 00:25:24.480 align:start position:0%
extensions that we talked about so if
 

00:25:24.480 --> 00:25:26.789 align:start position:0%
extensions that we talked about so if
you<00:25:24.600><c> try</c><00:25:24.720><c> to</c><00:25:24.880><c> vectorize</c><00:25:25.279><c> your</c><00:25:25.399><c> code</c><00:25:25.559><c> in</c><00:25:25.679><c> arm</c><00:25:25.919><c> 64</c>

00:25:26.789 --> 00:25:26.799 align:start position:0%
you try to vectorize your code in arm 64
 

00:25:26.799 --> 00:25:27.830 align:start position:0%
you try to vectorize your code in arm 64
you're<00:25:27.039><c> taking</c><00:25:27.320><c> advantage</c><00:25:27.640><c> of</c><00:25:27.760><c> the</c>

00:25:27.830 --> 00:25:27.840 align:start position:0%
you're taking advantage of the
 

00:25:27.840 --> 00:25:29.470 align:start position:0%
you're taking advantage of the
predication<00:25:28.399><c> and</c><00:25:28.520><c> all</c><00:25:28.600><c> of</c><00:25:28.799><c> that</c><00:25:29.159><c> you</c><00:25:29.279><c> know</c>

00:25:29.470 --> 00:25:29.480 align:start position:0%
predication and all of that you know
 

00:25:29.480 --> 00:25:33.630 align:start position:0%
predication and all of that you know
please<00:25:29.840><c> please</c><00:25:30.120><c> let</c><00:25:30.279><c> us</c><00:25:30.480><c> know</c><00:25:30.840><c> how</c><00:25:31.039><c> it</c>

00:25:33.630 --> 00:25:33.640 align:start position:0%
 
 

00:25:33.640 --> 00:25:36.149 align:start position:0%
 
goes<00:25:34.640><c> and</c><00:25:34.840><c> here</c><00:25:35.000><c> are</c><00:25:35.200><c> our</c><00:25:35.360><c> various</c><00:25:35.679><c> links</c><00:25:35.960><c> for</c>

00:25:36.149 --> 00:25:36.159 align:start position:0%
goes and here are our various links for
 

00:25:36.159 --> 00:25:39.149 align:start position:0%
goes and here are our various links for
some<00:25:36.399><c> things</c><00:25:36.600><c> that</c><00:25:36.760><c> you</c><00:25:36.840><c> can</c><00:25:37.039><c> try</c><00:25:37.799><c> so</c><00:25:38.799><c> you</c><00:25:38.919><c> know</c>

00:25:39.149 --> 00:25:39.159 align:start position:0%
some things that you can try so you know
 

00:25:39.159 --> 00:25:40.710 align:start position:0%
some things that you can try so you know
one<00:25:39.360><c> good</c><00:25:39.520><c> way</c><00:25:39.679><c> to</c><00:25:39.799><c> get</c><00:25:39.919><c> a</c><00:25:40.039><c> hold</c><00:25:40.200><c> of</c><00:25:40.320><c> us</c><00:25:40.520><c> is</c>

00:25:40.710 --> 00:25:40.720 align:start position:0%
one good way to get a hold of us is
 

00:25:40.720 --> 00:25:42.669 align:start position:0%
one good way to get a hold of us is
actually<00:25:40.960><c> to</c><00:25:41.120><c> open</c><00:25:41.360><c> up</c><00:25:41.559><c> issues</c><00:25:41.960><c> on</c><00:25:42.120><c> theet</c>

00:25:42.669 --> 00:25:42.679 align:start position:0%
actually to open up issues on theet
 

00:25:42.679 --> 00:25:45.029 align:start position:0%
actually to open up issues on theet
runtime<00:25:43.279><c> GitHub</c><00:25:43.600><c> repo</c><00:25:44.440><c> we're</c><00:25:44.640><c> super</c>

00:25:45.029 --> 00:25:45.039 align:start position:0%
runtime GitHub repo we're super
 

00:25:45.039 --> 00:25:47.070 align:start position:0%
runtime GitHub repo we're super
responsive<00:25:45.760><c> we</c><00:25:46.039><c> we</c><00:25:46.200><c> generally</c><00:25:46.559><c> are</c><00:25:46.760><c> you</c><00:25:46.840><c> know</c>

00:25:47.070 --> 00:25:47.080 align:start position:0%
responsive we we generally are you know
 

00:25:47.080 --> 00:25:50.070 align:start position:0%
responsive we we generally are you know
quite<00:25:47.399><c> active</c><00:25:48.399><c> looking</c><00:25:48.640><c> for</c><00:25:48.840><c> feedback</c><00:25:49.399><c> and</c>

00:25:50.070 --> 00:25:50.080 align:start position:0%
quite active looking for feedback and
 

00:25:50.080 --> 00:25:51.870 align:start position:0%
quite active looking for feedback and
problems<00:25:50.399><c> that</c><00:25:50.600><c> people</c><00:25:50.880><c> report</c><00:25:51.240><c> or</c><00:25:51.559><c> anything</c>

00:25:51.870 --> 00:25:51.880 align:start position:0%
problems that people report or anything
 

00:25:51.880 --> 00:25:53.630 align:start position:0%
problems that people report or anything
like<00:25:52.080><c> that</c><00:25:52.279><c> or</c><00:25:52.640><c> suggestions</c><00:25:53.120><c> on</c><00:25:53.279><c> how</c><00:25:53.440><c> we</c><00:25:53.520><c> can</c>

00:25:53.630 --> 00:25:53.640 align:start position:0%
like that or suggestions on how we can
 

00:25:53.640 --> 00:25:56.269 align:start position:0%
like that or suggestions on how we can
do<00:25:53.840><c> things</c><00:25:54.240><c> better</c><00:25:55.240><c> I</c><00:25:55.360><c> mentioned</c><00:25:55.679><c> sharp</c><00:25:56.039><c> lab</c>

00:25:56.269 --> 00:25:56.279 align:start position:0%
do things better I mentioned sharp lab
 

00:25:56.279 --> 00:25:59.549 align:start position:0%
do things better I mentioned sharp lab
that's<00:25:56.480><c> the</c><00:25:56.640><c> online</c><00:25:57.200><c> web</c><00:25:57.440><c> viewer</c><00:25:58.480><c> um</c><00:25:59.279><c> you</c><00:25:59.399><c> can</c>

00:25:59.549 --> 00:25:59.559 align:start position:0%
that's the online web viewer um you can
 

00:25:59.559 --> 00:26:02.029 align:start position:0%
that's the online web viewer um you can
try<00:25:59.840><c> and</c><00:26:00.080><c> look</c><00:26:00.200><c> at</c><00:26:00.320><c> your</c><00:26:00.520><c> code</c><00:26:01.320><c> we</c><00:26:01.440><c> did</c><00:26:01.600><c> a</c><00:26:01.720><c> blog</c>

00:26:02.029 --> 00:26:02.039 align:start position:0%
try and look at your code we did a blog
 

00:26:02.039 --> 00:26:04.110 align:start position:0%
try and look at your code we did a blog
post<00:26:02.360><c> talking</c><00:26:02.720><c> about</c><00:26:03.000><c> the</c><00:26:03.159><c> engineering</c><00:26:03.840><c> of</c>

00:26:04.110 --> 00:26:04.120 align:start position:0%
post talking about the engineering of
 

00:26:04.120 --> 00:26:06.190 align:start position:0%
post talking about the engineering of
the<00:26:04.480><c> sve</c><00:26:05.039><c> extensions</c><00:26:05.600><c> that</c><00:26:05.760><c> might</c><00:26:05.919><c> be</c>

00:26:06.190 --> 00:26:06.200 align:start position:0%
the sve extensions that might be
 

00:26:06.200 --> 00:26:09.710 align:start position:0%
the sve extensions that might be
interest<00:26:06.559><c> to</c><00:26:06.880><c> you</c><00:26:07.880><c> um</c><00:26:08.399><c> the</c><00:26:08.679><c> asmo</c><00:26:09.200><c> the</c><00:26:09.320><c> plugin</c>

00:26:09.710 --> 00:26:09.720 align:start position:0%
interest to you um the asmo the plugin
 

00:26:09.720 --> 00:26:11.430 align:start position:0%
interest to you um the asmo the plugin
that<00:26:09.840><c> I</c><00:26:09.919><c> showed</c><00:26:10.200><c> the</c><00:26:10.279><c> VSS</c><00:26:10.559><c> plugin</c><00:26:10.840><c> to</c><00:26:10.960><c> shoot</c><00:26:11.320><c> to</c>

00:26:11.430 --> 00:26:11.440 align:start position:0%
that I showed the VSS plugin to shoot to
 

00:26:11.440 --> 00:26:14.190 align:start position:0%
that I showed the VSS plugin to shoot to
look<00:26:11.600><c> at</c><00:26:11.679><c> the</c><00:26:12.200><c> code</c><00:26:13.200><c> um</c><00:26:13.559><c> and</c><00:26:13.679><c> then</c><00:26:13.799><c> a</c><00:26:13.919><c> couple</c>

00:26:14.190 --> 00:26:14.200 align:start position:0%
look at the code um and then a couple
 

00:26:14.200 --> 00:26:15.870 align:start position:0%
look at the code um and then a couple
issues<00:26:14.520><c> you</c><00:26:14.640><c> might</c><00:26:14.799><c> want</c><00:26:14.880><c> to</c><00:26:15.039><c> look</c><00:26:15.200><c> at</c><00:26:15.480><c> in</c><00:26:15.640><c> our</c>

00:26:15.870 --> 00:26:15.880 align:start position:0%
issues you might want to look at in our
 

00:26:15.880 --> 00:26:19.350 align:start position:0%
issues you might want to look at in our
GitHub<00:26:16.640><c> one</c><00:26:16.960><c> is</c><00:26:17.399><c> a</c><00:26:18.399><c> a</c><00:26:18.600><c> discussion</c><00:26:19.000><c> of</c><00:26:19.120><c> some</c>

00:26:19.350 --> 00:26:19.360 align:start position:0%
GitHub one is a a discussion of some
 

00:26:19.360 --> 00:26:20.789 align:start position:0%
GitHub one is a a discussion of some
enhancements<00:26:19.880><c> to</c><00:26:20.039><c> the</c><00:26:20.159><c> object</c><00:26:20.480><c> stack</c>

00:26:20.789 --> 00:26:20.799 align:start position:0%
enhancements to the object stack
 

00:26:20.799 --> 00:26:22.549 align:start position:0%
enhancements to the object stack
allocation<00:26:21.360><c> phase</c><00:26:21.679><c> that</c><00:26:21.840><c> I've</c><00:26:22.000><c> talked</c><00:26:22.320><c> about</c>

00:26:22.549 --> 00:26:22.559 align:start position:0%
allocation phase that I've talked about
 

00:26:22.559 --> 00:26:25.190 align:start position:0%
allocation phase that I've talked about
earlier<00:26:23.480><c> and</c><00:26:23.640><c> another</c><00:26:24.080><c> is</c><00:26:24.240><c> our</c><00:26:24.480><c> proposed</c><00:26:24.880><c> work</c>

00:26:25.190 --> 00:26:25.200 align:start position:0%
earlier and another is our proposed work
 

00:26:25.200 --> 00:26:28.870 align:start position:0%
earlier and another is our proposed work
for<00:26:25.760><c> Net</c><00:26:25.919><c> 10</c><00:26:26.559><c> anyways</c><00:26:27.240><c> so</c><00:26:28.279><c> feel</c><00:26:28.440><c> free</c><00:26:28.600><c> to</c><00:26:28.679><c> check</c>

00:26:28.870 --> 00:26:28.880 align:start position:0%
for Net 10 anyways so feel free to check
 

00:26:28.880 --> 00:26:30.190 align:start position:0%
for Net 10 anyways so feel free to check
those<00:26:29.039><c> things</c><00:26:29.240><c> out</c><00:26:29.480><c> again</c><00:26:29.679><c> get</c><00:26:29.799><c> a</c><00:26:29.880><c> hold</c><00:26:30.000><c> of</c><00:26:30.120><c> if</c>

00:26:30.190 --> 00:26:30.200 align:start position:0%
those things out again get a hold of if
 

00:26:30.200 --> 00:26:32.510 align:start position:0%
those things out again get a hold of if
you<00:26:30.279><c> have</c><00:26:30.399><c> any</c><00:26:30.640><c> questions</c><00:26:31.640><c> and</c><00:26:31.840><c> with</c><00:26:32.039><c> that</c><00:26:32.399><c> I</c>

00:26:32.510 --> 00:26:32.520 align:start position:0%
you have any questions and with that I
 

00:26:32.520 --> 00:26:34.029 align:start position:0%
you have any questions and with that I
want<00:26:32.640><c> to</c><00:26:32.840><c> thank</c><00:26:33.000><c> you</c><00:26:33.200><c> very</c><00:26:33.399><c> much</c><00:26:33.679><c> for</c>

00:26:34.029 --> 00:26:34.039 align:start position:0%
want to thank you very much for
 

00:26:34.039 --> 00:26:37.480 align:start position:0%
want to thank you very much for
listening<00:26:34.480><c> in</c>


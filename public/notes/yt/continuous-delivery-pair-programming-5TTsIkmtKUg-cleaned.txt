[Music]
I find user groups really helpful for in
some ways some of the similar things I
was just talking about I like to connect
with real developers what are you doing
what are you working on um so for
example when we first moved to Seville
and um we were talking about the stuff
that isra and I were talking about the
stuff that we've been doing together in
in our team and saying obviously we
thought test driven development was a
little bit out there not everyone's
going to write their tests first but a
lot of developers were saying they're
not writing unit tests at all and we
were like oh right okay and you get a
sense for like you can gauge where is
the development Community generally
where you know if you're going to be
telling them about like Advanced
intelligent idea use for test driven
development with continuous delivery and
and they're here going I don't know how
to write unit test like you're not doing
advocacy properly you're not helping
these people you just you know it's it's
a massive disconnect so
is really helpful for figuring out from
from my job point of view as a developer
Advocate is really helpful for research
purposes but it's also because I'm
really interested in our community and
what we're doing what we're doing right
and what we're doing wrong or not great
I'm just kind of curious about like how
are companies working these days um so
for example things I don't know about
are you using Docker like how are you
using Docker what's Docker for you know
the sorts of things that that I didn't
get to to work on when I was doing
engineering because um it wasn't
invented yet um so you still use it I
still use it for research purposes um so
yeah so those the that's I think that's
the main reason I'm still involved in
the community um and I get a you can
again from a selfish point of view I can
get a lot of feedback on things like I
often give the first pass of my talk at
at the local user group so I can have a
friendly audience who will come to me
honestly and say I didn't understand
this or this didn't make sense or or
this bit's really great so it's it's
good for that sort of thing but mostly
it's just good to connect with people
and and find out like what are they up
to what's what's good what's bad like
what's fun or like again eventually
maybe one day maybe there'll be someone
working for a company and you'll be like
yeah I'd quite like to work for that
company yeah yeah you you you were
talking about
that a bit from your perspective do you
think user groups give the same kinds of
advantages to people earlier on in their
career and finding their feet a bit I'm
just I'm just thinking about the stuff
that you were say you were saying uh at
the beginning about um
just starting to kind of soak in a
little bit about what it's really like
and you know what what the local local
environment you know job environment and
stuff like I think for I think for
juniors I mean I would highly recommend
Juniors people just start well honestly
I highly recomend recommend anyone to to
join a user group whether it's virtual
or in person but for juniors I think
there's a huge gap and my colleague
Helen's done a presentation about this
actually there's a gap between what you
learn at University or in boot camp
versus what you actually need to do in
your job um and when we were in the
London Java community so Barry who was
running the London Java Community was
also running The Graduate developer
Community um and there was obviously it
was a good thing a lot of bleed between
well mostly from the graduates to the
London Java Community because the
graduates are like what do I really need
to know to to get a job what's it really
like to to work in the industry do I
need to learn um you know do I need to
learn the solid principles and You' be
like no you need to learn GID right you
know the it's a very different set of
set of things that you're going to need
to learn and and again one of the things
that one of the things a lot of the
graduates ask is they they they come out
of University or the Boot Camp or
whatever and they just see how huge the
the ecosystem is like even if it's just
Java or just the jvm but like if you
expand it to web and all the rest of it
it's like there's so many Frameworks so
many technology so many things to learn
and as soon as you get on on track with
one then that becomes out of fashion and
something else comes and then comes and
kubernetes and and it's not just about
languages it's about infrastructure and
like we said communication skills and
architecture and it's enormously
overwhelming and you feel like you feel
like you just got a handle on on the
stuff you needed to to pass whatever you
needed to pass and now you've had your
eyes opened to wow I don't know anything
and there's no way I'm going to be able
to learn any of this stuff let alone all
of it but coming to a user group I think
and speaking to people they're like no
I'm not not using kubernetes and Docker
I'm doing Java but only this bit of java
and it's really important that you know
these four git commands but the rest of
it doesn't matter you know and and
getting a sense of what's really
important it's a bit like learning a new
natural language like I've been trying
to learn Spanish obviously for like six
years well more than that we moved here
eight years ago and I'm not fluent in
Spanish but I definitely I can order a
cup of coffee I can get a taxi to take
me somewhere you know I can do those
core things and then you build around
that it's the same thing with techn you
don't need to know all of Docker and all
of I don't know Scara or whatever it is
you just need to know you need to know
which bits you need to know and and
going to a user group will give you a
much better sense of like what's really
important and and what's not important I
also think and this is something I've
been really trying to to do with my work
as a developer Advocate it's really
important for senior people who are
experienced with lots of years in the
industry to say I don't know about right
so there's a lot of things I don't know
about I have done JavaScript in the past
I have been a web dev in the past I
don't know the JavaScript Frameworks
right now and and I'm fine with that if
I end up working in a in a team where I
need to know that like we're talking
about learning I know that I can learn
that but I'll learn it when I learn it
I'm not going to learn every single
JavaScript framework now just in case I
need one of them later on that's fine
you know
and I I I don't I don't think that we as
an industry do a very good job
of defining what the ground rules are
the the the the kind
you know what are the things that allow
you know you and I that that have some
people that have some experience to be
able to judge how much we have to learn
about a particular technology or a
particular practice or stuff what what
are the things that allow us to to pick
and choose you know and steer our
learning because there is too much to
learn there is there is almost zero
value in you learning the entire command
set of git or you know
every last attribute of I don't know um
reactjs or whatever I don't care I I'm I
I I'm A reduced instruction set
programmer I there's lots and lots of
stuff that I don't know and I don't care
about and it seems to me that part of
the skill and the experience the benefit
of experience is to be able to more
quickly and more accurately choose the
things that are worth you know that you
need you in order to be able to achieve
some outcome that that's kind of a I'm
sorry I'm advertising my book but but
that's kind of the sort of stuff that
was in the back of my mind when I
started writing my book was to try and
figure out what those sorts of things
were that you could look for to try and
steer you through that course because I
don't think that there's I think that's
a difficult problem one you you you you
one of the things that you said just
then resonated with me I did um I did a
video quite a long time ago now on my
YouTube channel that was focused
specifically at Junior developers and
giving them some advice and one of those
was you know nobody knows everything and
you know start you know and
it's ignorance is not a problem that's
just a fact of life for software
developers in their career and that was
the one that landed most I've got loads
and loads of comments from people
relatively new in their career oh I've
never heard anybody say that that's
great thing to you know we because I
don't know I don't know why that doesn't
you
that doesn't S translate but it's it
seems obvious to you you and I at at our
stage in our career because we we're
used to know knowing that we know
nothing you know yes almost and dealing
with I think what we see when we when we
go to conferences or when we look at
videos or when we read books what we see
is someone with experience giving their
very well thought out very well planned
experience on that thing they know
really well and you're like oh my
goodness this person he he CU usually he
it's not always he person he really
knows what he's talking about and like I
don't really I'll never be that good but
of course what that person doesn't say
is okay I know all about Java um but I
don't know anything about git or or like
we say I don't know anything about
JavaScript or I've never I've only
worked in client server I've never
worked in micros Services whatever you
know and and I think that's what one of
the things I've been trying to normalize
with some of the advocacy I've been
doing is you know one of the reasons I
do live demos on stage is because it
will go wrong and be like okay pair with
me tell me what you think this is that's
going wrong what have I done and it's
always something different you know you
can't predict that sort of thing and I
really want to normalize like we had
with a pair programming experience you
don't know what you're doing half the
time and things go wrong and if you work
together you you can find a solution as
opposed to this this attitude that we
sometimes see in our in our industry of
haha you don't know what you're doing
I'm better than you like I don't care
like I don't care if you're better than
me like you're better than me at
something and I'm better than you at
something else and that's it's not zero
yeah that's that that's that's what it's
it's one of the things that I like so
much about
pairing is that everybody's better than
everybody else at something and I want
to learn the things that you're I want
to learn from you the things that you
can teach me and you know in in in
payments I will I will try and teach you
the things the things that that I know
and that's one of the benefits that's
what work so well in our team I think
because we were a team of um you know we
had we came from different places we we
worked in we had worked in different
parts part of the industry some of us
geographically different places and we
all came and we all we all learned the
good bits from everybody nobody dragged
anyone down the Juniors asked amazing
questions like I remember the first few
times the Juniors would ask me so I had
what 10 years experience and the Juniors
would say why are you doing it this way
and as soon as you find yourself
answering because I always have done it
that way you're like you know you get
challenged to think things through and
then working with people like um people
like Amir and yourself who knew intellig
idea really well like oh wow I should
really learn how to do these things and
we all leveled up no one dragged anyone
down there's no slowing each other down
it's it's just yeah we all learn off
each other this clip was taken from my
podcast the engineering room with Dave
Farley a monthly podcast with some of
the brightest Minds in software
engineering you can find full episodes
on all your favorite podcast platforms
including Spotify Apple podcasts and
Amazon music your support helps us to
bring you these regular episodes so
please leave your positive review on
your preferred podcast platform to help
us to continue to grow and bring you
great guests and their Insight thank you
very much for listening
